section,page,entity,relation
2.1,0,"('linear algebra', 'mathematics', 'science', 'engineering', 'computer scientists', 'machine learning algorithms', 'deep learning algorithms', 'linear algebra prerequisites', 'formulas', 'resource', 'teaching linear algebra', 'important linear algebra topics')","('linear algebra', 'instance of', 'mathematics')
('mathematics', 'instance of', 'science')
('science', 'instance of', 'engineering')
('computer scientists', 'subject of', 'engineering')
('machine learning algorithms', 'subject of', 'engineering')
('deep learning algorithms', 'subject of', 'engineering')
('linear algebra prerequisites', 'based on', 'linear algebra')
('formulas', 'based on', 'linear algebra')
('resource', 'based on', 'linear algebra')
('teaching linear algebra', 'based on', 'linear algebra')
('important linear algebra topics', 'based on', 'linear algebra')"
2.1,1,"('Linear Algebra', 'real-valued scalar', 'natural number scalar', 'vector', 'R', 'Cartesian product', 'Rn', 'column', 'points in space', 'indices', 'set', 'complement', 'Matrices', '2-D array', 'real-valued matrix', 'height', 'width', 'horizontal coordinate', 'vertical coordinate', 'i-th row')","('Linear Algebra', 'instance of', 'Mathematics')
('real-valued scalar', 'instance of', 'scalar')
('natural number scalar', 'subclass of', 'scalar')
('vector', 'instance of', 'Mathematics')
('R', 'instance of', 'Real numbers')
('Cartesian product', 'instance of', 'set theory')
('Rn', 'instance of', 'set')
('column', 'instance of', 'vector')
('points in space', 'instance of', 'geometry')
('indices', 'instance of', 'Mathematics')
('set', 'instance of', 'Mathematics')
('complement', 'instance of', 'set theory')
('Matrices', 'instance of', 'Mathematics')
('2-D array', 'subclass of', 'Matrices')
('real-valued matrix', 'subclass of', 'Matrices')
('height', 'instance of', 'Mathematics')
('width', 'instance of', 'Mathematics')
('horizontal coordinate', 'instance of', 'geometry')
('vertical coordinate', 'instance of', 'geometry')
('i-th row', 'instance of', 'Mathematics')"
2.1,2,"('Linear Algebra', 'transpose', 'matrix', 'main diagonal', 'array', 'coordinates', 'tensor', 'operation', 'vector')","('Linear Algebra', 'transpose', 'matrix')
('matrix', 'main diagonal', 'array')
('array', 'coordinates', 'tensor')
('tensor', 'operation', 'vector')"
2.2,0,"('Linear Algebra', 'vector', 'transpose operator', 'standard column vector', 'scalar', 'matrix', 'single entry', 'transpose', 'add matrices', 'same shape', 'corresponding elements', 'add a scalar', 'multiply a matrix', 'performing that operation o...implicit copying', 'broadcasting', 'Multiplying Matrices', 'matrix product', 'third matrix', 'product is defined', 'number of columns', 'number of rows', 'shape', 'matrix product', 'individual elements', 'element-wise product', 'Hadamard product', 'dot product')","('Linear Algebra', 'part of', 'vector')
('transpose operator', 'instance of', 'standard column vector')
('scalar', 'instance of', 'matrix')
('single entry', 'part of', 'matrix')
('transpose', 'instance of', 'add matrices')
('same shape', 'part of', 'corresponding elements')
('add a scalar', 'part of', 'multiply a matrix')
('performing that operation on all elements', 'part of', 'broadcasting')
('Multiplying Matrices', 'part of', 'matrix product')
('third matrix', 'part of', 'product is defined')
('number of columns', 'part of', 'shape')
('number of rows', 'part of', 'shape')
('matrix product', 'instance of', 'individual elements')
('element-wise product', 'instance of', 'Hadamard product')
('dot product', 'instance of', 'matrix product')"
2.2,1,"('linear algebra', 'matrix product operations', 'mathematical analysis', 'matrix multiplication', 'distributive', 'associative', 'commutative', 'dot product', 'transpose of a matrix product', 'linear equations', 'known matrix', 'known vector', 'unknown variables', 'constraint')","('linear algebra', 'part of', 'matrix product operations')
('matrix multiplication', 'instance of', 'mathematical analysis')
('distributive', 'part of', 'matrix multiplication')
('associative', 'part of', 'matrix multiplication')
('commutative', 'part of', 'matrix multiplication')
('dot product', 'part of', 'matrix multiplication')
('transpose of a matrix product', 'part of', 'matrix multiplication')
('linear equations', 'part of', 'matrix multiplication')
('known matrix', 'part of', 'linear equations')
('known vector', 'part of', 'linear equations')
('unknown variables', 'part of', 'linear equations')
('constraint', 'part of', 'linear equations')"
2.3,0,"('identity matrix', 'matrix inversion', 'matrix-vector product notation', 'inverse matrices', 'identity matrix', 'matrix inverse')","('identity matrix', 'part of', 'matrix inversion')
('matrix-vector product notation', 'part of', 'matrix inversion')
('inverse matrices', 'part of', 'matrix inversion')
('identity matrix', 'instance of', 'matrix inverse')
('matrix inverse', 'instance of', 'matrix inversion')"
2.4,0,"('linear combination', 'span')","('linear combination', 'part of', 'span')
('span', 'instance of', 'linear combination')"
2.4,1,"('column space', 'range of A', 'linear dependence', 'linearly independent', 'redundancy', 'linear combination', 'span', 'singular matrix')","('column space', 'part of', 'range of A')
('linear dependence', 'part of', 'column space')
('linearly independent', 'part of', 'column space')
('redundancy', 'part of', 'column space')
('linear combination', 'instance of', 'span')
('span', 'instance of', 'column space')
('singular matrix', 'part of', 'column space')"
2.5,0,"('Linear Algebra', 'matrix inverses', 'size of a vector', 'machine learning', 'norms', 'Lp norm', 'Euclidean norm', 'squared L2 norm')","('matrix inverses', 'subclass of', 'Linear Algebra')
('size of a vector', 'based on', 'Linear Algebra')
('Lp norm', 'subclass of', 'norms')
('Euclidean norm', 'subclass of', 'norms')
('squared L2 norm', 'subclass of', 'norms')"
2.6,0,"('Linear Algebra', 'L1 norm', 'L0 norm', 'L norm', 'max norm', 'matrix', 'Frobenius norm', 'dot product', 'vectors', 'Diagonal matrices')","('Linear Algebra', 'subclass of', 'mathematics')
('L1 norm', 'subclass of', 'norm')
('L0 norm', 'subclass of', 'norm')
('L norm', 'subclass of', 'norm')
('max norm', 'subclass of', 'norm')
('matrix', 'subclass of', 'mathematics')
('Frobenius norm', 'subclass of', 'norm')
('dot product', 'use', 'vectors')
('vectors', 'subclass of', 'mathematics')
('Diagonal matrices', 'subclass of', 'matrix')"
2.6,1,"('Linear Algebra', 'diagonal matrix', 'identity matrix', 'computationally efficient', 'inverse', 'machine learning algorithm', 'arbitrary matrices', 'symmetric matrix', 'unit vector', 'orthogonal vectors', 'orthonormal', 'orthogonal matrix')","('Linear Algebra', 'subclass of', 'mathematics')
('diagonal matrix', 'subclass of', 'matrix')
('identity matrix', 'subclass of', 'diagonal matrix')
('computationally efficient', 'subclass of', 'property')
('inverse', 'subclass of', 'property')
('machine learning algorithm', 'subclass of', 'algorithm')
('arbitrary matrices', 'subclass of', 'matrix')
('symmetric matrix', 'subclass of', 'matrix')
('unit vector', 'subclass of', 'vector')
('orthogonal vectors', 'subclass of', 'vector')
('orthonormal', 'subclass of', 'property')
('orthogonal matrix', 'subclass of', 'matrix')"
2.7,0,"('Linear Algebra', 'orthogonal matrices', 'eigendecomposition', 'mathematical objects', 'constituent parts', 'prime factors', 'integers', 'matrix decomposition', 'eigenvectors', 'eigenvalues')","('orthogonal matrices', 'instance of', 'Linear Algebra')
('eigendecomposition', 'instance of', 'Linear Algebra')
('mathematical objects', 'based on', 'Linear Algebra')
('constituent parts', 'part of', 'mathematical objects')
('prime factors', 'based on', 'integers')
('matrix decomposition', 'based on', 'Linear Algebra')
('eigenvectors', 'based on', 'eigendecomposition')
('eigenvalues', 'based on', 'eigendecomposition')"
2.7,1,"('Linear Algebra', 'eigenvectors', 'eigenvalues', 'orthonormal eigenvectors', 'eigendecomposition', 'matrix decomposition', 'unit circle', 'matrix A', 'matrix V', 'vector λ', 'integer')","('eigenvectors', 'based on', 'Linear Algebra')
('eigenvalues', 'based on', 'Linear Algebra')
('orthonormal eigenvectors', 'facet of', 'eigenvectors')
('eigendecomposition', 'based on', 'Linear Algebra')
('matrix decomposition', 'based on', 'Linear Algebra')
('unit circle', 'instance of', 'Linear Algebra')
('matrix A', 'instance of', 'Linear Algebra')
('matrix V', 'instance of', 'Linear Algebra')
('vector λ', 'instance of', 'Linear Algebra')
('integer', 'subclass of', 'Linear Algebra')"
2.8,0,"('Linear Algebra', 'eigenvectors', 'eigenvalues', 'orthogonal matrix', 'diagonal matrix', 'eigendecomposition', 'quadratic expressions', 'positive definite', 'positive semidefinite', 'negative definite', 'negative semidefinite', 'Singular Value Decomposition', 'singular vectors', 'singular values')","('Linear Algebra', 'instance of', 'eigenvectors')
('Linear Algebra', 'instance of', 'eigenvalues')
('Linear Algebra', 'instance of', 'orthogonal matrix')
('Linear Algebra', 'instance of', 'diagonal matrix')
('Linear Algebra', 'instance of', 'eigendecomposition')
('Linear Algebra', 'instance of', 'quadratic expressions')
('Linear Algebra', 'instance of', 'positive definite')
('Linear Algebra', 'instance of', 'positive semidefinite')
('Linear Algebra', 'instance of', 'negative definite')
('Linear Algebra', 'instance of', 'negative semidefinite')
('Linear Algebra', 'instance of', 'Singular Value Decomposition')
('Linear Algebra', 'instance of', 'singular vectors')
('Linear Algebra', 'instance of', 'singular values')"
2.9,0,"('Linear Algebra', 'SVD', 'eigenvalue decomposition', 'matrix', 'singular value decomposition', 'eigendecomposition', 'matrix A', 'matrix V', 'eigenvectors', 'eigenvalues', 'matrix U', 'matrix D', 'diagonal matrix', 'singular values', 'left-singular vectors', 'right-singular vectors', 'non-zero singular values', 'Moore-Penrose Pseudoinverse', 'matrix inversion', 'left-inverse', 'linear equation')","('Linear Algebra', 'instance of', 'mathematical discipline')
('SVD', 'instance of', 'singular value decomposition')
('eigenvalue decomposition', 'instance of', 'matrix decomposition')
('matrix', 'instance of', 'mathematical object')
('singular value decomposition', 'instance of', 'matrix decomposition')
('eigendecomposition', 'instance of', 'matrix decomposition')
('matrix A', 'instance of', 'matrix')
('matrix V', 'instance of', 'matrix')
('eigenvectors', 'instance of', 'vector')
('eigenvalues', 'instance of', 'scalar')
('matrix U', 'instance of', 'matrix')
('matrix D', 'instance of', 'matrix')
('diagonal matrix', 'instance of', 'matrix')
('singular values', 'instance of', 'scalar')
('left-singular vectors', 'instance of', 'vector')
('right-singular vectors', 'instance of', 'vector')
('non-zero singular values', 'instance of', 'scalar')
('Moore-Penrose Pseudoinverse', 'instance of', 'matrix')
('matrix inversion', 'instance of', 'matrix operation')
('left-inverse', 'instance of', 'matrix operation')
('linear equation', 'instance of', 'mathematical equation')"
2.10,0,"('linear algebra', 'mapping', 'Moore-Penrose pseudoinverse', 'matrix', 'algorithms', 'computation', 'singular value decomposition', 'diagonal matrix', 'Euclidean norm', 'linear equation', 'Trace Operator')","('linear algebra', 'instance of', 'matrix')
('mapping', 'instance of', 'algorithms')
('Moore-Penrose pseudoinverse', 'instance of', 'matrix')
('matrix', 'based on', 'linear algebra')
('algorithms', 'instance of', 'computation')
('computation', 'instance of', 'algorithms')
('singular value decomposition', 'instance of', 'matrix')
('diagonal matrix', 'instance of', 'matrix')
('Euclidean norm', 'instance of', 'matrix')
('linear equation', 'instance of', 'matrix')
('Trace Operator', 'instance of', 'matrix')"
2.11,0,"('matrix products', 'trace operator', 'Frobenius norm', 'transpose operator', 'square matrix', 'factors', 'cyclic permutation', 'determinant', 'eigenvalues', 'volume')","('matrix products', 'instance of', 'matrix')
('trace operator', 'instance of', 'matrix')
('Frobenius norm', 'instance of', 'matrix')
('transpose operator', 'instance of', 'matrix')
('square matrix', 'instance of', 'matrix')
('factors', 'instance of', 'matrix')
('cyclic permutation', 'instance of', 'matrix')
('determinant', 'instance of', 'matrix')
('eigenvalues', 'instance of', 'matrix')
('volume', 'instance of', 'matrix')"
2.12,0,"('principal components analysis', 'PCA', 'linear algebra')","('principal components analysis', 'instance of', 'linear algebra')"
2.12,1,"('linear algebra', 'L2 norm', 'vector calculus')","('linear algebra', 'part of', 'vector calculus')"
2.12,2,"('linear algebra', 'matrix-vector operation', 'PCA reconstruction', 'Frobenius norm')","('linear algebra', 'use', 'PCA reconstruction')
('linear algebra', 'use', 'Frobenius norm')"
2.12,3,"('design matrix', 'Frobenius norm', 'argmin', 'constraint')","('design matrix', 'subject of', 'argmin')
('design matrix', 'subject of', 'constraint')"
2.12,4,"('eigendecomposition', 'principal component', 'linear algebra', 'probability theory')","('eigendecomposition', 'based on', 'linear algebra')
('principal component', 'facet of', 'eigendecomposition')
('principal component', 'facet of', 'probability theory')"
2.12,5,"('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('software engineering', 'probability theory') ('probability theory', 'information theory') ('probabilistic models', 'machine learning')","('probability theory', 'instance of', 'information theory')
('probability theory', 'based on', 'information theory')
('probability theory', 'facet of', 'information theory')
('probability theory', 'part of', 'information theory')
('probability theory', 'subject of', 'information theory')
('probability theory', 'subclass of', 'information theory')
('probability theory', 'use', 'information theory')
('probability theory', 'instance of', 'software engineering')
('software engineering', 'based on', 'probability theory')
('probabilistic models', 'based on', 'machine learning')"
3.1,0,"('probability theory',) ('machine learning',)","('probability theory', 'instance of', 'machine learning')
('machine learning', 'based on', 'probability theory')"
3.1,1,"('probability theory', 'artificial intelligence', 'machine learning')","('probability theory', 'instance of', 'artificial intelligence')
('artificial intelligence', 'based on', 'machine learning')"
3.3,0,"('probability and information theory', 'Ramsey (1926)', 'logic', 'probability theory', 'random variables', 'vector-valued variables', 'probability distribution', 'discrete random variable', 'continuous random variable', 'probability distributions', 'probability mass function', 'PMF')","('probability and information theory', 'instance of', 'Ramsey (1926)'),
('probability and information theory', 'instance of', 'logic'),
('probability theory', 'subclass of', 'probability and information theory'),
('random variables', 'instance of', 'probability theory'),
('vector-valued variables', 'subclass of', 'random variables'),
('probability distribution', 'instance of', 'probability theory'),
('discrete random variable', 'instance of', 'random variables'),
('continuous random variable', 'instance of', 'random variables'),
('probability distributions', 'subclass of', 'probability distribution'),
('probability mass function', 'instance of', 'probability distributions')"
3.3,1,"('probability mass function', 'random variable', 'state', 'joint probability distribution', 'impossible event', 'guaranteed event', 'normalized', 'uniform distribution')","('probability mass function', 'instance of', 'random variable')
('random variable', 'instance of', 'state')
('state', 'instance of', 'joint probability distribution')
('impossible event', 'subclass of', 'event')
('guaranteed event', 'subclass of', 'event')
('normalized', 'subclass of', 'event')
('uniform distribution', 'instance of', 'distribution')"
3.4,0,"('continuous random variables', 'probability density function', 'specific state', 'uniform distribution', 'univariate example', 'marginal probability distribution', 'sum rule')","('continuous random variables', 'instance of', 'probability density function')
('probability density function', 'instance of', 'specific state')
('specific state', 'instance of', 'uniform distribution')
('uniform distribution', 'instance of', 'univariate example')
('univariate example', 'instance of', 'marginal probability distribution')
('marginal probability distribution', 'instance of', 'sum rule')"
3.6,0,"('PROBABILITY AND INFORMATION THEORY', 'marginal probability', 'P(x,y)', 'P(x)', 'continuous variables', 'p(x)', 'summation', 'conditional probability', 'P(y = y x = x)', 'P(y = y,x = x)', 'P(y = y x = x)', 'P(x = x)', 'conditional probability', 'P(x= x)', 'conditional probability', 'causal modeling', 'The Chain Rule of Conditional Probabilities', 'joint probability distribution', 'conditional distributions', 'P(x(1),...,x(n))', 'P(x(1))Πn P(x(i) x(1),...,x(i 1))', 'chain rule', 'product rule of probability', 'conditional probability', 'equation 3.5')","('PROBABILITY AND INFORMATION THEORY', 'marginal probability', 'P(x,y)')
('marginal probability', 'P(x)', 'continuous variables')
('summation', 'conditional probability', 'P(y = y|x = x)')
('summation', 'conditional probability', 'P(y = y|x = x)')
('summation', 'conditional probability', 'P(x = x)')
('conditional probability', 'P(x = x)')
('conditional probability', 'P(x = x)')
('causal modeling', 'The Chain Rule of Conditional Probabilities')
('joint probability distribution', 'conditional distributions', 'P(x(1),...,x(n))')
('joint probability distribution', 'conditional distributions', 'P(x(1))Πn P(x(i)|x(1),...,x(i-1))')
('chain rule', 'product rule of probability')
('chain rule', 'product rule of probability')
('chain rule', 'conditional probability', 'equation 3.5')"
3.8,0,"('PROBABILITY AND INFORMATION THEORY', 'definition', 'P(a,b,c)', 'P(a b,c)', 'P(b,c)', 'P(b c)', 'P(a,b,c)', 'P(a b,c)P(b c)P(c)', 'Independence and Conditional Independence', 'Two random variables', 'x', 'y', 'independent', 'probability distribution', 'product of two factors', 'x x,y y', 'p(x = x,y = y)', 'p(x = x)p(y = y)', 'random variable', 'z', 'conditional probability distribution', 'x x,y y,z z', 'p(x = x,y = y z = z)', 'p(x = x z = z)p(y = y z = z)', 'Independence and Conditional Independence', 'compact notation', 'Expectation, Variance and Covariance', 'expectation', 'expected value', 'function f(x)', 'probability distribution', 'P(x)', 'average', 'mean value', 'discrete variables', 'summation', 'E [f(x)] = P(x)f(x)', 'continuous variables', 'integral', 'E [f(x)] = p(x)f(x)dx')","('PROBABILITY AND INFORMATION THEORY', 'definition', 'P(a,b,c)')
('definition', 'P(a b,c)', 'P(b,c)')
('definition', 'P(b,c)', 'P(b c)')
('definition', 'P(a,b,c)', 'P(a b,c)P(b c)P(c)')
('Independence and Conditional Independence', 'Two random variables', 'x')
('Independence and Conditional Independence', 'Two random variables', 'y')
('independent', 'probability distribution', 'product of two factors')
('product of two factors', 'x', 'x,y', 'y')
('product of two factors', 'p(x = x,y = y)', 'p(x = x)p(y = y)')
('random variable', 'z')
('conditional probability distribution', 'x', 'x,y', 'y,z', 'z')
('conditional probability distribution', 'p(x = x,y = y z = z)', 'p(x = x z = z)p(y = y z = z)')
('Independence and Conditional Independence', 'compact notation')
('Expectation, Variance and Covariance', 'expectation', 'expected value')
('Expectation, Variance and Covariance', 'function f(x)')
('function f(x)', 'probability distribution', 'P(x)')
('expectation', 'average', 'mean value', 'discrete variables')
('summation', 'E [f(x)] = P(x)f(x)')
('expectation', 'average', 'mean value', 'continuous variables')
('integral', 'E [f(x)] = p(x)f(x)dx')"
3.8,1,"('Probability and Information Theory', 'random variable', 'distribution', 'expectation', 'variance', 'function', 'covariance', 'correlation', 'independence')","('random variable', 'instance of', 'Probability and Information Theory')
('distribution', 'instance of', 'Probability and Information Theory')
('expectation', 'instance of', 'Probability and Information Theory')
('variance', 'instance of', 'Probability and Information Theory')
('function', 'instance of', 'Probability and Information Theory')
('covariance', 'instance of', 'Probability and Information Theory')
('correlation', 'instance of', 'Probability and Information Theory')
('independence', 'instance of', 'Probability and Information Theory')"
3.9,0,"('s', 'random variable', 'y', 'covariance', 'random vector', 'covariance matrix', 'Bernoulli Distribution', 'multinoulli distribution')","('s', 'instance of', 'random variable')
('y', 'instance of', 'random variable')
('random vector', 'instance of', 'covariance matrix')
('Bernoulli Distribution', 'instance of', 'covariance')
('multinoulli distribution', 'instance of', 'covariance')"
3.9,1,"('parametrized', 'vector', 'state', 'Bernoulli Distribution', 'multinoulli distribution', 'Gaussian Distribution', 'normal distribution', 'mean', 'standard deviation', 'variance', 'precision', 'PDF')","('parametrized', 'instance of', 'vector')
('vector', 'instance of', 'state')
('Bernoulli Distribution', 'instance of', 'state')
('multinoulli distribution', 'instance of', 'state')
('Gaussian Distribution', 'instance of', 'state')
('normal distribution', 'instance of', 'state')
('mean', 'instance of', 'Gaussian Distribution')
('standard deviation', 'instance of', 'Gaussian Distribution')
('variance', 'instance of', 'Gaussian Distribution')
('precision', 'instance of', 'Gaussian Distribution')
('PDF', 'instance of', 'Gaussian Distribution')"
3.9,2,"('bell curve', 'central limit theorem', 'sum', 'random variables', 'variance', 'uncertainty', 'probability distributions', 'normal distribution', 'real numbers', 'multivariate normal distribution', 'positive definite symmetric matrix')","('bell curve', 'instance of', 'normal distribution')
('central limit theorem', 'instance of', 'sum')
('sum', 'instance of', 'random variables')
('variance', 'instance of', 'uncertainty')
('uncertainty', 'instance of', 'probability distributions')
('probability distributions', 'instance of', 'normal distribution')
('normal distribution', 'instance of', 'real numbers')
('multivariate normal distribution', 'instance of', 'real numbers')
('positive definite symmetric matrix', 'instance of', 'real numbers')"
3.9,3,"('mean', 'covariance matrix', 'PDF', 'precision matrix', 'diagonal matrix', 'isotropic Gaussian distribution', 'exponential distribution', 'Laplace distribution', 'Dirac Distribution', 'Empirical Distribution', 'Dirac delta function')","('mean', 'instance of', 'covariance matrix')
('covariance matrix', 'instance of', 'PDF')
('PDF', 'instance of', 'precision matrix')
('precision matrix', 'instance of', 'diagonal matrix')
('diagonal matrix', 'instance of', 'isotropic Gaussian distribution')
('isotropic Gaussian distribution', 'instance of', 'exponential distribution')
('exponential distribution', 'instance of', 'Laplace distribution')
('Laplace distribution', 'instance of', 'Dirac Distribution')
('Dirac Distribution', 'instance of', 'Empirical Distribution')
('Empirical Distribution', 'instance of', 'Dirac delta function')"
3.9,4,"('PROBABILITY AND INFORMATION THEORY', 'Dirac delta function', 'empirical distribution', 'multinoulli distribution', 'empirical frequency')","('empirical distribution', 'subclass of', 'PROBABILITY AND INFORMATION THEORY')
('multinoulli distribution', 'subclass of', 'PROBABILITY AND INFORMATION THEORY')
('empirical frequency', 'subclass of', 'PROBABILITY AND INFORMATION THEORY')"
3.10,0,"('mixture model', 'latent variable', 'Gaussian mixture model', 'logistic sigmoid', 'Bernoulli')","('latent variable', 'subclass of', 'mixture model')
('Gaussian mixture model', 'subclass of', 'mixture model')
('logistic sigmoid', 'part of', 'Bernoulli')"
3.10,1,"('Gaussian mixture model', 'isotropic covariance matrix', 'variance', 'diagonal covariance matrix', 'axis-aligned direction', 'full-rank covariance matrix', 'distribution', 'sigmoid function', 'softplus function', 'normal distribution')","('Gaussian mixture model', 'instance of', 'distribution')
('Gaussian mixture model', 'based on', 'variance')
('Gaussian mixture model', 'based on', 'diagonal covariance matrix')
('Gaussian mixture model', 'based on', 'axis-aligned direction')
('Gaussian mixture model', 'based on', 'full-rank covariance matrix')
('isotropic covariance matrix', 'subclass of', 'covariance matrix')
('variance', 'subclass of', 'statistical dispersion')
('diagonal covariance matrix', 'subclass of', 'covariance matrix')
('axis-aligned direction', 'subset of', 'direction')
('full-rank covariance matrix', 'subclass of', 'covariance matrix')
('sigmoid function', 'instance of', 'activation function')
('softplus function', 'instance of', 'activation function')
('normal distribution', 'instance of', 'distribution')"
3.10,2,"('logistic sigmoid function', 'softplus function')","('logistic sigmoid function', 'instance of', 'activation function')
('softplus function', 'instance of', 'activation function')"
3.11,0,"('logit', 'softplus', 'Bayes’ rule')","('logit', 'instance of', 'activation function')
('softplus', 'instance of', 'activation function')
('Bayes’ rule', 'instance of', 'probability theory')"
3.12,0,"('Bayes’ rule', 'measure theory')","('Bayes’ rule', 'based on', 'measure theory')"
3.12,1,"('continuous variables', 'measure zero', 'probabilitydistribution', 'Jacobian matrix', 'derivative')","('continuous variables', 'subclass of', 'random variables')
('measure zero', 'instance of', 'measure')
('probability distribution', 'instance of', 'distribution')
('Jacobian matrix', 'instance of', 'matrix')
('derivative', 'instance of', 'mathematical concept')"
3.13,0,"('Information Theory', 'applied mathematics', 'signal', 'discrete alphabets', 'noisy channel', 'radio transmission', 'codes', 'probability distributions', 'encoding schemes', 'machine learning', 'continuous variables', 'electrical engineering', 'computer science', 'probability distributions', 'similarity', 'Cover and Thomas (2006)', 'MacKay (2003)', 'unlikely event', 'likely event', 'solar eclipse', 'information content', 'tossed coin')","('Information Theory', 'applied mathematics', 'signal')"
3.13,1,"('Shannon entropy', 'bits', 'shannons', 'information content', 'uncertainty', 'distribution', 'average', 'encode symbols', 'differential entropy', 'Kullback-Leibler divergence', 'measure', 'non-negative', 'distance measure')","('Shannon entropy', 'information content', 'bits')
('information content', 'shannons', 'bits')
('Shannon entropy', 'uncertainty', 'distribution')
('information content', 'uncertainty', 'distribution')
('Shannon entropy', 'average', 'distribution')
('information content', 'average', 'distribution')
('Shannon entropy', 'encode symbols', 'bits')
('information content', 'encode symbols', 'bits')
('Shannon entropy', 'differential entropy', 'Kullback-Leibler divergence')
('information content', 'differential entropy', 'Kullback-Leibler divergence')
('Shannon entropy', 'measure', 'non-negative')
('information content', 'measure', 'non-negative')
('Shannon entropy', 'distance measure', 'non-negative')
('information content', 'distance measure', 'non-negative')"
3.14,0,"('Shannon entropy', 'binary random variable', 'entropy', 'deterministic', 'uniform distribution', 'asymmetry', 'KL divergence', 'cross-entropy', 'structured probabilistic models')","('Shannon entropy', 'binary random variable', 'entropy')
('Shannon entropy', 'entropy', 'binary random variable')
('Shannon entropy', 'entropy', 'deterministic')
('Shannon entropy', 'entropy', 'uniform distribution')
('Shannon entropy', 'asymmetry', 'uniform distribution')
('Shannon entropy', 'KL divergence', 'cross-entropy')
('Shannon entropy', 'cross-entropy', 'KL divergence')
('Shannon entropy', 'structured probabilistic models', 'entropy')"
3.14,1,"('KL divergence', 'asymmetric', 'approximation', 'Gaussians', 'probability distribution', 'modes', 'blur')","('KL divergence', 'asymmetric', 'approximation')
('KL divergence', 'Gaussians', 'probability distribution')
('KL divergence', 'probability distribution', 'Gaussians')
('KL divergence', 'probability distribution', 'modes')
('KL divergence', 'blur', 'probability distribution')"
3.14,2,"('joint probability distribution', 'inefficient', 'computationally', 'statistically', 'probability distribution', 'factors', 'product of probability distributions', 'influences', 'independent', 'factorization', 'graphs', 'structured probabilistic models', 'directed models', 'undirected models', 'conditional probability distributions', 'direct interactions', 'random variables', 'parent nodes', 'functions')","('joint probability distribution', 'inefficient', 'computationally')
('joint probability distribution', 'statistically', 'probability distribution')
('probability distribution', 'factors', 'product of probability distributions')
('probability distribution', 'influences', 'independent')
('probability distribution', 'factorization', 'product of probability distributions')
('probability distribution', 'graphs', 'structured probabilistic models')
('structured probabilistic models', 'directed models', 'graphs')
('structured probabilistic models', 'undirected models', 'graphs')
('structured probabilistic models', 'conditional probability distributions', 'random variables')
('structured probabilistic models', 'direct interactions', 'random variables')
('structured probabilistic models', 'parent nodes', 'random variables')
('structured probabilistic models', 'functions', 'random variables')"
3.14,3,"('PROBABILITY', 'INFORMATION THEORY', 'graphical model', 'random variables', 'probability distributions', 'factor', 'clique', 'undirected graph', 'normalized probability distribution')","('PROBABILITY', 'part of', 'INFORMATION THEORY')
('random variables', 'instance of', 'PROBABILITY')
('probability distributions', 'instance of', 'PROBABILITY')
('factor', 'use', 'probability distributions')
('clique', 'use', 'factor')
('undirected graph', 'instance of', 'graphical model')
('normalized probability distribution', 'subclass of', 'probability distributions')"
3.14,4,"('PROBABILITY AND INFORMATION THEORY', 'Figure 3.8: An undirected graphical model', 'random variables', 'graph', 'probability distributions', 'φ(1)', 'φ(2)', 'φ(3)', 'Z', 'distribution', 'probability distribution', 'structured probabilistic models', 'language', 'direct probabilistic relationships', 'machine learning algorithms', 'research topics', 'part III', 'basic concepts of probability theory', 'deep learning', 'fundamental mathematical tools', 'numerical methods')","('PROBABILITY AND INFORMATION THEORY', 'instance of', 'Figure 3.8: An undirected graphical model')
('random variables', 'instance of', 'graph')
('probability distributions', 'instance of', 'graph')
('φ(1)', 'instance of', 'graph')
('φ(2)', 'instance of', 'graph')
('φ(3)', 'instance of', 'graph')
('Z', 'instance of', 'graph')
('distribution', 'instance of', 'graph')
('probability distribution', 'instance of', 'graph')
('structured probabilistic models', 'instance of', 'graph')
('language', 'instance of', 'graph')
('direct probabilistic relationships', 'instance of', 'graph')
('machine learning algorithms', 'instance of', 'graph')
('research topics', 'instance of', 'graph')
('part III', 'instance of', 'graph')
('basic concepts of probability theory', 'instance of', 'graph')
('deep learning', 'instance of', 'graph')
('fundamental mathematical tools', 'instance of', 'graph')
('numerical methods', 'instance of', 'graph')"
4.1,0,"('Numerical Computation Machine learning algorithms', 'numerical computation', 'algorithms', 'mathematical problems', 'iterative process', 'formula', 'symbolic expression', 'optimization', 'solving systems of linear equations', 'evaluating a mathematical function', 'digital computer', 'real numbers', 'finite amount of memory', 'Overflow and Underflow', 'continuous math', 'bit patterns', 'approximation error', 'rounding error', 'algorithms', 'theory', 'practice', 'rounding error', 'underflow')","('Numerical Computation', 'instance of', 'Machine learning algorithms') 
('numerical computation', 'instance of', 'algorithms') 
('algorithms', 'instance of', 'mathematical problems') 
('iterative process', 'instance of', 'algorithms')
('formula', 'instance of', 'symbolic expression') 
('symbolic expression', 'instance of', 'algorithms') 
('optimization', 'instance of', 'algorithms') 
('solving systems of linear equations', 'instance of', 'algorithms') 
('evaluating a mathematical function', 'instance of', 'algorithms') 
('digital computer', 'instance of', 'algorithms') 
('real numbers', 'instance of', 'algorithms') 
('finite amount of memory', 'instance of', 'algorithms') 
('Overflow and Underflow', 'instance of', 'algorithms') 
('continuous math', 'instance of', 'algorithms') 
('bit patterns', 'instance of', 'algorithms') 
('approximation error', 'instance of', 'algorithms') 
('rounding error', 'instance of', 'algorithms') 
('algorithms', 'instance of', 'theory') 
('algorithms', 'instance of', 'practice') 
('rounding error', 'instance of', 'algorithms') 
('underflow', 'instance of', 'algorithms')"
4.1,1,"('NUMERICAL COMPUTATION', 'software environments', 'exceptions', 'logarithm of zero', 'numerical error', 'overflow', 'softmax function', 'probabilities', 'multinoulli distribution', 'constant c', 'underflow', 'undefined', 'adding or subtracting a scalar', 'logsoftmax function', 'numerically stable', 'low-level libraries', 'deep learning algorithms')","('NUMERICAL COMPUTATION', 'instance of', 'software environments')
('exceptions', 'instance of', 'software environments')
('logarithm of zero', 'instance of', 'numerical error')
('numerical error', 'instance of', 'software environments')
('overflow', 'instance of', 'software environments')
('softmax function', 'instance of', 'software environments')
('probabilities', 'instance of', 'software environments')
('multinoulli distribution', 'instance of', 'software environments')
('constant c', 'instance of', 'software environments')
('underflow', 'instance of', 'software environments')
('undefined', 'instance of', 'software environments')
('adding or subtracting a scalar', 'instance of', 'software environments')
('logsoftmax function', 'instance of', 'software environments')
('numerically stable', 'instance of', 'software environments')
('low-level libraries', 'instance of', 'software environments')
('deep learning algorithms', 'instance of', 'software environments')"
4.3,0,"('Theano', 'Bergstra et al., 2010', 'Bastien et al., 2012')","('Theano', 'based on', 'Bergstra et al., 2010')
('Theano', 'based on', 'Bastien et al., 2012')"
4.3,1,"('gradient descent', 'derivative', 'local minimum', 'local maximum')","('gradient descent', 'based on', 'derivative')
('derivative', 'use', 'gradient descent')
('local minimum', 'based on', 'gradient descent')
('local maximum', 'based on', 'gradient descent')"
4.3,2,"('saddle point', 'global minimum', 'local minimum', 'global minima', 'local minima', 'gradient', 'partial derivatives')","('saddle point', 'based on', 'gradient')
('global minimum', 'based on', 'gradient')
('local minimum', 'based on', 'gradient')
('global minima', 'based on', 'gradient')
('local minima', 'based on', 'gradient')
('gradient', 'use', 'partial derivatives')
('partial derivatives', 'use', 'gradient')"
4.3,3,"('NUMERICAL COMPUTATION', 'halting point', 'global minimum', 'local minimum', 'optimization algorithms', 'plateaus', 'deep learning', 'critical points', 'gradient', 'directional derivative', 'chain rule', 'slope', 'cost function', 'minimizing f', 'method of steepest descent', 'gradient descent', 'new point')","('NUMERICAL COMPUTATION', 'instance of', 'halting point')
('NUMERICAL COMPUTATION', 'instance of', 'global minimum')
('NUMERICAL COMPUTATION', 'instance of', 'local minimum')
('NUMERICAL COMPUTATION', 'instance of', 'optimization algorithms')
('NUMERICAL COMPUTATION', 'instance of', 'plateaus')
('NUMERICAL COMPUTATION', 'instance of', 'deep learning')
('NUMERICAL COMPUTATION', 'instance of', 'critical points')
('NUMERICAL COMPUTATION', 'instance of', 'gradient')
('NUMERICAL COMPUTATION', 'instance of', 'directional derivative')
('NUMERICAL COMPUTATION', 'instance of', 'chain rule')
('NUMERICAL COMPUTATION', 'instance of', 'slope')
('NUMERICAL COMPUTATION', 'instance of', 'cost function')
('NUMERICAL COMPUTATION', 'instance of', 'minimizing f')
('NUMERICAL COMPUTATION', 'instance of', 'method of steepest descent')
('NUMERICAL COMPUTATION', 'instance of', 'gradient descent')
('NUMERICAL COMPUTATION', 'instance of', 'new point')"
4.3,4,"('Jacobian matrix', 'second derivative', 'quadratic function')","('Jacobian matrix', 'instance of', 'second derivative')
('Jacobian matrix', 'instance of', 'quadratic function')"
4.3,5,"('curvature', 'Hessian matrix', 'eigenvalues', 'orthogonal basis')","('curvature', 'instance of', 'Hessian matrix')
('curvature', 'instance of', 'eigenvalues')
('curvature', 'instance of', 'orthogonal basis')"
4.3,6,"('eigenvectors', 'Taylor series', 'learning rate', 'optimal step size', 'critical point', 'local maximum', 'local minimum', 'saddle point')","('eigenvectors', 'instance of', 'Taylor series')
('eigenvectors', 'instance of', 'learning rate')
('eigenvectors', 'instance of', 'optimal step size')
('eigenvectors', 'instance of', 'critical point')
('eigenvectors', 'instance of', 'local maximum')
('eigenvectors', 'instance of', 'local minimum')
('eigenvectors', 'instance of', 'saddle point')"
4.3,7,"('second derivative test', 'positive definite', 'negative definite', 'saddle points', 'condition number')","('second derivative test', 'instance of', 'positive definite')
('second derivative test', 'instance of', 'negative definite')
('second derivative test', 'instance of', 'saddle points')
('second derivative test', 'instance of', 'condition number')"
4.3,8,"('NUMERICAL COMPUTATION', 'eigenvalues', 'local maximum', 'local minimum')","('NUMERICAL COMPUTATION', 'instance of', 'eigenvalues')
('NUMERICAL COMPUTATION', 'instance of', 'local maximum')
('NUMERICAL COMPUTATION', 'instance of', 'local minimum')"
4.3,9,"('NUMERICAL COMPUTATION', 'Hessian matrix', 'condition number', 'quadratic function', 'curvature', 'gradient descent', 'optimization algorithm')","('NUMERICAL COMPUTATION', 'instance of', 'Hessian matrix')
('NUMERICAL COMPUTATION', 'part of', 'condition number')
('NUMERICAL COMPUTATION', 'part of', 'quadratic function')
('NUMERICAL COMPUTATION', 'part of', 'curvature')
('NUMERICAL COMPUTATION', 'part of', 'gradient descent')
('NUMERICAL COMPUTATION', 'part of', 'optimization algorithm')"
4.3,10,"('NUMERICAL COMPUTATION', 'Newton’s method', 'Taylor series expansion', 'critical point', 'positive definite quadratic function', 'gradient descent', 'saddle point', 'Hessian matrix', 'first-order optimization algorithms', 'second-order optimization algorithms', 'Lipschitz continuous function', 'Lipschitz constant')","('NUMERICAL COMPUTATION', 'part of', 'Newton’s method')
('NUMERICAL COMPUTATION', 'part of', 'Taylor series expansion')
('NUMERICAL COMPUTATION', 'part of', 'critical point')
('NUMERICAL COMPUTATION', 'part of', 'positive definite quadratic function')
('NUMERICAL COMPUTATION', 'part of', 'gradient descent')
('NUMERICAL COMPUTATION', 'part of', 'saddle point')
('NUMERICAL COMPUTATION', 'part of', 'Hessian matrix')
('NUMERICAL COMPUTATION', 'part of', 'first-order optimization algorithms')
('NUMERICAL COMPUTATION', 'part of', 'second-order optimization algorithms')
('NUMERICAL COMPUTATION', 'part of', 'Lipschitz continuous function')
('NUMERICAL COMPUTATION', 'part of', 'Lipschitz constant')"
4.4,0,"('NUMERICAL COMPUTATION', 'Lipschitz continuity', 'convex optimization', 'positive semidefinite', 'constrained optimization', 'feasible points', 'norm constraint', 'gradient descent', 'projection', 'line search', 'tangent space', 'unconstrained optimization problem')","('NUMERICAL COMPUTATION', 'part of', 'Lipschitz continuity')
('NUMERICAL COMPUTATION', 'part of', 'convex optimization')
('NUMERICAL COMPUTATION', 'part of', 'positive semidefinite')
('NUMERICAL COMPUTATION', 'part of', 'constrained optimization')
('NUMERICAL COMPUTATION', 'part of', 'feasible points')
('NUMERICAL COMPUTATION', 'part of', 'norm constraint')
('NUMERICAL COMPUTATION', 'part of', 'gradient descent')
('NUMERICAL COMPUTATION', 'part of', 'projection')
('NUMERICAL COMPUTATION', 'part of', 'line search')
('NUMERICAL COMPUTATION', 'part of', 'tangent space')
('NUMERICAL COMPUTATION', 'part of', 'unconstrained optimization problem')"
4.4,1,"('NUMERICAL COMPUTATION', 'constrained optimization', 'L2 norm', 'generalized Lagrangian', 'equality constraints', 'inequality constraints', 'KKT multipliers')","('NUMERICAL COMPUTATION', 'part of', 'constrained optimization')
('NUMERICAL COMPUTATION', 'part of', 'L2 norm')
('NUMERICAL COMPUTATION', 'part of', 'generalized Lagrangian')
('NUMERICAL COMPUTATION', 'part of', 'equality constraints')
('NUMERICAL COMPUTATION', 'part of', 'inequality constraints')
('NUMERICAL COMPUTATION', 'part of', 'KKT multipliers')"
4.4,2,"('NUMERICAL COMPUTATION', 'constrained maximization', 'generalized La- grange function', 'optimization problem', 'equality constraints', 'inequality constraints', 'active constraint', 'local solution', 'inactive constraint', 'stationary point', 'KKT multiplier', 'Karush-Kuhn-Tucker conditions', 'optimal point', 'gradient of the generalized Lagrangian')","('NUMERICAL COMPUTATION', 'instance of', 'constrained maximization')
('generalized La- grange function', 'instance of', 'optimization problem')
('equality constraints', 'instance of', 'optimization problem')
('inequality constraints', 'instance of', 'optimization problem')
('active constraint', 'instance of', 'local solution')
('inactive constraint', 'instance of', 'local solution')
('stationary point', 'instance of', 'local solution')
('KKT multiplier', 'instance of', 'stationary point')
('Karush-Kuhn-Tucker conditions', 'instance of', 'stationary point')
('optimal point', 'instance of', 'stationary point')
('gradient of the generalized Lagrangian', 'instance of', 'stationary point')"
4.5,0,"('NUMERICAL COMPUTATION', 'complementary slackness', 'KKT approach', 'Linear Least Squares', 'gradient-based optimization', 'arbitrary value', 'step size', 'tolerance', 'gradient descent', 'Newton’s method', 'global minimum', 'Lagrangian')","('NUMERICAL COMPUTATION', 'complementary slackness', 'KKT approach')
('NUMERICAL COMPUTATION', 'Linear Least Squares', 'gradient-based optimization')
('gradient-based optimization', 'arbitrary value', 'step size')
('gradient-based optimization', 'tolerance', 'gradient descent')
('gradient-based optimization', 'Newton’s method', 'global minimum')
('gradient-based optimization', 'Lagrangian')"
4.5,1,"('Moore-Penrose pseudoinverse', 'constrained problem', 'active constraint', 'Lagrangian', 'gradient ascent', 'linear equation', 'mathematical preliminaries', 'machine learning algorithms')","('Moore-Penrose pseudoinverse', 'constrained problem', 'active constraint')
('constrained problem', 'Lagrangian', 'gradient ascent')
('Lagrangian', 'linear equation', 'mathematical preliminaries')
('mathematical preliminaries', 'machine learning algorithms')"
4.5,2,"('deep learning', 'machine learning', 'basic principles', 'learning algorithm', 'linear regression algorithm', 'training data', 'generalize to new data', 'hyperparameters', 'applied statistics', 'frequentist estimators', 'Bayesian inference', 'supervised learning', 'unsupervised learning', 'stochastic gradient descent', 'optimization algorithm')","('deep learning', 'machine learning', 'basic principles')
('machine learning', 'learning algorithm', 'linear regression algorithm')
('learning algorithm', 'training data', 'generalize to new data')
('learning algorithm', 'hyperparameters')
('applied statistics', 'frequentist estimators')
('applied statistics', 'Bayesian inference')
('machine learning', 'supervised learning')
('machine learning', 'unsupervised learning')
('learning algorithm', 'stochastic gradient descent')
('learning algorithm', 'optimization algorithm')"
5.1,0,"('learning algorithm', 'experience', 'class of tasks', 'performance measure', 'machine learning tasks', 'quantitatively measured features', 'vector')","('learning algorithm', 'experience', 'class of tasks')
('learning algorithm', 'performance measure', 'machine learning tasks')
('machine learning tasks', 'quantitatively measured features', 'vector')"
5.1,1,"('classification', 'object recognition', 'probabilistic model', 'missing inputs', 'medical diagnosis')","('classification', 'object recognition', 'probabilistic model')
('classification', 'missing inputs', 'probabilistic model')
('classification', 'medical diagnosis')"
5.1,2,"('MACHINE LEARNING BASICS', 'Regression', 'classification', 'transcription', 'optical character recognition', 'ASCII', 'Unicode', 'Google Street View', 'deep learning', 'speech recognition', 'audio waveform', 'machine translation', 'natural languages', 'English', 'French', 'Structured output', 'parsing', 'Collobert', 'pixel-wise segmentation')","('MACHINE LEARNING BASICS', 'instance of', 'Regression')
('MACHINE LEARNING BASICS', 'instance of', 'classification')
('MACHINE LEARNING BASICS', 'instance of', 'transcription')
('MACHINE LEARNING BASICS', 'instance of', 'optical character recognition')
('MACHINE LEARNING BASICS', 'instance of', 'ASCII')
('MACHINE LEARNING BASICS', 'instance of', 'Unicode')
('MACHINE LEARNING BASICS', 'instance of', 'Google Street View')
('MACHINE LEARNING BASICS', 'instance of', 'deep learning')
('MACHINE LEARNING BASICS', 'instance of', 'speech recognition')
('MACHINE LEARNING BASICS', 'instance of', 'audio waveform')
('MACHINE LEARNING BASICS', 'instance of', 'machine translation')
('MACHINE LEARNING BASICS', 'instance of', 'natural languages')
('MACHINE LEARNING BASICS', 'instance of', 'English')
('MACHINE LEARNING BASICS', 'instance of', 'French')
('MACHINE LEARNING BASICS', 'instance of', 'Structured output')
('MACHINE LEARNING BASICS', 'instance of', 'parsing')
('MACHINE LEARNING BASICS', 'instance of', 'Collobert')
('MACHINE LEARNING BASICS', 'instance of', 'pixel-wise segmentation')"
5.1,3,"('anomaly detection', 'credit card fraud detection', 'Synthesis and sampling', 'media applications', 'video games', 'textures', 'speech synthesis', 'Imputation of missing values')","('anomaly detection', 'instance of', 'credit card fraud detection')
('anomaly detection', 'instance of', 'Synthesis and sampling')
('anomaly detection', 'instance of', 'media applications')
('anomaly detection', 'instance of', 'video games')
('anomaly detection', 'instance of', 'textures')
('anomaly detection', 'instance of', 'speech synthesis')
('anomaly detection', 'instance of', 'Imputation of missing values')"
5.1,4,"('Denoising', 'corruption process', 'Density estimation', 'probability density function', 'probability mass function', 'performance measure', 'accuracy')","('Denoising', 'instance of', 'corruption process')
('Denoising', 'instance of', 'Density estimation')
('Denoising', 'instance of', 'probability density function')
('Denoising', 'instance of', 'probability mass function')
('Denoising', 'instance of', 'performance measure')
('Denoising', 'instance of', 'accuracy')"
5.1,5,"('0-1 loss', 'average log-probability', 'test set', 'performance measure', 'transcription task', 'regression task', 'density estimation', 'unsupervised', 'supervised', 'learning algorithms', 'dataset')","('0-1 loss', 'instance of', 'average log-probability')
('0-1 loss', 'instance of', 'test set')
('0-1 loss', 'instance of', 'performance measure')
('0-1 loss', 'instance of', 'transcription task')
('0-1 loss', 'instance of', 'regression task')
('0-1 loss', 'instance of', 'density estimation')
('0-1 loss', 'instance of', 'unsupervised')
('0-1 loss', 'instance of', 'supervised')
('0-1 loss', 'instance of', 'learning algorithms')
('0-1 loss', 'instance of', 'dataset')"
5.1,6,"('Iris dataset', 'features', 'unsupervised learning', 'density estimation', 'clustering', 'supervised learning', 'target', 'probability distribution', 'instructor', 'observations')","('Iris dataset', 'instance of', 'features')
('Iris dataset', 'instance of', 'unsupervised learning')
('Iris dataset', 'instance of', 'density estimation')
('Iris dataset', 'instance of', 'clustering')
('Iris dataset', 'instance of', 'supervised learning')
('Iris dataset', 'instance of', 'target')
('Iris dataset', 'instance of', 'probability distribution')
('Iris dataset', 'instance of', 'instructor')
('Iris dataset', 'instance of', 'observations')"
5.1,7,"('MACHINE LEARNING BASICS', 'supervised learning', 'unsupervised learning', 'regression', 'classification', 'structured output problems', 'Density estimation', 'support of other tasks', 'semi-supervised learning', 'multi-instance learning', 'deep models', 'reinforcement learning', 'design matrix', 'Iris dataset')","('MACHINE LEARNING BASICS', 'supervised learning', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'regression', 'classification')
('MACHINE LEARNING BASICS', 'semi-supervised learning', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'multi-instance learning', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'deep models', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'reinforcement learning', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'Iris dataset', 'unsupervised learning')"
5.1,8,"('MACHINE LEARNING BASICS', 'linear regression', 'regression')","('MACHINE LEARNING BASICS', 'linear regression', 'regression')"
5.1,9,"('MACHINE LEARNING BASICS', 'test set', 'mean squared error', 'predictions', 'targets', 'Euclidean distance', 'machine learning algorithm', 'weights', 'training set', 'gradient')","('MACHINE LEARNING BASICS', 'based on', 'test set')
('test set', 'facet of', 'mean squared error')
('predictions', 'instance of', 'mean squared error')
('targets', 'instance of', 'mean squared error')
('Euclidean distance', 'based on', 'mean squared error')
('machine learning algorithm', 'instance of', 'mean squared error')
('weights', 'part of', 'machine learning algorithm')
('training set', 'based on', 'machine learning algorithm')
('gradient', 'instance of', 'machine learning algorithm')"
5.1,10,"('MACHINE LEARNING BASICS', 'linear regression problem', 'training set', 'weight vector', 'mean squared error', 'normal equations', 'learning algorithm', 'linear regression')","('MACHINE LEARNING BASICS', 'based on', 'linear regression problem')
('linear regression problem', 'facet of', 'training set')
('weight vector', 'part of', 'linear regression problem')
('mean squared error', 'facet of', 'linear regression problem')
('normal equations', 'instance of', 'learning algorithm')
('learning algorithm', 'instance of', 'linear regression problem')
('linear regression', 'instance of', 'learning algorithm')"
5.2,0,"('MACHINE LEARNING BASICS', 'linear regression', 'learning algorithm', 'capacity', 'overfitting', 'underfitting', 'generalization error', 'test error', 'training error', 'optimization problem', 'test set')","('MACHINE LEARNING BASICS', 'based on', 'linear regression')
('linear regression', 'instance of', 'learning algorithm')
('learning algorithm', 'facet of', 'capacity')
('capacity', 'part of', 'overfitting')
('overfitting', 'part of', 'generalization error')
('underfitting', 'part of', 'generalization error')
('generalization error', 'facet of', 'test error')
('test error', 'facet of', 'optimization problem')
('training error', 'part of', 'optimization problem')
('optimization problem', 'facet of', 'test set')"
5.2,1,"('MACHINE LEARNING BASICS', 'statistical learning theory', 'data generating process', 'i.i.d. assumptions', 'data generating distribution', 'training error', 'test error', 'underfitting', 'overfitting', 'model capacity')","('MACHINE LEARNING BASICS', 'based on', 'statistical learning theory')
('statistical learning theory', 'facet of', 'data generating process')
('data generating process', 'facet of', 'i.i.d. assumptions')
('i.i.d. assumptions', 'facet of', 'data generating distribution')
('data generating distribution', 'facet of', 'training error')
('training error', 'facet of', 'test error')
('test error', 'part of', 'underfitting')
('test error', 'part of', 'overfitting')
('underfitting', 'part of', 'model capacity')
('overfitting', 'part of', 'model capacity')"
5.2,2,"('MACHINE LEARNING BASICS', 'model capacity', 'hypothesis space', 'linear regression', 'polynomials', 'quadratic function', 'degree', 'overfitting', 'underfitting')","('MACHINE LEARNING BASICS', 'based on', 'model capacity')
('model capacity', 'facet of', 'hypothesis space')
('linear regression', 'instance of', 'hypothesis space')
('polynomials', 'instance of', 'hypothesis space')
('quadratic function', 'instance of', 'polynomials')
('degree', 'facet of', 'polynomials')
('overfitting', 'part of', 'degree')
('underfitting', 'part of', 'degree')"
5.2,3,"('MACHINE LEARNING', 'QUADRATIC MODEL', 'MOORE-PENROSE PSEUDOINVERSE')","('MACHINE LEARNING', 'subclass of', 'QUADRATIC MODEL')
('QUADRATIC MODEL', 'use', 'MACHINE LEARNING')
('MOORE-PENROSE PSEUDOINVERSE', 'subject of', 'QUADRATIC MODEL')"
5.2,4,"('MACHINE LEARNING', 'OPTIMIZATION ALGORITHM', 'OCCAM’S RAZOR', 'STATISTICAL LEARNING THEORY', 'VAPNIK-CHERVONENKIS DIMENSION', 'BINARY CLASSIFIER', 'GENERALIZATION ERROR', 'DEEP LEARNING', 'NON-CONVEX OPTIMIZATION')","('MACHINE LEARNING', 'subclass of', 'OPTIMIZATION ALGORITHM')
('OPTIMIZATION ALGORITHM', 'instance of', 'MACHINE LEARNING')
('OPTIMIZATION ALGORITHM', 'based on', 'OCCAM’S RAZOR')
('STATISTICAL LEARNING THEORY', 'part of', 'OCCAM’S RAZOR')
('VAPNIK-CHERVONENKIS DIMENSION', 'based on', 'STATISTICAL LEARNING THEORY')
('VAPNIK-CHERVONENKIS DIMENSION', 'use', 'BINARY CLASSIFIER')
('BINARY CLASSIFIER', 'instance of', 'MACHINE LEARNING')
('BINARY CLASSIFIER', 'based on', 'GENERALIZATION ERROR')
('DEEP LEARNING', 'subclass of', 'MACHINE LEARNING')
('DEEP LEARNING', 'based on', 'NON-CONVEX OPTIMIZATION')"
5.2,5,"('NON-PARAMETRIC MODELS', 'NEAREST NEIGHBOR REGRESSION', 'L2 NORM', 'LEARNED DISTANCE METRICS')","('NON-PARAMETRIC MODELS', 'subclass of', 'NEAREST NEIGHBOR REGRESSION')
('NEAREST NEIGHBOR REGRESSION', 'based on', 'L2 NORM')
('LEARNED DISTANCE METRICS', 'based on', 'NEAREST NEIGHBOR REGRESSION')
('LEARNED DISTANCE METRICS', 'subclass of', 'NON-PARAMETRIC MODELS')"
5.2,6,"('BAYES ERROR', 'NON-PARAMETRIC MODELS', 'GENERALIZATION ERROR')","('BAYES ERROR', 'based on', 'NON-PARAMETRIC MODELS')
('GENERALIZATION ERROR', 'based on', 'NON-PARAMETRIC MODELS')
('GENERALIZATION ERROR', 'instance of', 'BAYES ERROR')"
5.2,7,"('MACHINE LEARNING BASICS', 'training dataset', 'train and test error', 'optimal model capacity', 'synthetic regression problem', 'training set', 'test set', 'training sets', 'error bars', '95 percent confidence intervals', 'MSE', 'quadratic model', 'test error', 'closed form', 'Bayes error', 'memorize specific instances', 'fixed-capacity model', 'optimal polynomial regressor', 'optimal capacity', 'sufficient complexity')","('MACHINE LEARNING BASICS', 'training dataset', 'train and test error')
('training dataset', 'instance of', 'train and test error')
('training dataset', 'part of', 'optimal model capacity')
('synthetic regression problem', 'instance of', 'test set')
('training set', 'instance of', 'training sets')
('test set', 'subclass of', 'training sets')
('test set', 'subclass of', 'training set')
('test set', 'instance of', 'error bars')
('error bars', 'part of', '95 percent confidence intervals')
('MSE', 'instance of', 'quadratic model')
('test error', 'instance of', 'MSE')
('closed form', 'subclass of', 'quadratic model')
('Bayes error', 'instance of', 'test error')
('memorize specific instances', 'part of', 'fixed-capacity model')
('fixed-capacity model', 'part of', 'optimal polynomial regressor')
('optimal polynomial regressor', 'part of', 'optimal capacity')
('optimal capacity', 'part of', 'sufficient complexity')"
5.2,8,"('machine learning algorithms', 'learning algorithm', 'data generating distributions', 'real-world applications', 'probability distributions', 'universal learning algorithm', 'best learning algorithm', 'machine learning research', 'AI agent', 'regularization', 'no free lunch theorem', 'hypothesis space', 'representational capacity', 'linear regression', 'nonlinear fashion', 'sin(x)')","('machine learning algorithms', 'instance of', 'learning algorithm')
('learning algorithm', 'part of', 'data generating distributions')
('real-world applications', 'instance of', 'data generating distributions')
('probability distributions', 'instance of', 'data generating distributions')
('universal learning algorithm', 'subclass of', 'best learning algorithm')
('machine learning research', 'subject of', 'AI agent')
('regularization', 'subclass of', 'best learning algorithm')
('no free lunch theorem', 'subclass of', 'best learning algorithm')
('hypothesis space', 'part of', 'representational capacity')
('linear regression', 'subclass of', 'best learning algorithm')
('nonlinear fashion', 'instance of', 'linear regression')
('sin(x)', 'subclass of', 'best learning algorithm')"
5.2,9,"('MACHINE LEARNING', 'BASICS', 'MATHEMATICS', 'COMPUTER SCIENCE')","('MACHINE LEARNING', 'part of', 'BASICS')
('MACHINE LEARNING', 'based on', 'MATHEMATICS')
('MACHINE LEARNING', 'based on', 'COMPUTER SCIENCE')"
5.3,0,"('MACHINE LEARNING', 'REGULARIZATION')","('MACHINE LEARNING', 'use', 'REGULARIZATION')"
5.3,1,"('MACHINE LEARNING', 'WEIGHT DECAY')","('MACHINE LEARNING', 'use', 'WEIGHT DECAY')"
5.4,0,"('HYPERPARAMETERS', 'VALIDATION SETS')","('HYPERPARAMETERS', 'use', 'VALIDATION SETS')"
5.4,1,"('Machine Learning', 'hyperparameter', 'model capacity', 'overfitting', 'figure 5.3', 'polynomial', 'weight decay', 'validation set', 'generalization error', 'learner', 'test set', 'parameters', 'training set', 'optimization', 'scientific community', 'state-of-the-art', 'benchmarks', 'field performance', 'trained system', 'benchmark datasets')","('Machine Learning', 'field performance', 'state-of-the-art')
('model capacity', 'hyperparameter', 'Machine Learning')
('overfitting', 'part of', 'Machine Learning')
('figure 5.3', 'based on', 'Machine Learning')
('weight decay', 'part of', 'Machine Learning')
('validation set', 'part of', 'Machine Learning')
('generalization error', 'part of', 'Machine Learning')
('learner', 'part of', 'Machine Learning')
('test set', 'part of', 'Machine Learning')
('parameters', 'part of', 'Machine Learning')
('training set', 'part of', 'Machine Learning')
('optimization', 'part of', 'Machine Learning')
('scientific community', 'use', 'Machine Learning')
('state-of-the-art', 'instance of', 'Machine Learning')
('benchmarks', 'part of', 'Machine Learning')
('field performance', 'facet of', 'Machine Learning')
('trained system', 'facet of', 'Machine Learning')
('benchmark datasets', 'part of', 'Machine Learning')"
5.4,2,"('Cross-Validation', 'test set', 'test error', 'algorithm A', 'algorithm B', 'estimation', 'mean test error', 'computational cost', 'k-fold cross-validation', 'partition', 'non-overlapping subsets', 'estimators', 'variance', 'statistics', 'parameter estimation', 'bias', 'generalization', 'underfitting', 'overfitting', 'Point Estimation', 'parametric model', 'linear regression')","('Cross-Validation', 'part of', 'Machine Learning')
('test set', 'part of', 'Cross-Validation')
('test error', 'part of', 'Cross-Validation')
('algorithm A', 'part of', 'Cross-Validation')
('algorithm B', 'part of', 'Cross-Validation')
('estimation', 'part of', 'Cross-Validation')
('mean test error', 'part of', 'Cross-Validation')
('computational cost', 'part of', 'Cross-Validation')
('k-fold cross-validation', 'part of', 'Cross-Validation')
('partition', 'part of', 'Cross-Validation')
('non-overlapping subsets', 'part of', 'Cross-Validation')
('estimators', 'part of', 'Cross-Validation')
('variance', 'part of', 'Cross-Validation')
('statistics', 'part of', 'Cross-Validation')
('parameter estimation', 'part of', 'Cross-Validation')
('bias', 'part of', 'Cross-Validation')
('generalization', 'part of', 'Cross-Validation')
('underfitting', 'part of', 'Cross-Validation')
('overfitting', 'part of', 'Cross-Validation')
('Point Estimation', 'part of', 'Cross-Validation')
('parametric model', 'based on', 'Cross-Validation')
('linear regression', 'part of', 'Cross-Validation')"
5.4,3,"('Algorithm 5.1', 'k-fold cross-validation', 'generalization error', 'learning algorithm', 'dataset D', 'abstract examples', '(input,target) pair', 'supervised learning', 'unsupervised learning', 'vector of errors', 'confidence interval', 'confidence intervals', 'declare', 'KFoldXV', 'mutually exclusive subsets', 'scalar')","('Algorithm 5.1', 'instance of', 'Machine Learning')
('k-fold cross-validation', 'part of', 'Machine Learning')
('generalization error', 'part of', 'Machine Learning')
('learning algorithm', 'part of', 'Machine Learning')
('dataset D', 'part of', 'Machine Learning')
('abstract examples', 'part of', 'Machine Learning')
('(input,target) pair', 'part of', 'Machine Learning')
('supervised learning', 'facet of', 'Machine Learning')
('unsupervised learning', 'facet of', 'Machine Learning')
('vector of errors', 'part of', 'Machine Learning')
('confidence interval', 'part of', 'Machine Learning')
('confidence intervals', 'part of', 'Machine Learning')
('declare', 'use', 'Machine Learning')
('KFoldXV', 'part of', 'Machine Learning')
('mutually exclusive subsets', 'part of', 'Machine Learning')
('scalar', 'part of', 'Machine Learning')"
5.4,4,"('(i.i.d.)', 'point estimator', 'statistic', 'function of the data', 'true θ', 'range', 'good estimator', 'frequentist perspective', 'random variable', 'function estimation', 'function approximations', 'input vector', 'function f(x)', 'variable y', 'estimate f', 'linear regression', 'polynomial regression', 'parameter', 'bias')","('(i.i.d.)', 'part of', 'Machine Learning')
('point estimator', 'part of', 'Machine Learning')
('statistic', 'part of', 'Machine Learning')
('function of the data', 'part of', 'Machine Learning')
('true θ', 'part of', 'Machine Learning')
('range', 'part of', 'Machine Learning')
('good estimator', 'part of', 'Machine Learning')
('frequentist perspective', 'part of', 'Machine Learning')
('random variable', 'part of', 'Machine Learning')
('function estimation', 'part of', 'Machine Learning')
('function approximations', 'part of', 'Machine Learning')
('input vector', 'part of', 'Machine Learning')
('function f(x)', 'part of', 'Machine Learning')
('variable y', 'part of', 'Machine Learning')
('estimate f', 'part of', 'Machine Learning')
('linear regression', 'part of', 'Machine Learning')
('polynomial regression', 'part of', 'Machine Learning')
('parameter', 'part of', 'Machine Learning')
('bias', 'part of', 'Machine Learning')"
5.4,5,"('expectation', 'data generating distribution', 'unbiased estimator', 'asymptotically unbiased estimator', 'Bernoulli Distribution', 'mean', 'Gaussian Distribution', 'estimator of the mean', 'samples', 'independently and identically distributed')","('expectation', 'part of', 'Machine Learning')
('data generating distribution', 'part of', 'Machine Learning')
('unbiased estimator', 'part of', 'Machine Learning')
('asymptotically unbiased estimator', 'part of', 'Machine Learning')
('Bernoulli Distribution', 'part of', 'Machine Learning')
('mean', 'part of', 'Machine Learning')
('Gaussian Distribution', 'part of', 'Machine Learning')
('estimator of the mean', 'part of', 'Machine Learning')
('samples', 'part of', 'Machine Learning')
('independently and identically distributed', 'part of', 'Machine Learning')"
5.4,6,"('Gaussian', 'probability density function', 'estimator', 'sample mean', 'bias', 'expectation', 'variance parameter', 'biased', 'sample variance')","('Gaussian', 'probability density function', 'estimator')
('sample mean', 'bias', 'expectation')
('variance parameter', 'biased', 'sample variance')"
5.4,7,"('estimator', 'bias', 'sample variance', 'unbiased sample variance estimator', 'variance', 'standard error')","('estimator', 'bias', 'sample variance')
('unbiased sample variance estimator', 'variance', 'standard error')"
5.4,8,"('variance', 'standard error', 'estimator', 'bias', 'mean', 'generalization error', 'confidence interval')","('variance', 'standard error', 'estimator')
('bias', 'mean')
('generalization error', 'confidence interval')"
5.5,0,"('Bernoulli distribution', 'variance', 'estimator', 'bias', 'mean squared error', 'cross-validation', 'mean squared error')","('Bernoulli distribution', 'variance', 'estimator')
('bias', 'mean squared error', 'cross-validation')"
5.5,1,"('mean squared error', 'estimators', 'bias', 'variance', 'capacity', 'underfitting', 'overfitting', 'consistency')","('mean squared error', 'estimators', 'bias')
('variance', 'capacity', 'underfitting')
('overfitting', 'consistency')"
5.5,0,"('MACHINE LEARNING BASICS', 'θ', 'plim', 'θ', 'm', 'convergence', 'probability', 'P', 'θˆ', 'θ', 'consistency', 'estimating', 'mean parameter', 'normal distribution', 'dataset', 'µ', 'σ2', 'estimator', 'x(1)', 'unbiased', 'maximum likelihood estimation', 'examples', 'X', 'x(1)', 'x(m)', 'independently', 'true but unknown data generating distribution p (x)', 'p (x;θ)', 'parametric family', 'probability distributions', 'space', 'index', 'θ', 'real number')","('MACHINE LEARNING BASICS', 'instance of', 'θ')
('θ', 'based on', 'plim')
('θ', 'facet of', 'm')
('convergence', 'part of', 'probability')
('P', 'part of', 'θˆ')
('θ', 'subclass of', 'consistency')
('estimating', 'use', 'mean parameter')
('normal distribution', 'based on', 'dataset')
('µ', 'facet of', 'σ2')
('estimator', 'part of', 'x(1)')
('unbiased', 'subclass of', 'maximum likelihood estimation')
('examples', 'facet of', 'X')
('X', 'based on', 'x(1)')
('x(m)', 'part of', 'independently')
('true but unknown data generating distribution p (x)', 'instance of', 'p (x;θ)')
('parametric family', 'subclass of', 'probability distributions')
('probability distributions', 'based on', 'space')
('space', 'part of', 'index')
('θ', 'subclass of', 'real number')"
5.5,1,"('MACHINE LEARNING', 'NUMERICAL UNDERFLOW', 'OPTIMIZATION PROBLEM', 'LIKELIHOOD', 'ARGMAX', 'CRITERION', 'EMPIRICAL DISTRIBUTION', 'TRAINING DATA', 'MAXIMUM LIKELIHOOD ESTIMATION', 'DISSIMILARITY', 'KL DIVERGENCE', 'DATA GENERATING PROCESS', 'CROSS-ENTROPY', 'NEGATIVE LOG-LIKELIHOOD', 'BERNOULLI DISTRIBUTION', 'SOFTMAX DISTRIBUTION', 'MEAN SQUARED ERROR')","('MACHINE LEARNING', 'instance of', 'NUMERICAL UNDERFLOW')
('MACHINE LEARNING', 'based on', 'OPTIMIZATION PROBLEM')
('OPTIMIZATION PROBLEM', 'instance of', 'LIKELIHOOD')
('LIKELIHOOD', 'instance of', 'ARGMAX')
('LIKELIHOOD', 'based on', 'CRITERION')
('CRITERION', 'based on', 'EMPIRICAL DISTRIBUTION')
('EMPIRICAL DISTRIBUTION', 'based on', 'TRAINING DATA')
('CRITERION', 'instance of', 'MAXIMUM LIKELIHOOD ESTIMATION')
('DISSIMILARITY', 'instance of', 'KL DIVERGENCE')
('KL DIVERGENCE', 'based on', 'DATA GENERATING PROCESS')
('KL DIVERGENCE', 'based on', 'CROSS-ENTROPY')
('CROSS-ENTROPY', 'based on', 'NEGATIVE LOG-LIKELIHOOD')
('NEGATIVE LOG-LIKELIHOOD', 'instance of', 'BERNOULLI DISTRIBUTION')
('BERNOULLI DISTRIBUTION', 'subclass of', 'SOFTMAX DISTRIBUTION')
('SOFTMAX DISTRIBUTION', 'subclass of', 'MEAN SQUARED ERROR')"
5.5,2,"('MACHINE LEARNING', 'COST FUNCTION', 'NEGATIVE LOG-LIKELIHOOD', 'CROSS ENTROPY', 'KL DIVERGENCE', 'MAXIMUM LIKELIHOOD', 'CONDITIONAL PROBABILITY', 'SUPERVISED LEARNING', 'LINEAR REGRESSION')","('MACHINE LEARNING', 'based on', 'COST FUNCTION')
('COST FUNCTION', 'based on', 'NEGATIVE LOG-LIKELIHOOD')
('NEGATIVE LOG-LIKELIHOOD', 'based on', 'CROSS ENTROPY')
('CROSS ENTROPY', 'based on', 'KL DIVERGENCE')
('KL DIVERGENCE', 'based on', 'MAXIMUM LIKELIHOOD')
('MAXIMUM LIKELIHOOD', 'based on', 'CONDITIONAL PROBABILITY')
('CONDITIONAL PROBABILITY', 'based on', 'SUPERVISED LEARNING')
('SUPERVISED LEARNING', 'based on', 'LINEAR REGRESSION')"
5.5,3,"('MACHINE LEARNING', 'I.I.D.', 'CONDITIONAL LOG-LIKELIHOOD', 'LINEAR REGRESSION', 'MEAN SQUARED ERROR', 'MAXIMUM LIKELIHOOD', 'PARAMETERS', 'ESTIMATOR', 'CONSISTENCY')","('MACHINE LEARNING', 'based on', 'I.I.D.')
('I.I.D.', 'based on', 'CONDITIONAL LOG-LIKELIHOOD')
('CONDITIONAL LOG-LIKELIHOOD', 'based on', 'LINEAR REGRESSION')
('LINEAR REGRESSION', 'based on', 'MEAN SQUARED ERROR')
('MEAN SQUARED ERROR', 'based on', 'MAXIMUM LIKELIHOOD')
('MAXIMUM LIKELIHOOD', 'based on', 'PARAMETERS')
('PARAMETERS', 'based on', 'ESTIMATOR')
('ESTIMATOR', 'based on', 'CONSISTENCY')"
5.6,0,"('CONSISTENT ESTIMATORS', 'STATISTICAL EFFICIENCY', 'PARAMETRIC CASE', 'MEAN SQUARED ERROR', 'CRAMÉR-RAO LOWER BOUND', 'MAXIMUM LIKELIHOOD', 'BAYESIAN STATISTICS', 'PRIOR PROBABILITY DISTRIBUTION')","('CONSISTENT ESTIMATORS', 'based on', 'STATISTICAL EFFICIENCY')
('STATISTICAL EFFICIENCY', 'based on', 'PARAMETRIC CASE')
('PARAMETRIC CASE', 'based on', 'MEAN SQUARED ERROR')
('MEAN SQUARED ERROR', 'based on', 'CRAMÉR-RAO LOWER BOUND')
('CRAMÉR-RAO LOWER BOUND', 'based on', 'MAXIMUM LIKELIHOOD')
('MAXIMUM LIKELIHOOD', 'based on', 'BAYESIAN STATISTICS')
('BAYESIAN STATISTICS', 'based on', 'PRIOR PROBABILITY DISTRIBUTION')"
5.6,1,"('PRIOR PROBABILITY DISTRIBUTION', 'BAYES\' RULE', 'POSTERIOR DISTRIBUTION', 'BAYESIAN ESTIMATION', 'MAXIMUM LIKELIHOOD ESTIMATION')","('PRIOR PROBABILITY DISTRIBUTION', 'based on', 'BAYES\' RULE')
('BAYES\' RULE', 'based on', 'POSTERIOR DISTRIBUTION')
('POSTERIOR DISTRIBUTION', 'based on', 'BAYESIAN ESTIMATION')
('BAYESIAN ESTIMATION', 'based on', 'MAXIMUM LIKELIHOOD ESTIMATION')"
5.6,2,"('MACHINE LEARNING BASICS', 'Bayesian Linear Regression')","('MACHINE LEARNING BASICS', 'instance of', 'Bayesian Linear Regression')"
5.6,3,"('Bayesian Linear Regression', 'MAP Estimation')","('Bayesian Linear Regression', 'based on', 'MAP Estimation')"
5.6,4,"('MACHINE LEARNING', 'Bayesian', 'MAP', 'posterior probability', 'likelihood', 'Gaussian', 'weight decay', 'regularization', 'objective function', 'penalty term', 'prior probability distribution', 'Gaussians')","('MACHINE LEARNING', 'based on', 'Bayesian')
('Bayesian', 'based on', 'MAP')
('MAP', 'instance of', 'posterior probability')
('posterior probability', 'based on', 'likelihood')
('likelihood', 'based on', 'Gaussian')
('Gaussian', 'based on', 'weight decay')
('weight decay', 'based on', 'regularization')
('regularization', 'based on', 'objective function')
('objective function', 'based on', 'penalty term')
('penalty term', 'based on', 'prior probability distribution')
('prior probability distribution', 'based on', 'Gaussians')"
5.7,0,"('supervised learning', 'probability distribution', 'likelihood estimation', 'linear regression', 'classification', 'parametric family', 'binary variable', 'logistic sigmoid function', 'logistic regression', 'normal equations', 'optimal weights', 'log-likelihood', 'negative log-likelihood', 'gradient descent')","('supervised learning', 'based on', 'probability distribution')
('probability distribution', 'based on', 'likelihood estimation')
('likelihood estimation', 'based on', 'linear regression')
('linear regression', 'based on', 'classification')
('classification', 'based on', 'parametric family')
('parametric family', 'based on', 'binary variable')
('binary variable', 'based on', 'logistic sigmoid function')
('logistic sigmoid function', 'based on', 'logistic regression')
('logistic regression', 'based on', 'normal equations')
('normal equations', 'based on', 'optimal weights')
('optimal weights', 'based on', 'log-likelihood')
('log-likelihood', 'based on', 'negative log-likelihood')
('negative log-likelihood', 'based on', 'gradient descent')"
5.7,1,"('MACHINE LEARNING BASICS', 'support vector machine', 'logistic regression', 'kernel trick')","('MACHINE LEARNING BASICS', 'based on', 'support vector machine')
('MACHINE LEARNING BASICS', 'based on', 'logistic regression')
('support vector machine', 'subclass of', 'kernel trick')"
5.7,2,"('kernel trick', 'Gaussian kernel', 'support vector machines', 'kernel machines', 'linear models')","('kernel trick', 'based on', 'Gaussian kernel')
('Gaussian kernel', 'part of', 'support vector machines')
('kernel trick', 'subclass of', 'kernel machines')
('kernel trick', 'use', 'linear models')"
5.7,3,"('deep learning', 'neural network', 'RBF kernel SVM', 'k-nearest neighbors')","('deep learning', 'subclass of', 'neural network')
('neural network', 'based on', 'RBF kernel SVM')
('neural network', 'based on', 'k-nearest neighbors')"
5.7,4,There are no additional entity annotations in this passage.,No additional entity annotations are found.
5.7,5,"('decision tree', 'internal node', 'leaf node', 'binary string identifier', '2D plane')","('decision tree', 'based on', 'internal node')
('decision tree', 'based on', 'leaf node')
('internal node', 'instance of', 'binary string identifier')
('internal node', 'based on', '2D plane')"
5.8,0,"('machine learning basics', 'decision tree', 'Breiman et al.', 'input space', 'learning algorithm', 'region', 'parameters', 'figure 5.7', 'node', 'axis-aligned cut', 'leaf node', 'output', 'specialized algorithms', 'scope', 'non-parametric', 'size constraints', 'parametric models', 'logistic regression', 'decision boundary', 'axis-aligned splits', 'nearest neighbor predictors', 'computational resources', 'intuition', 'sophisticated algorithms', 'k-NN', 'baselines', 'Murphy (2012)', 'Bishop (2006)', 'Hastie et al. (2001)', 'machine learning textbooks', 'unsupervised learning algorithms', 'section 5.1.3', 'features', 'supervision signal', 'value', 'feature', 'target', 'supervisor', 'distribution', 'human labor', 'annotate examples', 'density estimation', 'sample drawing', 'denoise data', 'manifold', 'clustering', 'groups')","('machine learning basics', 'instance of', 'decision tree')
('decision tree', 'based on', 'Breiman et al.')
('decision tree', 'facet of', 'input space')
('decision tree', 'facet of', 'learning algorithm')
('input space', 'part of', 'region')
('learning algorithm', 'part of', 'region')
('region', 'based on', 'parameters')
('region', 'part of', 'figure 5.7')
('region', 'part of', 'node')
('region', 'part of', 'axis-aligned cut')
('region', 'part of', 'leaf node')
('axis-aligned cut', 'part of', 'output')
('leaf node', 'part of', 'output')
('output', 'based on', 'specialized algorithms')
('output', 'facet of', 'scope')
('specialized algorithms', 'facet of', 'scope')
('specialized algorithms', 'facet of', 'size constraints')
('size constraints', 'part of', 'parametric models')
('parametric models', 'based on', 'logistic regression')
('output', 'part of', 'decision boundary')
('decision boundary', 'facet of', 'axis-aligned splits')
('axis-aligned splits', 'facet of', 'nearest neighbor predictors')
('nearest neighbor predictors', 'based on', 'computational resources')
('nearest neighbor predictors', 'based on', 'intuition')
('nearest neighbor predictors', 'based on', 'sophisticated algorithms')
('sophisticated algorithms', 'facet of', 'k-NN')
('k-NN', 'based on', 'baselines')
('decision tree', 'based on', 'Murphy (2012)')
('decision tree', 'based on', 'Bishop (2006)')
('decision tree', 'based on', 'Hastie et al. (2001)')
('machine learning basics', 'based on', 'machine learning textbooks')
('unsupervised learning algorithms', 'based on', 'section 5.1.3')
('region', 'based on', 'features')
('output', 'based on', 'supervision signal')
('features', 'part of', 'value')
('value', 'part of', 'feature')
('supervision signal', 'part of', 'target')
('supervision signal', 'part of', 'supervisor')
('region', 'part of', 'distribution')
('distribution', 'based on', 'human labor')
('distribution', 'based on', 'annotate examples')
('distribution', 'based on', 'density estimation')
('distribution', 'based on', 'sample drawing')
('distribution', 'based on', 'denoise data')
('region', 'part of', 'manifold')
('manifold', 'based on', 'clustering')
('clustering', 'based on', 'groups')"
5.8,1,"('machine learning basics', 'unsupervised learning task', 'representation of the data', 'sparse representations', 'Barlow (1989)', 'Olshausen and Field (1996)', 'Hinton and Ghahramani (1997)', 'dimensionality', 'independent representations', 'sources of variation', 'data distribution', 'statistics', 'low-dimensional representations', 'dependencies', 'high-dimensional data', 'redundancies', 'deep learning', 'principal components analysis', 'compression', 'unsupervised learning algorithm')","('machine learning basics', 'based on', 'unsupervised learning task')
('unsupervised learning task', 'facet of', 'representation of the data')
('representation of the data', 'based on', 'sparse representations')
('sparse representations', 'based on', 'Barlow (1989)')
('sparse representations', 'based on', 'Olshausen and Field (1996)')
('sparse representations', 'based on', 'Hinton and Ghahramani (1997)')
('representation of the data', 'facet of', 'dimensionality')
('dimensionality', 'facet of', 'independent representations')
('independent representations', 'based on', 'sources of variation')
('data distribution', 'facet of', 'statistics')
('statistics', 'facet of', 'low-dimensional representations')
('low-dimensional representations', 'based on', 'dependencies')
('low-dimensional representations', 'facet of', 'high-dimensional data')
('high-dimensional data', 'based on', 'redundancies')
('redundancies', 'based on', 'deep learning')
('redundancies', 'based on', 'principal components analysis')
('low-dimensional representations', 'facet of', 'compression')
('compression', 'based on', 'unsupervised learning algorithm')"
5.8,2,"('machine learning basics', 'linear projection', 'variance', 'new space', 'original data', 'axis-aligned', 'transformed data', 'variance', 'linear correlation', 'representation learning algorithm', 'nonlinear relationships', 'orthogonal', 'transformation', 'input', 'representation', 'dimensionality reduction method', 'information', 'least-squares reconstruction error', 'PCA representation', 'decorrelation', 'design matrix', 'mean', 'sample covariance matrix')","('machine learning basics', 'based on', 'linear projection')
('linear projection', 'facet of', 'variance')
('linear projection', 'facet of', 'new space')
('new space', 'facet of', 'original data')
('linear projection', 'facet of', 'axis-aligned')
('original data', 'facet of', 'transformed data')
('transformed data', 'facet of', 'variance')
('transformed data', 'facet of', 'linear correlation')
('representation learning algorithm', 'facet of', 'nonlinear relationships')
('transformed data', 'facet of', 'orthogonal')
('orthogonal', 'part of', 'transformation')
('input', 'facet of', 'representation')
('representation', 'facet of', 'dimensionality reduction method')
('dimensionality reduction method', 'facet of', 'information')
('dimensionality reduction method', 'facet of', 'least-squares reconstruction error')
('least-squares reconstruction error', 'based on', 'PCA representation')
('PCA representation', 'facet of', 'decorrelation')
('original data', 'facet of', 'design matrix')
('design matrix', 'facet of', 'mean')
('design matrix', 'facet of', 'sample covariance matrix')"
5.8,3,"('machine learning basics', 'linear transformation', 'representation', 'variance', 'design matrix', 'principal components', 'eigenvectors', 'singular value decomposition', 'right singular vectors', 'variance of X', 'covariance of z')","('machine learning basics', 'based on', 'linear transformation')
('linear transformation', 'facet of', 'representation')
('representation', 'facet of', 'variance')
('representation', 'facet of', 'design matrix')
('design matrix', 'facet of', 'principal components')
('principal components', 'based on', 'eigenvectors')
('principal components', 'based on', 'singular value decomposition')
('singular value decomposition', 'based on', 'right singular vectors')
('variance of X', 'part of', 'representation')
('representation', 'facet of', 'covariance of z')"
5.8,4,"('linear transformation', 'diagonal covariance matrix', 'uncorrelated', 'unknown factors of variation', 'rotation', 'principal axes of variance', 'basis', 'correlation', 'dependency', 'k-means clustering', 'clusters', 'one-hot code vector', 'sparse representation', 'distributed representation', 'centroids', 'convergence', 'training examples')","('linear transformation', 'facet of', 'diagonal covariance matrix')
('diagonal covariance matrix', 'facet of', 'uncorrelated')
('uncorrelated', 'facet of', 'unknown factors of variation')
('linear transformation', 'facet of', 'rotation')
('rotation', 'facet of', 'principal axes of variance')
('rotation', 'facet of', 'basis')
('correlation', 'facet of', 'dependency')
('k-means clustering', 'based on', 'clusters')
('clusters', 'based on', 'one-hot code vector')
('sparse representation', 'facet of', 'distributed representation')
('clusters', 'based on', 'centroids')
('centroids', 'based on', 'convergence')
('convergence', 'based on', 'training examples')"
5.9,0,"('MACHINE LEARNING', 'clustering', 'Euclidean distance', 'training data', 'cluster assignments', 'real world', 'clustering algorithms', 'dataset', 'images', 'red trucks', 'red cars', 'gray trucks', 'gray cars', 'number of clusters', 'attributes', 'distributed representation', 'learning algorithm', 'color', 'car', 'truck', 'manufacturer', 'age', 'optimal distributed representation', 'learning algorithm', 'many attributes', 'similarity', 'objects', 'fine-grained way', 'testing', 'Stochastic Gradient Descent')","('clustering', 'based on', 'Euclidean distance')
('clustering', 'use', 'training data')
('clustering', 'use', 'cluster assignments')
('clustering', 'part of', 'real world')
('clustering', 'use', 'clustering algorithms')
('clustering', 'use', 'dataset')
('dataset', 'instance of', 'images')
('dataset', 'part of', 'red trucks')
('dataset', 'part of', 'red cars')
('dataset', 'part of', 'gray trucks')
('dataset', 'part of', 'gray cars')
('clustering', 'use', 'number of clusters')
('clustering', 'use', 'attributes')
('learning algorithm', 'instance of', 'distributed representation')
('learning algorithm', 'use', 'color')
('learning algorithm', 'subclass of', 'car')
('learning algorithm', 'subclass of', 'truck')
('learning algorithm', 'use', 'manufacturer')
('learning algorithm', 'use', 'age')
('learning algorithm', 'use', 'optimal distributed representation')
('learning algorithm', 'use', 'many attributes')
('learning algorithm', 'use', 'similarity')
('learning algorithm', 'use', 'objects')
('learning algorithm', 'use', 'fine-grained way')
('learning algorithm', 'facet of', 'testing')
('learning algorithm', 'use', 'Stochastic Gradient Descent')"
5.9,1,"('MACHINE LEARNING', 'gradient descent algorithm', 'training sets', 'generalization', 'computational cost', 'per-example loss function', 'conditional log-likelihood', 'training data', 'additive cost functions', 'gradient step', 'stochastic gradient descent', 'expectation', 'sample', 'minibatch', 'training set size', 'estimate of the gradient', 'learning rate')","('gradient descent algorithm', 'use', 'training sets')
('gradient descent algorithm', 'use', 'generalization')
('gradient descent algorithm', 'use', 'computational cost')
('gradient descent algorithm', 'use', 'per-example loss function')
('gradient descent algorithm', 'use', 'conditional log-likelihood')
('gradient descent algorithm', 'use', 'training data')
('additive cost functions', 'use', 'gradient step')
('additive cost functions', 'use', 'stochastic gradient descent')
('stochastic gradient descent', 'use', 'expectation')
('stochastic gradient descent', 'use', 'sample')
('stochastic gradient descent', 'use', 'minibatch')
('stochastic gradient descent', 'use', 'training set size')
('stochastic gradient descent', 'use', 'estimate of the gradient')
('stochastic gradient descent', 'use', 'learning rate')"
5.10,0,"('MACHINE LEARNING', 'gradient descent', 'non-convex optimization problems', 'machine learning models', 'cost function', 'stochastic gradient descent', 'linear models', 'linear model', 'training set size', 'test error', 'asymptotic cost', 'kernel trick', 'kernel learning algorithms', 'deep learning', 'new examples', 'competiting algorithms', 'datasets', 'tens of thousands of examples', 'scalable way', 'enhancements', 'building a machine learning algorithm', 'linear regression algorithm', 'dataset')","('gradient descent', 'use', 'non-convex optimization problems')
('gradient descent', 'use', 'machine learning models')
('gradient descent', 'use', 'cost function')
('gradient descent', 'use', 'stochastic gradient descent')
('linear models', 'use', 'linear model')
('linear models', 'use', 'training set size')
('linear models', 'use', 'test error')
('linear models', 'use', 'asymptotic cost')
('linear models', 'use', 'kernel trick')
('kernel trick', 'use', 'kernel learning algorithms')
('machine learning models', 'use', 'deep learning')
('machine learning models', 'use', 'new examples')
('machine learning models', 'use', 'competiting algorithms')
('machine learning models', 'use', 'datasets')
('competiting algorithms', 'use', 'tens of thousands of examples')
('building a machine learning algorithm', 'use', 'scalable way')
('building a machine learning algorithm', 'use', 'enhancements')
('linear regression algorithm', 'instance of', 'building a machine learning algorithm')
('linear regression algorithm', 'use', 'dataset')"
5.10,1,"('MACHINE LEARNING', 'cost function', 'maximum likelihood estimation', 'regularization terms', 'weight decay', 'linear regression', 'closed-form optimization', 'iterative numerical optimization procedure', 'gradient descent', 'supervised learning', 'unsupervised learning', 'PCA vector', 'loss function', 'reconstruction function', 'approximating gradients', 'unique')","('cost function', 'use', 'maximum likelihood estimation')
('cost function', 'use', 'regularization terms')
('regularization terms', 'use', 'weight decay')
('linear regression', 'use', 'closed-form optimization')
('linear regression', 'use', 'iterative numerical optimization procedure')
('iterative numerical optimization procedure', 'use', 'gradient descent')
('supervised learning', 'use', 'loss function')
('unsupervised learning', 'use', 'loss function')
('unsupervised learning', 'use', 'reconstruction function')
('reconstruction function', 'use', 'approximating gradients')
('PCA vector', 'part of', 'unique')"
5.11,0,"('MACHINE LEARNING', 'special-case optimizer', 'decision trees', 'k-means', 'gradient-based optimizers', 'taxonomy of methods', 'challenges motivating deep learning', 'AI tasks', 'generalization', 'high-dimensional data', 'complicated functions', 'curse of dimensionality', 'distinct configurations', 'exponentially')","('special-case optimizer', 'subclass of', 'decision trees')
('special-case optimizer', 'subclass of', 'k-means')
('special-case optimizer', 'subclass of', 'gradient-based optimizers')
('taxonomy of methods', 'use', 'challenges motivating deep learning')
('AI tasks', 'use', 'generalization')
('AI tasks', 'use', 'high-dimensional data')
('AI tasks', 'use', 'complicated functions')
('complicated functions', 'facet of', 'curse of dimensionality')
('curse of dimensionality', 'use', 'distinct configurations')
('curse of dimensionality', 'use', 'exponentially')"
5.11,1,"('machine learning', 'dimensions', 'learning algorithms', 'target function', 'regression', 'curse of dimensionality', 'statistical challenge', 'input space')","('machine learning', 'facet of', 'dimensions')
('learning algorithms', 'part of', 'machine learning')
('target function', 'facet of', 'learning algorithms')
('regression', 'facet of', 'learning algorithms')
('curse of dimensionality', 'facet of', 'statistical challenge')
('statistical challenge', 'facet of', 'learning algorithms')
('input space', 'facet of', 'learning algorithms')"
5.11,2,"('MACHINE LEARNING BASICS', 'machine learning algorithms', 'smoothness prior', 'local constancy prior')","('MACHINE LEARNING BASICS', 'machine learning algorithms', 'smoothness prior')

('MACHINE LEARNING BASICS', 'machine learning algorithms', 'local constancy prior')"
5.11,3,"('local kernels', 'deep learning', 'decision trees')","('local kernels', 'deep learning', 'decision trees')"
5.11,4,"('nearest neighbor algorithm', 'Voronoi diagram')","('nearest neighbor algorithm', 'based on', 'Voronoi diagram')"
5.11,5,"('deep learning algorithms', 'data generating distribution')","('deep learning algorithms', 'based on', 'data generating distribution')"
5.11,6,('manifold'),"('manifold', 'instance of', 'mathematical concept')"
5.11,7,"('MACHINE LEARNING', 'Rn', 'Manifold learning', 'continuous-valued data', 'unsupervised learning', 'probability concentration', 'discrete data', 'supervised learning', 'AI tasks', 'images', 'sounds', 'text', 'manifold assumption', 'probability distribution', 'real life', 'Uniform noise', 'analog television sets', 'document', 'English-language text', 'natural language sequence', 'total space', 'sequences of letters')","('MACHINE LEARNING', 'instance of', 'Rn')
('MACHINE LEARNING', 'instance of', 'Manifold learning')
('Rn', 'part of', 'Manifold learning')
('continuous-valued data', 'instance of', 'Rn')
('unsupervised learning', 'instance of', 'MACHINE LEARNING')
('probability concentration', 'subclass of', 'probability distribution')
('discrete data', 'instance of', 'Rn')
('supervised learning', 'instance of', 'MACHINE LEARNING')
('AI tasks', 'instance of', 'MACHINE LEARNING')
('images', 'instance of', 'AI tasks')
('sounds', 'instance of', 'AI tasks')
('text', 'instance of', 'AI tasks')
('manifold assumption', 'part of', 'MACHINE LEARNING')
('probability distribution', 'part of', 'MACHINE LEARNING')
('real life', 'part of', 'MACHINE LEARNING')
('Uniform noise', 'instance of', 'AI tasks')
('analog television sets', 'instance of', 'AI tasks')
('document', 'instance of', 'text')
('English-language text', 'part of', 'text')
('natural language sequence', 'instance of', 'sequences of letters')
('total space', 'part of', 'Rn')
('sequences of letters', 'subclass of', 'Rn')"
5.11,8,"('MACHINE LEARNING BASICS', 'sampling images', 'uniform distribution', 'noisy images', 'face', 'object', 'AI applications', 'image space', 'probability distributions', 'data', 'manifolds', 'examples')","('MACHINE LEARNING BASICS', 'instance of', 'sampling images')
('sampling images', 'based on', 'uniform distribution')
('sampling images', 'facet of', 'noisy images')
('noisy images', 'instance of', 'face')
('noisy images', 'instance of', 'object')
('noisy images', 'subject of', 'AI applications')
('uniform distribution', 'based on', 'probability distributions')
('probability distributions', 'part of', 'data')
('data', 'subclass of', 'manifolds')
('examples', 'use', 'manifolds')"
5.11,9,"('MACHINE LEARNING BASICS', 'manifold hypothesis', 'transformation', 'image space', 'images', 'human faces', 'cat faces', 'thought experiments', 'rigorous experiments', 'low-dimensional manifold', 'coordinates', 'machine learning algorithms', 'datasets', 'address numbers', 'manifold coordinates', 'improve', 'manifold structure', 'deep learning')","('MACHINE LEARNING BASICS', 'instance of', 'manifold hypothesis')
('manifold hypothesis', 'based on', 'transformation')
('transformation', 'instance of', 'image space')
('images', 'instance of', 'human faces')
('images', 'instance of', 'cat faces')
('manifold hypothesis', 'subject of', 'thought experiments')
('thought experiments', 'subject of', 'rigorous experiments')
('low-dimensional manifold', 'instance of', 'coordinates')
('machine learning algorithms', 'based on', 'datasets')
('datasets', 'address numbers', 'manifold coordinates')
('manifold coordinates', 'improve', 'manifold structure')
('manifold structure', 'use', 'deep learning')"
5.11,10,"('MACHINE LEARNING BASICS', 'Training examples', 'QMUL Multiview Face Dataset', 'subjects', 'two-dimensional manifold', 'angles of rotation', 'learning algorithms', 'manifold coordinates', 'feat')","('MACHINE LEARNING BASICS', 'instance of', 'Training examples')
('Training examples', 'based on', 'QMUL Multiview Face Dataset')
('QMUL Multiview Face Dataset', 'subject of', 'subjects')
('subjects', 'instance of', 'two-dimensional manifold')
('two-dimensional manifold', 'based on', 'angles of rotation')
('learning algorithms', 'based on', 'manifold coordinates')
('manifold coordinates', 'facet of', 'feat')"
5.11,11,"('Deep Networks', 'Modern Practices')","('Deep Networks', 'instance of', 'Modern Practices')"
5.11,12,"('Deep learning', 'aspirations', 'approaches', 'fruit', 'ambitious goals', 'less-developed branches', 'working technologies', 'industry', 'supervised learning', 'deep network', 'functions', 'complexity', 'input vector', 'output vector', 'large models', 'large datasets', 'labeled training examples', 'core parametric function approximation technology', 'feedforward deep network model', 'advanced techniques', 'regularization', 'optimization', 'scaling', 'convolutional network', 'recurrent neural network', 'practical methodology', 'designing', 'building', 'configuring', 'real-world problems', 'practitioner')","('Deep learning', 'instance of', 'aspirations')
('deep network', 'facet of', 'approaches')
('fruit', 'instance of', 'ambitious goals')
('less-developed branches', 'subject of', 'working technologies')
('industry', 'subclass of', 'working technologies')
('supervised learning', 'based on', 'deep network')
('deep network', 'based on', 'functions')
('functions', 'based on', 'complexity')
('input vector', 'based on', 'complexity')
('output vector', 'based on', 'complexity')
('large models', 'based on', 'complexity')
('large datasets', 'based on', 'complexity')
('labeled training examples', 'based on', 'core parametric function approximation technology')
('core parametric function approximation technology', 'instance of', 'feedforward deep network model')
('advanced techniques', 'based on', 'core parametric function approximation technology')
('regularization', 'facet of', 'core parametric function approximation technology')
('optimization', 'facet of', 'core parametric function approximation technology')
('scaling', 'primitive part of', 'core parametric function approximation technology')
('convolutional network', 'instance of', 'core parametric function approximation technology')
('recurrent neural network', 'instance of', 'core parametric function approximation technology')
('practical methodology', 'instance of', 'designing')
('designing', 'facet of', 'building')
('building', 'facet of', 'configuring')
('real-world problems', 'instance of', 'configuring')
('practitioner', 'use', 'real-world problems')"
5.11,13,"('Deep Feedforward Networks', 'feedforward neural networks', 'multilayer perceptrons (MLPs)', 'classifier', 'feedforward network', 'function approximation', 'parameters', 'θ', 'feedback connections', 'recurrent neural networks', 'machine learning practitioners', 'commercial applications', 'convolutional networks', 'object recognition', 'photos', 'natural language applications', 'directed acyclic graph', 'neural networks', 'first layer', 'second layer')","('Deep Feedforward Networks', 'instance of', 'feedforward neural networks')
('multilayer perceptrons (MLPs)', 'instance of', 'feedforward neural networks')
('classifier', 'instance of', 'feedforward neural networks')
('feedforward network', 'instance of', 'feedforward neural networks')
('function approximation', 'instance of', 'feedforward neural networks')
('parameters', 'instance of', 'feedforward neural networks')
('θ', 'instance of', 'feedforward neural networks')
('feedback connections', 'instance of', 'recurrent neural networks')
('recurrent neural networks', 'subclass of', 'neural networks')
('machine learning practitioners', 'use', 'neural networks')
('commercial applications', 'use', 'neural networks')
('convolutional networks', 'subclass of', 'neural networks')
('object recognition', 'use', 'convolutional networks')
('photos', 'instance of', 'objects')
('natural language applications', 'use', 'neural networks')
('directed acyclic graph', 'subclass of', 'neural networks')
('neural networks', 'instance of', 'Deep Feedforward Networks')
('neural networks', 'use', 'machine learning practitioners')
('neural networks', 'use', 'commercial applications')
('neural networks', 'use', 'natural language applications')
('neural networks', 'use', 'directed acyclic graph')
('first layer', 'part of', 'feedforward network')
('second layer', 'part of', 'feedforward network')"
5.11,14,"('neural network training', 'output layer', 'training data', 'learning algorithm', 'hidden layers', 'neuron', 'vector-valued representation', 'functions', 'biological neurons', 'mathematical', 'engineering disciplines', 'function approximation machines', 'statistical generalization', 'linear models', 'logistic regression', 'linear regression', 'model capacity', 'nonlinear functions', 'transformed input')","('neural network training', 'use', 'learning algorithm')
('output layer', 'part of', 'neural network training')
('training data', 'part of', 'neural network training')
('learning algorithm', 'use', 'neural network training')
('hidden layers', 'part of', 'neural network training')
('neuron', 'part of', 'neural network training')
('vector-valued representation', 'part of', 'neural network training')
('functions', 'part of', 'neural network training')
('biological neurons', 'instance of', 'neuron')
('mathematical', 'part of', 'engineering disciplines')
('engineering disciplines', 'instance of', 'functions')
('function approximation machines', 'instance of', 'functions')
('statistical generalization', 'part of', 'functions')
('linear models', 'subclass of', 'functions')
('logistic regression', 'subclass of', 'linear models')
('linear regression', 'subclass of', 'linear models')
('model capacity', 'part of', 'functions')
('nonlinear functions', 'subclass of', 'functions')
('transformed input', 'part of', 'functions')"
5.11,15,"('kernel trick', 'nonlinear learning algorithm', 'features', 'deep learning', 'model', 'parameters', 'representation', 'optimization algorithm', 'benefits outweigh the harms', 'parametrize the representation', 'knowledge', 'designing families', 'improving models', 'recurring theme', 'learning deterministic')","('kernel trick', 'instance of', 'nonlinear learning algorithm')
('features', 'part of', 'nonlinear learning algorithm')
('deep learning', 'subclass of', 'model')
('model', 'part of', 'nonlinear learning algorithm')
('parameters', 'part of', 'nonlinear learning algorithm')
('representation', 'part of', 'nonlinear learning algorithm')
('optimization algorithm', 'part of', 'nonlinear learning algorithm')
('benefits outweigh the harms', 'part of', 'nonlinear learning algorithm')
('parametrize the representation', 'part of', 'nonlinear learning algorithm')
('knowledge', 'part of', 'nonlinear learning algorithm')
('designing families', 'part of', 'nonlinear learning algorithm')
('improving models', 'part of', 'nonlinear learning algorithm')
('recurring theme', 'part of', 'nonlinear learning algorithm')
('learning deterministic', 'part of', 'nonlinear learning algorithm')"
6.1,0,"('hidden layer', 'activation functions', 'architecture', 'back-propagation algorithm', 'historical perspective', 'XOR function', 'binary values', 'target function', 'learning algorithm', 'parameters', 'statistical generalization', 'training set', 'regression problem', 'mean squared error loss function')","('hidden layer', 'part of', 'architecture')
('activation functions', 'part of', 'hidden layer')
('architecture', 'part of', 'back-propagation algorithm')
('back-propagation algorithm', 'part of', 'learning algorithm')
('historical perspective', 'part of', 'back-propagation algorithm')
('XOR function', 'part of', 'back-propagation algorithm')
('binary values', 'part of', 'target function')
('target function', 'part of', 'back-propagation algorithm')
('learning algorithm', 'use', 'back-propagation algorithm')
('parameters', 'part of', 'learning algorithm')
('statistical generalization', 'part of', 'learning algorithm')
('training set', 'part of', 'learning algorithm')
('regression problem', 'part of', 'learning algorithm')
('mean squared error loss function', 'part of', 'learning algorithm')"
6.1,1,"('cost function', 'model', 'linear model', 'hidden layer', 'hidden units', 'feedforward network', 'input', 'output layer', 'function', 'chained together', 'affine transformation', 'activation function', 'weights', 'biases', 'linear regression')","('cost function', 'part of', 'model')
('model', 'instance of', 'linear model')
('linear model', 'part of', 'feedforward network')
('hidden layer', 'part of', 'feedforward network')
('hidden units', 'part of', 'hidden layer')
('feedforward network', 'use', 'chained together')
('input', 'part of', 'feedforward network')
('output layer', 'part of', 'feedforward network')
('function', 'part of', 'affine transformation')
('chained together', 'part of', 'affine transformation')
('affine transformation', 'part of', 'activation function')
('activation function', 'part of', 'hidden layer')
('weights', 'part of', 'affine transformation')
('biases', 'part of', 'affine transformation')
('linear regression', 'part of', 'linear model')"
6.1,2,"('DEEP FEEDFORWARD NETWORKS', 'XOR', 'x', 'h', 'linear model')","('DEEP FEEDFORWARD NETWORKS', 'instance of', 'XOR')
('XOR', 'head', 'x')
('XOR', 'head', 'h')
('XOR', 'head', 'linear model')"
6.1,3,"('DEEP FEEDFORWARD NETWORKS', 'XOR', 'feedforward network', 'hidden layer', 'activations', 'matrix W', 'vector w', 'affine transformation', 'input vector', 'output scalar', 'bias parameter', 'activation function', 'rectified linear unit', 'ReLU', 'figure 6.3', 'network', 'solution to the XOR problem')","('DEEP FEEDFORWARD NETWORKS', 'instance of', 'XOR')
('XOR', 'head', 'feedforward network')
('feedforward network', 'part of', 'hidden layer')
('hidden layer', 'part of', 'activations')
('activations', 'part of', 'matrix W')
('activations', 'part of', 'vector w')
('matrix W', 'part of', 'affine transformation')
('vector w', 'part of', 'affine transformation')
('affine transformation', 'based on', 'input vector')
('affine transformation', 'based on', 'output scalar')
('affine transformation', 'based on', 'bias parameter')
('affine transformation', 'based on', 'activation function')
('activation function', 'subclass of', 'rectified linear unit')
('rectified linear unit', 'subclass of', 'ReLU')
('ReLU', 'part of', 'figure 6.3')
('figure 6.3', 'part of', 'network')
('network', 'instance of', 'solution to the XOR problem')"
6.1,4,"('rectified linear activation function', 'linear transformation', 'nonlinear transformation', 'piecewise linear function', 'gradient-based methods', 'linear models', 'universal function approximator')","('rectified linear activation function', 'subclass of', 'linear transformation')
('linear transformation', 'subclass of', 'nonlinear transformation')
('nonlinear transformation', 'subclass of', 'piecewise linear function')
('piecewise linear function', 'use', 'gradient-based methods')
('linear models', 'subclass of', 'universal function approximator')"
6.1,5,"('weight matrix', 'bias vector', 'input matrix', 'neural network', 'linear model', 'rectified linear transformation', 'output', 'slope', 'examples', 'space', 'weight vector')","('weight matrix', 'part of', 'neural network')
('bias vector', 'part of', 'neural network')
('input matrix', 'part of', 'neural network')
('neural network', 'instance of', 'linear model')
('linear model', 'based on', 'rectified linear transformation')
('rectified linear transformation', 'output', 'output')
('rectified linear transformation', 'output', 'slope')
('linear model', 'based on', 'examples')
('examples', 'part of', 'space')
('space', 'part of', 'weight vector')"
6.2,0,"('Deep Feedforward Networks', 'neural network', 'batch', 'solution', 'error', 'model parameters', 'training examples', 'gradient-based optimization algorithm', 'XOR problem', 'loss function', 'gradient descent', 'initial values', 'parameters', 'machine learning model', 'nonlinearity', 'non-convex', 'iterative', 'optimizers', 'cost function', 'model family', 'linear models', 'linear regression models', 'convex optimization', 'global convergence', 'stochastic gradient descent', 'biases', 'random values', 'feedforward neural networks', 'weights', 'iterative gradient-based optimization algorithms', 'deep models', 'parameter initialization', 'training algorithm', 'gradient', 'cost function', 'specific algorithms', 'gradient descent')","('Deep Feedforward Networks', 'instance of', 'neural network')
('neural network', 'subclass of', 'Deep Feedforward Networks')
('batch', 'part of', 'Deep Feedforward Networks')
('solution', 'based on', 'Deep Feedforward Networks')
('error', 'based on', 'Deep Feedforward Networks')
('model parameters', 'based on', 'Deep Feedforward Networks')
('training examples', 'based on', 'Deep Feedforward Networks')
('gradient-based optimization algorithm', 'based on', 'Deep Feedforward Networks')
('XOR problem', 'based on', 'Deep Feedforward Networks')
('loss function', 'based on', 'Deep Feedforward Networks')
('gradient descent', 'based on', 'Deep Feedforward Networks')
('initial values', 'based on', 'Deep Feedforward Networks')
('parameters', 'based on', 'Deep Feedforward Networks')
('machine learning model', 'based on', 'Deep Feedforward Networks')
('nonlinearity', 'based on', 'Deep Feedforward Networks')
('non-convex', 'based on', 'Deep Feedforward Networks')
('iterative', 'based on', 'Deep Feedforward Networks')
('optimizers', 'based on', 'Deep Feedforward Networks')
('cost function', 'based on', 'Deep Feedforward Networks')
('model family', 'based on', 'Deep Feedforward Networks')
('linear models', 'based on', 'Deep Feedforward Networks')
('linear regression models', 'based on', 'Deep Feedforward Networks')
('convex optimization', 'based on', 'Deep Feedforward Networks')
('global convergence', 'based on', 'Deep Feedforward Networks')
('stochastic gradient descent', 'based on', 'Deep Feedforward Networks')
('biases', 'based on', 'Deep Feedforward Networks')
('random values', 'based on', 'Deep Feedforward Networks')
('feedforward neural networks', 'based on', 'Deep Feedforward Networks')
('weights', 'based on', 'Deep Feedforward Networks')
('iterative gradient-based optimization algorithms', 'based on', 'Deep Feedforward Networks')
('deep models', 'based on', 'Deep Feedforward Networks')
('parameter initialization', 'based on', 'Deep Feedforward Networks')
('training algorithm', 'based on', 'Deep Feedforward Networks')
('gradient', 'based on', 'Deep Feedforward Networks')
('cost function', 'based on', 'Deep Feedforward Networks')
('specific algorithms', 'based on', 'Deep Feedforward Networks')
('gradient descent', 'based on', 'Deep Feedforward Networks')"
6.2,1,"('Deep Feedforward Networks', 'stochastic gradient descent algorithm', 'linear regression', 'support vector machines', 'neural network', 'gradient', 'back-propagation algorithm', 'generalizations', 'cost function', 'parametric models', 'distribution', 'maximum likelihood', 'cross-entropy', 'training data', 'model predictions', 'predict', 'probability distribution', 'specialized loss functions', 'total cost function', 'regularization term', 'weight decay approach', 'advanced regularization strategies', 'learning', 'conditional distributions', 'negative log-likelihood')","('Deep Feedforward Networks', 'instance of', 'neural network')
('stochastic gradient descent algorithm', 'based on', 'Deep Feedforward Networks')
('linear regression', 'based on', 'Deep Feedforward Networks')
('support vector machines', 'based on', 'Deep Feedforward Networks')
('neural network', 'subclass of', 'Deep Feedforward Networks')
('gradient', 'based on', 'Deep Feedforward Networks')
('back-propagation algorithm', 'based on', 'Deep Feedforward Networks')
('generalizations', 'based on', 'Deep Feedforward Networks')
('cost function', 'based on', 'Deep Feedforward Networks')
('parametric models', 'based on', 'Deep Feedforward Networks')
('distribution', 'based on', 'Deep Feedforward Networks')
('maximum likelihood', 'based on', 'Deep Feedforward Networks')
('cross-entropy', 'based on', 'Deep Feedforward Networks')
('training data', 'based on', 'Deep Feedforward Networks')
('model predictions', 'based on', 'Deep Feedforward Networks')
('predict', 'based on', 'Deep Feedforward Networks')
('probability distribution', 'based on', 'Deep Feedforward Networks')
('specialized loss functions', 'based on', 'Deep Feedforward Networks')
('total cost function', 'based on', 'Deep Feedforward Networks')
('regularization term', 'based on', 'Deep Feedforward Networks')
('weight decay approach', 'based on', 'Deep Feedforward Networks')
('advanced regularization strategies', 'based on', 'Deep Feedforward Networks')
('learning', 'based on', 'Deep Feedforward Networks')
('conditional distributions', 'based on', 'Deep Feedforward Networks')
('negative log-likelihood', 'based on', 'Deep Feedforward Networks')"
6.2,2,"('Deep Feedforward Networks', 'cross-entropy', 'training data', 'model distribution', 'cost function', 'J(θ)', 'logp', 'model parameters', 'mean squared error cost', 'output distribution', 'maximum likelihood estimation', 'linear model', 'output units', 'activation functions', 'negative log-likelihood', 'guide', 'learning algorithm', 'saturate', 'gradient', 'hidden units', 'output units', 'exp function', 'log function', 'maximum likelihood estimation', 'minimum value', 'discrete output variables', 'parametrized', 'probability', 'Logistic regression', 'real-valued output variables')","('Deep Feedforward Networks', 'instance of', 'neural network')
('cross-entropy', 'based on', 'Deep Feedforward Networks')
('training data', 'based on', 'Deep Feedforward Networks')
('model distribution', 'based on', 'Deep Feedforward Networks')
('cost function', 'based on', 'Deep Feedforward Networks')
('J(θ)', 'based on', 'Deep Feedforward Networks')
('logp', 'based on', 'Deep Feedforward Networks')
('model parameters', 'based on', 'Deep Feedforward Networks')
('mean squared error cost', 'based on', 'Deep Feedforward Networks')
('output distribution', 'based on', 'Deep Feedforward Networks')
('maximum likelihood estimation', 'based on', 'Deep Feedforward Networks')
('linear model', 'based on', 'Deep Feedforward Networks')
('output units', 'based on', 'Deep Feedforward Networks')
('activation functions', 'based on', 'Deep Feedforward Networks')
('negative log-likelihood', 'based on', 'Deep Feedforward Networks')
('guide', 'based on', 'Deep Feedforward Networks')
('learning algorithm', 'based on', 'Deep Feedforward Networks')
('saturate', 'based on', 'Deep Feedforward Networks')
('gradient', 'based on', 'Deep Feedforward Networks')
('hidden units', 'based on', 'Deep Feedforward Networks')
('output units', 'based on', 'Deep Feedforward Networks')
('exp function', 'based on', 'Deep Feedforward Networks')
('log function', 'based on', 'Deep Feedforward Networks')
('maximum likelihood estimation', 'based on', 'Deep Feedforward Networks')
('minimum value', 'based on', 'Deep Feedforward Networks')
('discrete output variables', 'based on', 'Deep Feedforward Networks')
('parametrized', 'based on', 'Deep Feedforward Networks')
('probability', 'based on', 'Deep Feedforward Networks')
('Logistic regression', 'based on', 'Deep Feedforward Networks')
('real-valued output variables', 'based on', 'Deep Feedforward Networks')"
6.2,3,"('Deep Feedforward Networks', 'density', 'output distribution', 'variance parameter', 'Gaussian output distribution', 'training set outputs', 'cross-entropy', 'negative infinity', 'regularization techniques', 'learning problem', 'conditional statistics', 'predictor', 'neural network', 'function', 'parametric form', 'cost functional', 'minimum', 'optimization problem', 'mathematical tool', 'calculus of variations', 'optimization problem', 'mean squared error cost function', 'data generating distribution')","('Deep Feedforward Networks', 'instance of', 'neural network')
('density', 'based on', 'Deep Feedforward Networks')
('output distribution', 'based on', 'Deep Feedforward Networks')
('variance parameter', 'based on', 'Deep Feedforward Networks')
('Gaussian output distribution', 'based on', 'Deep Feedforward Networks')
('training set outputs', 'based on', 'Deep Feedforward Networks')
('cross-entropy', 'based on', 'Deep Feedforward Networks')
('negative infinity', 'based on', 'Deep Feedforward Networks')
('regularization techniques', 'based on', 'Deep Feedforward Networks')
('learning problem', 'based on', 'Deep Feedforward Networks')
('conditional statistics', 'based on', 'Deep Feedforward Networks')
('predictor', 'based on', 'Deep Feedforward Networks')
('neural network', 'subclass of', 'Deep Feedforward Networks')
('function', 'based on', 'Deep Feedforward Networks')
('parametric form', 'based on', 'Deep Feedforward Networks')
('cost functional', 'based on', 'Deep Feedforward Networks')
('minimum', 'based on', 'Deep Feedforward Networks')
('optimization problem', 'based on', 'Deep Feedforward Networks')
('mathematical tool', 'based on', 'Deep Feedforward Networks')
('calculus of variations', 'based on', 'Deep Feedforward Networks')
('optimization problem', 'based on', 'Deep Feedforward Networks')
('mean squared error cost function', 'based on', 'Deep Feedforward Networks')
('data generating distribution', 'based on', 'Deep Feedforward Networks')"
6.2,4,"('Deep Feedforward Networks', 'cost functions', 'statistics', 'calculus of variations', 'mean squared error', 'mean absolute error', 'gradient-based optimization', 'output units', 'cross-entropy', 'output unit', 'data distribution', 'model distribution', 'neural network unit', 'hidden unit', 'output layer', 'features', 'linear units', 'affine transformation', 'nonlinearity', 'linear output units', 'Gaussian output distributions', 'conditional Gaussian distribution')","('Deep Feedforward Networks', 'instance of', 'neural network')
('cost functions', 'based on', 'Deep Feedforward Networks')
('statistics', 'based on', 'Deep Feedforward Networks')
('calculus of variations', 'based on', 'Deep Feedforward Networks')
('mean squared error', 'based on', 'Deep Feedforward Networks')
('mean absolute error', 'based on', 'Deep Feedforward Networks')
('gradient-based optimization', 'based on', 'Deep Feedforward Networks')
('output units', 'based on', 'Deep Feedforward Networks')
('cross-entropy', 'based on', 'Deep Feedforward Networks')
('output unit', 'based on', 'Deep Feedforward Networks')
('data distribution', 'based on', 'Deep Feedforward Networks')
('model distribution', 'based on', 'Deep Feedforward Networks')
('neural network unit', 'based on', 'Deep Feedforward Networks')
('hidden unit', 'based on', 'Deep Feedforward Networks')
('output layer', 'based on', 'Deep Feedforward Networks')
('features', 'based on', 'Deep Feedforward Networks')
('linear units', 'based on', 'Deep Feedforward Networks')
('affine transformation', 'based on', 'Deep Feedforward Networks')
('nonlinearity', 'based on', 'Deep Feedforward Networks')
('linear output units', 'based on', 'Deep Feedforward Networks')
('Gaussian output distributions', 'based on', 'Deep Feedforward Networks')
('conditional Gaussian distribution', 'based on', 'Deep Feedforward Networks')"
6.2,5,"('deep feedforward networks', 'log-likelihood', 'mean squared error', 'maximum likelihood framework', 'Gaussian', 'input', 'covariance', 'positive definite matrix', 'linear output layer', 'output units', 'parametrize', 'modeling the covariance', 'linear units', 'gradient- based optimization algorithms', 'optimization algorithms', 'sigmoid units', 'Bernoulli output distributions', 'binary variable', 'Bernoulli distribution', 'neural net', 'valid probability', 'interval [0, 1]', 'careful design effort', 'linear unit', 'valid conditional distribution', 'gradient descent', 'unit interval', 'output of the model', 'learning algorithm', 'parameters', 'sigmoid output units', 'maximum likelihood', 'sigmoid output unit')","('deep feedforward networks', 'instance of', 'log-likelihood')
('mean squared error', 'subclass of', 'log-likelihood')
('maximum likelihood framework', 'part of', 'log-likelihood')
('Gaussian', 'instance of', 'log-likelihood')
('input', 'based on', 'log-likelihood')
('covariance', 'facet of', 'log-likelihood')
('positive definite matrix', 'part of', 'covariance')
('linear output layer', 'facet of', 'log-likelihood')
('output units', 'part of', 'linear output layer')
('parametrize', 'based on', 'log-likelihood')
('modeling the covariance', 'part of', 'log-likelihood')
('linear units', 'facet of', 'log-likelihood')
('gradient- based optimization algorithms', 'based on', 'log-likelihood')
('optimization algorithms', 'subclass of', 'gradient- based optimization algorithms')
('sigmoid units', 'part of', 'log-likelihood')
('Bernoulli output distributions', 'subclass of', 'log-likelihood')
('binary variable', 'facet of', 'Bernoulli output distributions')
('Bernoulli distribution', 'instance of', 'Bernoulli output distributions')
('neural net', 'based on', 'log-likelihood')
('valid probability', 'facet of', 'Bernoulli distribution')
('interval [0, 1]', 'facate of', 'valid probability')
('careful design effort', 'part of', 'log-likelihood')
('linear unit', 'subclass of', 'linear units')
('valid conditional distribution', 'part of', 'Bernoulli distribution')
('gradient descent', 'based on', 'log-likelihood')
('unit interval', 'based on', 'valid probability')
('output of the model', 'based on', 'neural net')
('learning algorithm', 'based on', 'log-likelihood')
('parameters', 'part of', 'learning algorithm')
('sigmoid output units', 'part of', 'log-likelihood')
('maximum likelihood', 'subclass of', 'maximum likelihood framework')
('sigmoid output unit', 'part of', 'sigmoid output units')"
6.2,6,"('deep feedforward networks', 'logistic sigmoid function', 'sigmoid output unit', 'linear layer', 'probability distribution over y', 'Bernoulli distribution', 'sigmoidal transformation', 'logit', 'cost function', 'saturation of the sigmoid', 'gradient-based learning', 'loss function', 'softplus function')","('deep feedforward networks', 'part of', 'logistic sigmoid function')
('logistic sigmoid function', 'part of', 'sigmoid output unit')
('sigmoid output unit', 'part of', 'linear layer')
('linear layer', 'part of', 'probability distribution over y')
('probability distribution over y', 'based on', 'Bernoulli distribution')
('sigmoidal transformation', 'part of', 'logit')
('logit', 'part of', 'cost function')
('cost function', 'based on', 'saturation of the sigmoid')
('gradient-based learning', 'part of', 'loss function')
('loss function', 'based on', 'softplus function')"
6.2,7,"('deep feedforward networks', 'sigmoid function', 'loss functions', 'mean squared error', 'maximum likelihood', 'sigmoid output units', 'softmax function', 'probability distribution', 'binary variable', 'multinoulli output distributions', 'softmax units')","('deep feedforward networks', 'part of', 'sigmoid function')
('sigmoid function', 'part of', 'loss functions')
('loss functions', 'based on', 'mean squared error')
('loss functions', 'based on', 'maximum likelihood')
('sigmoid output units', 'part of', 'softmax function')
('softmax function', 'part of', 'probability distribution')
('probability distribution', 'based on', 'binary variable')
('probability distribution', 'based on', 'multinoulli output distributions')
('multinoulli output distributions', 'part of', 'softmax units')"
6.2,8,"('discrete variable', 'vector y', 'unnormalized log probabilities', 'softmax function', 'exponentiate and normalize', 'multinoulli distribution', 'linear layer', 'maximum log-likelihood', 'cost function', 'approximation', 'log-likelihood')","('discrete variable', 'part of', 'vector y')
('vector y', 'part of', 'unnormalized log probabilities')
('unnormalized log probabilities', 'based on', 'softmax function')
('softmax function', 'based on', 'exponentiate and normalize')
('exponentiate and normalize', 'based on', 'multinoulli distribution')
('multinoulli distribution', 'part of', 'linear layer')
('maximum log-likelihood', 'part of', 'cost function')
('cost function', 'based on', 'approximation')
('cost function', 'based on', 'log-likelihood')"
6.2,9,"('maximum likelihood', 'model capacity', 'optimization', 'fractions of each outcome', 'objective functions', 'squared error', 'softmax function', 'saturation', 'numerically stable variant')","('maximum likelihood', 'based on', 'model capacity')
('model capacity', 'part of', 'optimization')
('optimization', 'based on', 'fractions of each outcome')
('objective functions', 'based on', 'squared error')
('squared error', 'based on', 'softmax function')
('softmax function', 'based on', 'saturation')
('saturation', 'based on', 'numerically stable variant')"
6.2,10,"('linear layer', 'overparametrized version', 'restricted version', 'learning dynamics', 'competition between units', 'winner-take-all', 'softmax function', 'argmax function', 'maximum function', 'other output types', 'maximum likelihood')","('linear layer', 'part of', 'overparametrized version')
('linear layer', 'part of', 'restricted version')
('learning dynamics', 'based on', 'competition between units')
('competition between units', 'based on', 'winner-take-all')
('softmax function', 'based on', 'argmax function')
('argmax function', 'based on', 'maximum function')
('maximum function', 'based on', 'other output types')
('other output types', 'based on', 'maximum likelihood')"
6.2,11,"('deep feedforward networks', 'conditional distribution', 'maximum likelihood', 'neural network', 'function', 'parameters', 'loss function', 'conditional Gaussian', 'variance', 'closed form expression', 'maximum likelihood estimator', 'mean', 'squared difference', 'obs...","('deep feedforward networks', 'instance of', 'neural network')
('maximum likelihood', 'instance of', 'loss function')
('neural network', 'subclass of', 'function')
('parameters', 'based on', 'loss function')
('loss function', 'based on', 'neural network')
('conditional Gaussian', 'instance of', 'distribution')
('variance', 'part of', 'conditional Gaussian')
('closed form expression', 'based on', 'distribution')
('maximum likelihood estimator', 'based on', 'maximum likelihood')
('mean', 'based on', 'squared difference')
('squared difference', 'based on', 'observed and estimated values')"
6.2,12,"('deep feedforward networks', 'standard deviation', 'variance', 'precision', 'covariance matrix', 'positive definite', 'diagonal matrix', 'model', 'activation', 'softplus function', 'positive precision vector', 'identity', 'full rank', 'multimodal regression', 'conditional distribution', 'Gaussian mixture', 'mixture density networks', 'components', 'conditional probability distribution', 'latent variable', 'multinoulli distribution', 'Gaussian component')","('variance', 'instance of', 'covariance matrix')
('precision', 'instance of', 'inverse of variance')
('covariance matrix', 'subclass of', 'diagonal matrix')
('model', 'instance of', 'deep feedforward networks')
('activation', 'instance of', 'softplus function')
('positive precision vector', 'subclass of', 'precision vector')
('full rank', 'instance of', 'identity')
('conditional distribution', 'subclass of', 'mixture density networks')
('Gaussian mixture', 'instance of', 'conditional distribution')
('components', 'part of', 'Gaussian mixture')
('conditional probability distribution', 'instance of', 'conditional distribution')
('latent variable', 'instance of', 'multinoulli distribution')
('Gaussian component', 'instance of', 'conditional probability distribution')"
6.2,13,"('deep feedforward networks', 'softmax', 'means', 'Gaussian component', 'negative log-likelihood', 'covariances', 'diagonal matrix', 'gradient-based optimization', 'conditional Gaussian mixtures', 'clip gradients', 'scale the gradients', 'generative models', 'mixture density', 'real-valued domains', 'mixture density network', 'neural network', 'sequence of characters', 'maximum likelihood', 'model')","('deep feedforward networks', 'instance of', 'neural network')
('conditional Gaussian mixtures', 'instance of', 'generative models')
('mixture density network', 'based on', 'mixture density')
('mixture density network', 'subclass of', 'neural network')
('sequence of characters', 'part of', 'model')"
6.3,0,"('deep feedforward networks', 'neural network', 'mixture density output layer', 'input x', 'output y', 'parameters', 'mixture components', 'Gaussian', 'mean', 'variance', 'hidden units', 'parametric machine learning models', 'gradient-based optimization', 'rectified linear units')","('deep feedforward networks', 'instance of', 'neural network')
('mixture density output layer', 'subject of', 'neural network')
('input x', 'subject of', 'neural network')
('output y', 'subject of', 'neural network')
('parameters', 'part of', 'neural network')
('mixture components', 'part of', 'mixture density output layer')
('Gaussian', 'part of', 'mixture components')
('mean', 'part of', 'Gaussian')
('variance', 'part of', 'Gaussian')
('hidden units', 'part of', 'neural network')
('parametric machine learning models', 'subclass of', 'neural network')
('gradient-based optimization', 'use', 'neural network')
('rectified linear units', 'use', 'neural network')"
6.3,1,"('deep feedforward networks', 'hidden units', 'intuitions', 'trial and error', 'validation set', 'differentiable', 'gradient-based learning algorithm', 'cost function', 'minima', 'undefined gradient', 'left derivative', 'right derivative', 'neural network training', 'one-sided derivatives', 'numerical error', 'affine transformation', 'activation function')","('deep feedforward networks', 'part of', 'hidden units')
('intuitions', 'part of', 'deep feedforward networks')
('trial and error', 'part of', 'deep feedforward networks')
('validation set', 'part of', 'deep feedforward networks')
('differentiable', 'part of', 'gradient-based learning algorithm')
('gradient-based learning algorithm', 'use', 'deep feedforward networks')
('cost function', 'part of', 'gradient-based learning algorithm')
('minima', 'part of', 'gradient-based learning algorithm')
('undefined gradient', 'part of', 'gradient-based learning algorithm')
('left derivative', 'part of', 'gradient-based learning algorithm')
('right derivative', 'part of', 'gradient-based learning algorithm')
('neural network training', 'part of', 'deep feedforward networks')
('one-sided derivatives', 'part of', 'gradient-based learning algorithm')
('numerical error', 'part of', 'gradient-based learning algorithm')
('affine transformation', 'part of', 'activation function')
('activation function', 'part of', 'hidden units')"
6.3,2,"('rectified linear units', 'linear units', 'derivatives', 'second derivative', 'gradient direction', 'affine transformation', 'generalizations', 'absolute value rectification', 'object recognition', 'leaky ReLU', 'parametric ReLU', 'PReLU', 'maxout units')","('rectified linear units', 'subclass of', 'linear units')
('derivatives', 'part of', 'rectified linear units')
('second derivative', 'part of', 'derivatives')
('gradient direction', 'part of', 'derivatives')
('affine transformation', 'part of', 'linear units')
('generalizations', 'part of', 'rectified linear units')
('absolute value rectification', 'part of', 'generalizations')
('object recognition', 'part of', 'generalizations')
('leaky ReLU', 'part of', 'generalizations')
('parametric ReLU', 'part of', 'generalizations')
('PReLU', 'part of', 'generalizations')
('maxout units', 'part of', 'generalizations')"
6.3,3,"('maxout units', 'piecewise linear function', 'convex function', 'parametrized', 'regularization', 'statistical and computational advantages', 'catastrophic forgetting', 'deep linear networks', 'recurrent networks')","('maxout units', 'subclass of', 'piecewise linear function')
('convex function', 'part of', 'maxout units')
('parametrized', 'part of', 'maxout units')
('regularization', 'part of', 'maxout units')
('statistical and computational advantages', 'part of', 'maxout units')
('catastrophic forgetting', 'part of', 'recurrent networks')
('deep linear networks', 'part of', 'recurrent networks')"
6.3,4,"('deep feedforward networks', 'LSTM', 'sigmoid', 'hyperbolic tangent', 'rectified linear units', 'neural networks', 'activation functions', 'output units', 'binary variable', 'piecewise linear units', 'gradient-based learning', 'hidden units', 'feedforward networks', 'cost function', 'hyperbolic tangent activation function', 'logistic sigmoid', 'identity function', 'deep neural network', 'linear model', 'probabilistic models', 'autoencoders', 'recurrent networks')","('deep feedforward networks', 'instance of', 'neural networks')
('deep feedforward networks', 'use', 'activation functions')
('deep feedforward networks', 'use', 'output units')
('deep feedforward networks', 'use', 'hidden units')
('LSTM', 'instance of', 'recurrent networks')
('sigmoid', 'instance of', 'activation functions')
('hyperbolic tangent', 'instance of', 'activation functions')"
6.3,5,"('hidden units', 'differentiable functions', 'feedforward network', 'cosine activation function', 'MNIST dataset', 'error rate', 'standard practice', 'significant improvement', 'linear unit', 'linear transformations', 'weight matrix', 'factored approach', 'low-rank relationships', 'number of parameters', 'softmax units', 'probability distribution', 'discrete variable')","('hidden units', 'use', 'differentiable functions')
('feedforward network', 'instance of', 'neural networks')
('cosine activation function', 'instance of', 'activation functions')
('MNIST dataset', 'instance of', 'datasets')
('error rate', 'instance of', 'evaluation metrics')
('standard practice', 'instance of', 'best practices')
('significant improvement', 'instance of', 'improvements')
('linear unit', 'instance of', 'activation functions')
('weight matrix', 'instance of', 'linear transformations')
('factored approach', 'instance of', 'learning approaches')
('low-rank relationships', 'instance of', 'relationship types')
('number of parameters', 'instance of', 'model complexity')
('softmax units', 'instance of', 'activation functions')
('probability distribution', 'instance of', 'statistical concepts')
('discrete variable', 'instance of', 'variable types')"
6.4,0,"('Radial basis function', 'softplus', 'rectifier', 'hard tanh', 'neural network architectures', 'layers', 'chain structure')","('Radial basis function', 'instance of', 'activation functions')
('softplus', 'instance of', 'activation functions')
('rectifier', 'instance of', 'activation functions')
('hard tanh', 'instance of', 'activation functions')
('neural network architectures', 'use', 'layers')
('layers', 'instance of', 'neural network architectures')
('chain structure', 'instance of', 'network topologies')"
6.4,1,"('linear model', 'nonlinear functions', 'feedforward networks', 'hidden layers', 'universal approximation theorem', 'squashing activation function', 'Borel measurable function', 'derivatives', 'continuous function', 'finite dimensional discrete space', 'rectified linear unit', 'multilayer perceptron', 'training algorithm', 'optimization algorithm')","('linear model', 'use', 'nonlinear functions')
('feedforward networks', 'use', 'hidden layers')
('hidden layers', 'instance of', 'layers')
('universal approximation theorem', 'instance of', 'mathematical theorems')
('squashing activation function', 'instance of', 'activation functions')
('Borel measurable function', 'instance of', 'mathematical functions')
('derivatives', 'instance of', 'mathematical concepts')
('continuous function', 'instance of', 'mathematical functions')
('finite dimensional discrete space', 'instance of', 'mathematical spaces')
('rectified linear unit', 'instance of', 'activation functions')
('multilayer perceptron', 'instance of', 'neural networks')
('training algorithm', 'instance of', 'algorithms')
('optimization algorithm', 'instance of', 'algorithms')"
6.4,2,"('training algorithm', 'overfitting', 'no free lunch theorem', 'universal approximation theorem', 'function representation', 'size of network', 'deep models', 'generalization error', 'efficient approximation', 'depth of network', 'logic gates', 'linear threshold units', 'continuous-valued activations', 'rectified linear units')","('training algorithm', 'result in', 'overfitting')
('no free lunch theorem', 'instance of', 'mathematical theorems')
('universal approximation theorem', 'instance of', 'mathematical theorems')
('function representation', 'instance of', 'mathematical concepts')
('size of network', 'affects', 'function representation')
('deep models', 'instance of', 'neural networks')
('generalization error', 'instance of', 'error metrics')
('efficient approximation', 'instance of', 'approximation techniques')
('depth of network', 'affects', 'function representation')
('logic gates', 'instance of', 'computing devices')
('linear threshold units', 'instance of', 'activation functions')
('continuous-valued activations', 'instance of', 'activation functions')
('rectified linear units', 'instance of', 'activation functions')"
6.4,3,"('deep feedforward networks', 'piecewise linear networks', 'rectifier nonlinearities', 'maxout units', 'absolute value rectification', 'regular patterns', 'hyperplane', 'weights', 'bias', 'linear regions', 'inputs', 'hidden layer', 'linear regions', 'depth', 'inputs', 'hidden layer', 'maxout networks', 'filters')","('deep feedforward networks', 'subclass of', 'piecewise linear networks')
('piecewise linear networks', 'subclass of', 'rectifier nonlinearities')
('rectifier nonlinearities', 'use', 'maxout units')
('maxout units', 'subclass of', 'absolute value rectification')
('regular patterns', 'subclass of', 'linear regions')
('linear regions', 'based on', 'hyperplane')
('hyperplane', 'use', 'weights')
('hyperplane', 'use', 'bias')
('inputs', 'part of', 'linear regions')
('inputs', 'part of', 'hidden layer')
('hidden layer', 'subclass of', 'linear regions')
('linear regions', 'based on', 'depth')
('inputs', 'part of', 'linear regions')
('inputs', 'part of', 'hidden layer')
('hidden layer', 'subclass of', 'maxout networks')
('maxout networks', 'subclass of', 'filters')"
6.4,4,"('machine learning', 'AI', 'deep model', 'statistical reasons', 'machine learning algorithm', 'prior beliefs', 'composition of functions', 'representation learning', 'factors of variation', 'computer program', 'internal processing', 'empirical results', 'neural network architectures', 'convolutional networks', 'recurrent neural networks', 'sequence processing', 'skip connections')","('machine learning', 'instance of', 'AI')
('deep model', 'instance of', 'AI')
('deep model', 'subclass of', 'statistical reasons')
('machine learning algorithm', 'instance of', 'AI')
('machine learning algorithm', 'based on', 'prior beliefs')
('composition of functions', 'instance of', 'AI')
('composition of functions', 'based on', 'representation learning')
('factors of variation', 'instance of', 'AI')
('factors of variation', 'based on', 'computer program')
('internal processing', 'instance of', 'AI')
('internal processing', 'based on', 'empirical results')
('neural network architectures', 'instance of', 'AI')
('neural network architectures', 'subclass of', 'deep model')
('convolutional networks', 'instance of', 'AI')
('convolutional networks', 'subclass of', 'neural network architectures')
('recurrent neural networks', 'instance of', 'AI')
('recurrent neural networks', 'subclass of', 'neural network architectures')
('sequence processing', 'subclass of', 'recurrent neural networks')
('skip connections', 'instance of', 'AI')"
6.4,5,"('multi-digit numbers', 'photographs of addresses', 'test set accuracy', 'model size', 'architecture design', 'neural network layer', 'linear transformation', 'matrix W', 'specialized networks', 'input layer', 'output layer', 'number of connections', 'parameters', 'computation', 'convolutional networks', 'computer vision problems', 'generic neural network', 'architectural strategies', 'application domains')","('multi-digit numbers', 'subclass of', 'photographs of addresses')
('test set accuracy', 'instance of', 'model size')
('model size', 'based on', 'architecture design')
('neural network layer', 'based on', 'linear transformation')
('neural network layer', 'based on', 'matrix W')
('specialized networks', 'subclass of', 'generic neural network')
('input layer', 'subclass of', 'neural network layer')
('output layer', 'subclass of', 'neural network layer')
('number of connections', 'based on', 'parameters')
('computation', 'based on', 'parameters')
('convolutional networks', 'subclass of', 'generic neural network')
('convolutional networks', 'based on', 'computer vision problems')
('generic neural network', 'subclass of', 'architectural strategies')
('architectural strategies', 'based on', 'application domains')"
6.4,6,"('convolutional networks', 'fully connected layers', 'number of parameters', 'test set performance', 'depth of network', 'size of the convolutional', 'shallow models', 'overfit', 'deep models', 'preference over the space of functions', 'simpler functions', 'composed representations', 'sequential dependent steps', 'locate a set of objects', 'segment them from each other', 'recognize them')","('convolutional networks', 'based on', 'fully connected layers')
('number of parameters', 'based on', 'fully connected layers')
('test set performance', 'based on', 'number of parameters')
('depth of network', 'based on', 'size of the convolutional')
('size of the convolutional', 'instance of', 'shallow models')
('shallow models', 'subclass of', 'overfit')
('deep models', 'subclass of', 'overfit')
('preference over the space of functions', 'subclass of', 'simpler functions')
('preference over the space of functions', 'based on', 'composed representations')
('composed representations', 'based on', 'sequential dependent steps')
('locate a set of objects', 'based on', 'composed representations')
('segment them from each other', 'based on', 'composed representations')
('recognize them', 'based on', 'composed representations')"
6.5,0,"('feedforward neural network', 'input x', 'output yˆ', 'forward propagation', 'hidden units', 'scalar cost J(θ)', 'back-propagation algorithm', 'gradient', 'analytical expression', 'numerical evaluation', 'learning algorithm', 'multi-layer neural networks', 'stochastic gradient descent', 'function f', 'variables x', 'variables y', 'derivative', 'cost function', 'parameters θ', 'machine learning tasks', 'Jacobian', 'multiple outputs')","('feedforward neural network', 'instance of', 'function f')
('input x', 'part of', 'function f')
('output yˆ', 'part of', 'function f')
('forward propagation', 'part of', 'feedforward neural network')
('hidden units', 'part of', 'feedforward neural network')
('scalar cost J(θ)', 'instance of', 'cost function')
('back-propagation algorithm', 'use', 'gradient')
('gradient', 'obtained via', 'analytical expression')
('gradient', 'obtained via', 'numerical evaluation')
('learning algorithm', 'subclass of', 'machine learning tasks')
('multi-layer neural networks', 'instance of', 'feedforward neural network')
('stochastic gradient descent', 'subclass of', 'learning algorithm')
('function f', 'related to', 'variables x')
('function f', 'related to', 'variables y')
('derivative', 'obtained via', 'analytical expression')
('derivative', 'obtained via', 'numerical evaluation')
('cost function', 'instance of', 'machine learning tasks')
('cost function', 'related to', 'variables y')
('parameters θ', 'part of', 'feedforward neural network')
('Jacobian', 'based on', 'multiple outputs')"
6.5,1,"('deep feedforward networks', 'computational graphs', 'back-propagation algorithm', 'computational graph language', 'variable', 'scalar', 'vector', 'matrix', 'tensor', 'operation', 'function', 'graph language', 'allowable operations', 'software implementations', 'output variable', 'directed edge', 'name of the operation', 'chain rule of calculus', 'chain rule of probability', 'derivatives of functions', 'back-propagation algorithm', 'order of operations', 'real number')","('deep feedforward networks', 'instance of', 'computational graphs')
('back-propagation algorithm', 'instance of', 'computational graph language')
('variable', 'instance of', 'computational graph language')
('scalar', 'instance of', 'variable')
('vector', 'instance of', 'variable')
('matrix', 'instance of', 'variable')
('tensor', 'instance of', 'variable')
('operation', 'instance of', 'computational graph language')
('function', 'instance of', 'computational graph language')
('graph language', 'subclass of', 'computational graph language')
('allowable operations', 'instance of', 'computational graph language')
('software implementations', 'instance of', 'computational graph language')
('output variable', 'instance of', 'computational graph language')
('directed edge', 'instance of', 'computational graph language')
('name of the operation', 'instance of', 'computational graph language')
('chain rule of calculus', 'instance of', 'computational graph language')
('chain rule of probability', 'instance of', 'computational graph language')
('derivatives of functions', 'instance of', 'computational graph language')
('back-propagation algorithm', 'instance of', 'computational graph language')
('order of operations', 'instance of', 'computational graph language')
('real number', 'instance of', 'computational graph language')"
6.5,2,"('deep feedforward networks', 'computational graphs', 'operation', 'compute', 'logistic regression prediction', 'sigmoid function', 'intermediate expressions', 'algebraic expression', 'graph', 'variable', 'design matrix', 'rectified linear unit activation', 'minibatch', 'input', 'linear regression model', 'weight decay penalty')","('deep feedforward networks', 'instance of', 'computational graphs')
('operation', 'instance of', 'computational graphs')
('compute', 'instance of', 'operation')

('logistic regression prediction', 'instance of', 'computational graphs')
('sigmoid function', 'instance of', 'operation')
('logistic regression prediction', 'use', 'sigmoid function')

('intermediate expressions', 'instance of', 'computational graphs')
('algebraic expression', 'instance of', 'operation')
('intermediate expressions', 'use', 'algebraic expression')

('graph', 'instance of', 'computational graphs')
('variable', 'instance of', 'computational graphs')
('graph', 'based on', 'variable')

('design matrix', 'instance of', 'computational graphs')
('rectified linear unit activation', 'instance of', 'operation')
('design matrix', 'use', 'rectified linear unit activation')

('minibatch', 'instance of', 'computational graphs')
('input', 'instance of', 'computational graphs')
('minibatch', 'based on', 'input')

('linear regression model', 'instance of', 'computational graphs')
('weight decay penalty', 'instance of', 'operation')
('linear regression model', 'use', 'weight decay penalty')"
6.5,3,"('deep feedforward networks', 'back-propagation algorithm', 'Jacobian matrix', 'gradient', 'operation', 'graph', 'vectors', 'tensors', 'arbitrary dimensionality', 'grid', 'tensor rearrangement', 'chain rule', 'backprop', 'computational graph', 'scalar', 'algebraic expression', 'computer evaluation', 'repeated subexpressions')","('deep feedforward networks', 'instance of', 'back-propagation algorithm')
('Jacobian matrix', 'instance of', 'back-propagation algorithm')
('gradient', 'instance of', 'back-propagation algorithm')
('operation', 'instance of', 'back-propagation algorithm')
('graph', 'instance of', 'back-propagation algorithm')
('vectors', 'instance of', 'back-propagation algorithm')
('tensors', 'instance of', 'back-propagation algorithm')
('arbitrary dimensionality', 'instance of', 'back-propagation algorithm')
('grid', 'instance of', 'back-propagation algorithm')
('tensor rearrangement', 'instance of', 'back-propagation algorithm')
('chain rule', 'instance of', 'back-propagation algorithm')
('backprop', 'instance of', 'back-propagation algorithm')
('computational graph', 'instance of', 'back-propagation algorithm')
('scalar', 'instance of', 'back-propagation algorithm')
('algebraic expression', 'instance of', 'back-propagation algorithm')
('computer evaluation', 'instance of', 'back-propagation algorithm')
('repeated subexpressions', 'instance of', 'back-propagation algorithm')"
6.5,4,"('deep feedforward networks', 'back-propagation algorithm', 'repeated subexpressions', 'memory consumption', 'chain rule', 'wasted computations', 'naive implementation', 'computational graph', 'gradient computation', 'symbolic graph', 'computational graph order', 'scalar', 'input nodes', 'parameters', 'cost function', 'forward propagation computation', 'back-propagation', 'gradient descent', 'model parameters', 'operation', 'function evaluation', 'graph construction', 'subgraph', 'reverse computation', 'derivative computation')","('deep feedforward networks', 'instance of', 'back-propagation algorithm')
('repeated subexpressions', 'instance of', 'back-propagation algorithm')
('memory consumption', 'instance of', 'back-propagation algorithm')
('chain rule', 'instance of', 'back-propagation algorithm')
('wasted computations', 'instance of', 'back-propagation algorithm')
('naive implementation', 'instance of', 'back-propagation algorithm')
('computational graph', 'instance of', 'back-propagation algorithm')
('gradient computation', 'instance of', 'back-propagation algorithm')
('symbolic graph', 'instance of', 'back-propagation algorithm')
('computational graph order', 'instance of', 'back-propagation algorithm')
('scalar', 'instance of', 'back-propagation algorithm')
('input nodes', 'instance of', 'back-propagation algorithm')
('parameters', 'instance of', 'back-propagation algorithm')
('cost function', 'instance of', 'back-propagation algorithm')
('forward propagation computation', 'instance of', 'back-propagation algorithm')
('back-propagation', 'instance of', 'back-propagation algorithm')
('gradient descent', 'instance of', 'back-propagation algorithm')
('model parameters', 'instance of', 'back-propagation algorithm')
('operation', 'instance of', 'back-propagation algorithm')
('function evaluation', 'instance of', 'back-propagation algorithm')
('graph construction', 'instance of', 'back-propagation algorithm')
('subgraph', 'instance of', 'back-propagation algorithm')
('reverse computation', 'instance of', 'back-propagation algorithm')
('derivative computation', 'instance of', 'back-propagation algorithm')"
6.5,5,"('deep feedforward networks', 'computational graph', 'node', 'function', 'arguments', 'input', 'output', 'chain rule', 'partial derivative', 'edge', 'back-propagation algorithm', 'common subexpressions', 'Jacobian product', 'memory efficiency')","('deep feedforward networks', 'instance of', 'computational graph')
('node', 'instance of', 'computational graph')
('function', 'instance of', 'computational graph')
('arguments', 'instance of', 'computational graph')
('input', 'instance of', 'computational graph')
('output', 'instance of', 'computational graph')
('chain rule', 'instance of', 'computational graph')
('partial derivative', 'instance of', 'computational graph')
('edge', 'instance of', 'computational graph')
('back-propagation algorithm', 'instance of', 'computational graph')
('common subexpressions', 'instance of', 'computational graph')
('Jacobian product', 'instance of', 'computational graph')
('memory efficiency', 'instance of', 'computational graph')"
6.5,6,"('deep feedforward networks', 'back-propagation algorithm', 'variables', 'graph', 'computational cost', 'forward propagation', 'activations', 'network', 'grad_table', 'derivatives', 'data structure', 'subexpressions', 'fully-connected MLP', 'parameters', 'supervised loss', 'neural network', 'training example')","('deep feedforward networks', 'part of', 'neural network')
('back-propagation algorithm', 'use', 'neural network')
('variables', 'part of', 'computational cost')
('graph', 'instance of', 'data structure')
('forward propagation', 'part of', 'neural network')
('activations', 'part of', 'neural network')
('network', 'part of', 'neural network')
('grad_table', 'part of', 'back-propagation algorithm')
('derivatives', 'part of', 'back-propagation algorithm')
('data structure', 'subclass of', 'variables')
('subexpressions', 'part of', 'computational cost')
('fully-connected MLP', 'instance of', 'neural network')
('parameters', 'part of', 'neural network')
('supervised loss', 'part of', 'neural network')
('neural network', 'part of', 'training example')"
6.5,7,"('computational graph', 'gradient', 'input', 'function', 'chain', 'compute', 'implementation', 'back-propagation algorithm', 'alternative approach', 'memory', 'chain rule')","('computational graph', 'part of', 'back-propagation algorithm')
('gradient', 'part of', 'back-propagation algorithm')
('input', 'part of', 'function')
('function', 'part of', 'compute')
('chain', 'part of', 'chain rule')
('compute', 'part of', 'implementation')
('implementation', 'part of', 'alternative approach')
('back-propagation algorithm', 'part of', 'memory')
('alternative approach', 'part of', 'back-propagation algorithm')
('memory', 'part of', 'back-propagation algorithm')
('chain rule', 'part of', 'back-propagation algorithm')"
6.5,8,"('back-propagation algorithm', 'deep neural network', 'cost function', 'loss function', 'regularizer', 'gradients', 'weight matrices', 'bias parameters', 'input example', 'minibatch', 'symbolic representations', 'numeric value')","('back-propagation algorithm', 'use', 'deep neural network')
('deep neural network', 'part of', 'cost function')
('cost function', 'part of', 'loss function')
('loss function', 'part of', 'regularizer')
('gradients', 'part of', 'weight matrices')
('weight matrices', 'part of', 'deep neural network')
('bias parameters', 'part of', 'deep neural network')
('input example', 'part of', 'minibatch')
('minibatch', 'part of', 'deep neural network')
('symbolic representations', 'part of', 'cost function')
('numeric value', 'part of', 'cost function')"
6.5,9,"('deep neural network', 'input', 'target', 'gradients', 'activations', 'output layer', 'hidden layer', 'weights', 'biases', 'stochastic gradient update', 'optimization methods', 'forward computation', 'gradient on output layer', 'pre-nonlinear activation', 'gradients on weights and biases', 'regularization term', 'lower-level hidden layer')","('deep neural network', 'part of', 'input')
('input', 'part of', 'target')
('target', 'part of', 'gradients')
('gradients', 'part of', 'activations')
('activations', 'part of', 'output layer')
('output layer', 'part of', 'hidden layer')
('hidden layer', 'part of', 'weights')
('weights', 'part of', 'biases')
('biases', 'part of', 'deep neural network')
('stochastic gradient update', 'use', 'deep neural network')
('optimization methods', 'use', 'deep neural network')
('forward computation', 'part of', 'deep neural network')
('gradient on output layer', 'part of', 'deep neural network')
('pre-nonlinear activation', 'part of', 'deep neural network')
('gradients on weights and biases', 'part of', 'deep neural network')
('regularization term', 'part of', 'deep neural network')
('lower-level hidden layer', 'part of', 'hidden layer')"
6.5,10,"('symbol-to-symbol approach', 'computational graph', 'derivatives', 'generic graph evaluation engine', 'symbolic description', 'desired result', 'symbol-to-number differentiation', 'libraries', 'Torch', 'Caffe', 'Theano', 'TensorFlow', 'higher derivatives', 'back-propagation algorithm')","('symbol-to-symbol approach', 'part of', 'computational graph')
('computational graph', 'part of', 'derivatives')
('generic graph evaluation engine', 'part of', 'symbolic description')
('symbolic description', 'part of', 'desired result')
('desired result', 'part of', 'symbol-to-number differentiation')
('symbol-to-number differentiation', 'part of', 'libraries')
('libraries', 'part of', 'Torch')
('libraries', 'part of', 'Caffe')
('libraries', 'part of', 'Theano')
('libraries', 'part of', 'TensorFlow')
('higher derivatives', 'part of', 'back-propagation algorithm')"
6.5,11,"('Deep Feedforward Networks', 'computational graph', 'derivatives', 'numerical values', 'graph evaluation engine', 'symbol-to-symbol approach', 'symbol-to-number approach', 'back-propagation algorithm', 'scalar', 'ancestor', 'gradient', 'Jacobian', 'node', 'variable', 'tensor', 'get_operation', 'get_consumers', 'get_inputs')","('Deep Feedforward Networks', 'instance of', 'computational graph')
('computational graph', 'based on', 'derivatives')
('computational graph', 'based on', 'numerical values')
('computational graph', 'based on', 'graph evaluation engine')
('computational graph', 'based on', 'symbol-to-symbol approach')
('computational graph', 'based on', 'symbol-to-number approach')
('graph evaluation engine', 'part of', 'back-propagation algorithm')
('back-propagation algorithm', 'based on', 'scalar')
('derivatives', 'subclass of', 'ancestor')
('scalar', 'subclass of', 'gradient')
('scalar', 'subclass of', 'Jacobian')
('node', 'subclass of', 'variable')
('variable', 'subclass of', 'tensor')
('tensor', 'use', 'get_operation')
('tensor', 'use', 'get_consumers')
('tensor', 'use', 'get_inputs')"
6.5,12,"('Deep Feedforward Networks', 'Jacobian-vector product', 'back-propagation algorithm', 'back-propagation rules', 'matrix multiplication operation', 'variable C', 'scalar z', 'matrix operation', 'differentiation rules', 'chain rule', 'inputs', 'mathematical function')","('Deep Feedforward Networks', 'subclass of', 'mathematical function'),
('Jacobian-vector product', 'use', 'matrix multiplication operation'),
('back-propagation algorithm', 'based on', 'back-propagation rules'),
('back-propagation rules', 'use', 'matrix operation'),
('matrix multiplication operation', 'based on', 'scalar z'),
('variable C', 'instance of', 'matrix operation'),
('scalar z', 'part of', 'variable C'),
('matrix operation', 'based on', 'differentiation rules'),
('differentiation rules', 'use', 'chain rule'),
('inputs', 'facet of', 'mathematical function')"
6.5,13,"('back-propagation algorithm', 'build_grad subroutine', 'computational graph', 'variable to be differentiated', 'pruned', 'ancestors', 'descendants', 'grad_table', 'Naive algorithm', 'repeated subexpressions', 'computational cost', 'operation evaluation', 'number of operations', 'graph with n nodes', 'fundamental unit', 'matrix multiplication', 'O(n2) operations', 'runtime of each operation', 'multiplying two matrices', 'forward propagation stage', 'Jacobian-vector product', 'directed acyclic graph', 'neural network cost functions')","('back-propagation algorithm', 'based on', 'computational graph'),
('build_grad subroutine', 'part of', 'back-propagation algorithm'),
('computational graph', 'instance of', 'directed acyclic graph'),
('variable to be differentiated', 'facet of', 'computational graph'),
('pruned', 'part of', 'back-propagation algorithm'),
('ancestors', 'facet of', 'computational graph'),
('descendants', 'facet of', 'computational graph'),
('grad_table', 'part of', 'back-propagation algorithm'),
('Naive algorithm', 'instance of', 'back-propagation algorithm'),
('repeated subexpressions', 'part of', 'back-propagation algorithm'),
('computational cost', 'facet of', 'back-propagation algorithm'),
('operation evaluation', 'facet of', 'back-propagation algorithm'),
('number of operations', 'part of', 'back-propagation algorithm'),
('graph with n nodes', 'part of', 'computational graph'),
('fundamental unit', 'facet of', 'matrix multiplication'),
('matrix multiplication', 'based on', 'fundamental unit'),
('O(n^2) operations', 'part of', 'matrix multiplication'),
('runtime of each operation', 'part of', 'matrix multiplication'),
('multiplying two matrices', 'part of', 'matrix multiplication'),
('forward propagation stage', 'facet of', 'matrix multiplication'),
('Jacobian-vector product', 'based on', 'matrix multiplication'),
('directed acyclic graph', 'subclass of', 'computational graph'),
('neural network cost functions', 'facet of', 'back-propagation algorithm')"
6.5,14,"('build_grad subroutine', 'back-propagation algorithm', 'graph', 'variable', 'grad_table', 'get_consumers', 'get_operation', 'op.bprop', 'get_inputs', 'Insert G', 'recursive chain rule', 'path(u(π1),u(π2),...,u(πt))', 'exponential cost', 'forward propagation graph', 'table-filling algorithm', 'intermediate results', 'table entries')","('build_grad subroutine', 'part of', 'back-propagation algorithm'),
('back-propagation algorithm', 'based on', 'graph'),
('graph', 'instance of', 'directed acyclic graph'),
('variable', 'facet of', 'graph'),
('grad_table', 'part of', 'back-propagation algorithm'),
('get_consumers', 'part of', 'graph'),
('get_operation', 'part of', 'graph'),
('op.bprop', 'part of', 'back-propagation algorithm'),
('get_inputs', 'part of', 'graph'),
('Insert G', 'part of', 'back-propagation algorithm'),
('recursive chain rule', 'part of', 'back-propagation algorithm'),
('path(u(π1),u(π2),...,u(πt))', 'facet of', 'back-propagation algorithm'),
('exponential cost', 'facet of', 'back-propagation algorithm'),
('forward propagation graph', 'based on', 'graph'),
('table-filling algorithm', 'part of', 'back-propagation algorithm'),
('intermediate results', 'part of', 'table-filling algorithm'),
('table entries', 'part of', 'table-filling algorithm')"
6.5,15,"('back-propagation', 'dynamic programming', 'multilayer perceptron', 'minibatch stochastic gradient descent', 'design matrix X', 'class labels y', 'hidden features H', 'relu operation', 'unnormalized log probabilities', 'cross-entropy operation', 'cost J', 'regularization term', 'total cost J', 'weight decay term', 'computational graph', 'gradient')","('back-propagation', 'part of', 'dynamic programming'),
('multilayer perceptron', 'part of', 'back-propagation'),
('minibatch stochastic gradient descent', 'part of', 'back-propagation'),
('design matrix X', 'facet of', 'back-propagation'),
('class labels y', 'facet of', 'back-propagation'),
('hidden features H', 'facet of', 'back-propagation'),
('relu operation', 'part of', 'back-propagation'),
('unnormalized log probabilities', 'facet of', 'back-propagation'),
('cross-entropy operation', 'part of', 'back-propagation'),
('cost J', 'facet of', 'back-propagation'),
('regularization term', 'facet of', 'cost J'),
('total cost J', 'part of', 'back-propagation'),
('weight decay term', 'facet of', 'total cost J'),
('computational graph', 'facet of', 'back-propagation'),
('gradient', 'part of', 'back-propagation')"
6.5,16,"('computational graph', 'cost', 'single-layer MLP', 'cross-entropy loss', 'weight decay', 'gradient', 'back-propagation rule', 'matrix multiplication operation', 'relu operation', 'gradient descent algorithm', 'optimization algorithm', 'parameters', 'forward propagation', 'matrix multiplication')","('computational graph', 'facet of', 'cost'),
('single-layer MLP', 'facet of', 'computational graph'),
('cross-entropy loss', 'facet of', 'cost'),
('weight decay', 'part of', 'cost'),
('gradient', 'part of', 'back-propagation rule'),
('back-propagation rule', 'part of', 'computational graph'),
('matrix multiplication operation', 'part of', 'computational graph'),
('relu operation', 'part of', 'computational graph'),
('gradient descent algorithm', 'part of', 'optimization algorithm'),
('optimization algorithm', 'part of', 'computational graph'),
('parameters', 'facet of', 'computational graph'),
('forward propagation', 'part of', 'computational graph'),
('matrix multiplication', 'part of', 'computational graph')"
6.5,17,"('DEEP FEEDFORWARD NETWORKS', 'matrix', 'back-propagation', 'implementation', 'operation', 'tensor', 'memory consumption', 'summation', 'buffer', 'data types', 'gradients', 'differentiation', 'Deep Learning Community', 'computer science community')","('DEEP FEEDFORWARD NETWORKS', 'instance of', 'matrix')
('matrix', 'use', 'back-propagation')
('back-propagation', 'instance of', 'implementation')
('implementation', 'instance of', 'operation')
('operation', 'instance of', 'tensor')
('tensor', 'instance of', 'memory consumption')
('memory consumption', 'instance of', 'summation')
('summation', 'instance of', 'buffer')
('buffer', 'instance of', 'data types')
('data types', 'instance of', 'gradients')
('gradients', 'instance of', 'differentiation')
('differentiation', 'instance of', 'Deep Learning Community')
('Deep Learning Community', 'instance of', 'computer science community')"
6.5,18,"('automatic differentiation', 'back-propagation algorithm', 'reverse mode accumulation', 'chain rule', 'computational cost', 'softmax function', 'cross-entropy loss', 'graph', 'algebraic substitution', 'partial derivative', 'computation', 'forward computation', 'software libraries', 'heuristics', 'simplification patterns', 'scalar output', 'Jacobian')","('automatic differentiation', 'instance of', 'back-propagation algorithm')
('back-propagation algorithm', 'instance of', 'reverse mode accumulation')
('reverse mode accumulation', 'instance of', 'chain rule')
('chain rule', 'instance of', 'computational cost')
('softmax function', 'instance of', 'computational cost')
('cross-entropy loss', 'instance of', 'computational cost')
('graph', 'instance of', 'algebraic substitution')
('algebraic substitution', 'instance of', 'partial derivative')
('partial derivative', 'instance of', 'computation')
('forward computation', 'instance of', 'computation')
('software libraries', 'instance of', 'heuristics')
('heuristics', 'instance of', 'simplification patterns')
('scalar output', 'instance of', 'Jacobian')"
6.5,19,"('Deep Feedforward Networks', 'automatic differentiation', 'forward mode accumulation', 'real-time computation', 'recurrent networks', 'Williams and Zipser', 'computational efficiency', 'memory', 'Jacobian matrices', 'machine learning', 'differentiation software', 'Python', 'C code', 'computational graphs', 'bprop methods', 'back-propagation', 'gradient', 'deep learning community', 'differentiation technology', 'deep networks')","('Deep Feedforward Networks', 'instance of', 'automatic differentiation')
('Deep Feedforward Networks', 'instance of', 'forward mode accumulation')
('Deep Feedforward Networks', 'instance of', 'real-time computation')
('Deep Feedforward Networks', 'instance of', 'recurrent networks')
('Williams and Zipser', 'instance of', 'computational efficiency')
('Williams and Zipser', 'instance of', 'memory')
('Williams and Zipser', 'instance of', 'Jacobian matrices')
('Python', 'instance of', 'machine learning')
('differentiation software', 'instance of', 'Python')
('C code', 'instance of', 'machine learning')
('computational graphs', 'instance of', 'bprop methods')
('computational graphs', 'instance of', 'back-propagation')
('computational graphs', 'instance of', 'gradient')
('deep learning community', 'instance of', 'differentiation technology')
('deep networks', 'instance of', 'deep learning community')"
6.6,0,"('Theano', 'TensorFlow', 'symbolic differentiation machinery', 'Hessian matrix', 'deep learning applications', 'Krylov methods', 'Hessian vector products', 'gradient descent')","('Theano', 'instance of', 'symbolic differentiation machinery')
('TensorFlow', 'instance of', 'symbolic differentiation machinery')
('symbolic differentiation machinery', 'instance of', 'Hessian matrix')
('deep learning applications', 'instance of', 'Hessian matrix')
('deep learning applications', 'instance of', 'Krylov methods')
('deep learning applications', 'instance of', 'Hessian vector products')
('gradient descent', 'instance of', 'Hessian vector products')"
6.6,1,"('deep learning', 'feedforward network', 'back-propagation algorithm', 'chain rule', 'function approximation', 'perceptron', 'neural network approach', 'multilayer perceptron', 'dynamic programming', 'sensitivity analysis', 'artificial neural networks', 'distributed representation', 'connectionism', 'cognition', 'learning', 'memory', 'neurons', 'machine learning techniques', 'deep learning renaissance')","('deep learning', 'instance of', 'neural network approach'),
('feedforward network', 'subclass of', 'neural network approach'),
('back-propagation algorithm', 'use', 'perceptron'),
('chain rule', 'part of', 'back-propagation algorithm'),
('function approximation', 'based on', 'neural network approach'),
('perceptron', 'instance of', 'neural network approach'),
('neural network approach', 'use', 'artificial neural networks'),
('multilayer perceptron', 'subclass of', 'neural network approach'),
('dynamic programming', 'use', 'neural network approach'),
('sensitivity analysis', 'based on', 'neural network approach'),
('artificial neural networks', 'instance of', 'neural network approach'),
('distributed representation', 'subclass of', 'neural network approach'),
('connectionism', 'part of', 'neural network approach'),
('cognition', 'instance of', 'neural network approach'),
('learning', 'based on', 'neural network approach'),
('memory', 'based on', 'neural network approach'),
('neurons', 'subclass of', 'neural network approach'),
('machine learning techniques', 'based on', 'neural network approach'),
('deep learning renaissance', 'instance of', 'neural network approach')"
6.6,2,"('deep feedforward networks', 'gradient descent', 'neural network', 'statistical generalization', 'datasets', 'cross-entropy family', 'loss function', 'mean squared error', 'maximum likelihood', 'sigmoid', 'softmax outputs', 'saturation', 'slow learning', 'sigmoid hidden units', 'piecewise linear hidden units', 'rectified linear units', 'Cognitron', 'Neocognitron', 'activation functions', 'recognition system', 'neural network architecture design', 'random weights', 'classifier layer', 'feature vectors', 'class identities', 'parameters', 'glorot et al.', 'curvature')","('deep feedforward networks', 'instance of', 'neural network')
('gradient descent', 'instance of', 'optimization algorithm')
('neural network', 'instance of', 'statistical model')
('statistical generalization', 'instance of', 'learning principle')
('cross-entropy family', 'instance of', 'loss function')
('loss function', 'instance of', 'function')
('mean squared error', 'instance of', 'loss function')
('maximum likelihood', 'instance of', 'estimation method')
('sigmoid', 'instance of', 'activation function')
('softmax outputs', 'instance of', 'activation function')
('saturation', 'instance of', 'neural network property')
('sigmoid hidden units', 'instance of', 'hidden units')
('piecewise linear hidden units', 'instance of', 'hidden units')
('rectified linear units', 'instance of', 'activation function')
('Cognitron', 'instance of', 'neural network architecture')
('Neocognitron', 'instance of', 'neural network architecture')
('activation functions', 'instance of', 'functions')
('recognition system', 'instance of', 'system')
('neural network architecture design', 'instance of', 'design process')
('random weights', 'instance of', 'weight initialization method')
('classifier layer', 'instance of', 'layer')
('feature vectors', 'instance of', 'vectors')
('class identities', 'instance of', 'identities')
('parameters', 'instance of', 'variables')
('glorot et al.', 'instance of', 'researchers')
('curvature', 'instance of', 'mathematical property')"
6.6,3,"('rectified linear units', 'neuroscience', 'deep learning algorithms', 'half-rectifying nonlinearity', 'biological neurons', 'sparse activations', 'resurgence of deep learning', 'probabilistic models', 'gradient-based learning', 'variational autoencoder', 'generative adversarial networks', 'unsupervised learning', 'supervised learning', 'optimization algorithms', 'model design')","('rectified linear units', 'instance of', 'activation function')
('neuroscience', 'instance of', 'science')
('deep learning algorithms', 'instance of', 'algorithms')
('half-rectifying nonlinearity', 'instance of', 'nonlinearity')
('biological neurons', 'instance of', 'neurons')
('sparse activations', 'instance of', 'activations')
('resurgence of deep learning', 'instance of', 'trend')
('probabilistic models', 'instance of', 'models')
('gradient-based learning', 'instance of', 'learning')
('variational autoencoder', 'instance of', 'autoencoder')
('generative adversarial networks', 'instance of', 'networks')
('unsupervised learning', 'instance of', 'learning')
('supervised learning', 'instance of', 'learning')
('optimization algorithms', 'instance of', 'algorithms')
('model design', 'instance of', 'design process')"
6.6,4,"('regularization', 'machine learning', 'generalization', 'underfitting', 'overfitting', 'bias', 'variance', 'neural networks')","('regularization', 'part of', 'machine learning')
('generalization', 'part of', 'machine learning')
('underfitting', 'part of', 'machine learning')
('overfitting', 'part of', 'machine learning')
('bias', 'part of', 'machine learning')
('variance', 'part of', 'machine learning')
('neural networks', 'part of', 'machine learning')"
6.6,5,"('regularization', 'deep learning', 'constraints', 'penalties', 'prior knowledge', 'model class', 'generalization', 'ensemble methods', 'estimators', 'bias', 'variance', 'underfitting', 'overfitting', 'estimation error', 'target function', 'true data generating process', 'model family', 'complexity', 'parameters', 'fitting model')","('regularization', 'instance of', 'deep learning')
('constraints', 'part of', 'regularization')
('penalties', 'part of', 'regularization')
('prior knowledge', 'part of', 'regularization')
('model class', 'based on', 'prior knowledge')
('generalization', 'use', 'ensemble methods')
('ensemble methods', 'use', 'estimators')
('bias', 'part of', 'estimation error')
('variance', 'part of', 'estimation error')
('underfitting', 'part of', 'estimation error')
('overfitting', 'part of', 'estimation error')
('estimation error', 'facet of', 'target function')
('target function', 'based on', 'true data generating process')
('true data generating process', 'instance of', 'model family')
('model family', 'based on', 'complexity')
('parameters', 'part of', 'fitting model')
('fitting model', 'instance of', 'model class')"
7.1,0,"('deep learning', 'machine learning', 'mathematics', 'computer science', 'linear regression', 'logistic regression', 'neural networks', 'parameter norm penalty', 'regularization strategies', 'objective function', 'hyperparameter', 'training algorithm', 'model parameters', 'biases', 'weights', 'affine transformation', 'underfitting', 'vector w', 'vector θ')","('deep learning', 'subclass of', 'machine learning')
('linear regression', 'subclass of', 'machine learning')
('logistic regression', 'subclass of', 'machine learning')
('neural networks', 'subclass of', 'machine learning')
('parameter norm penalty', 'facet of', 'regularization strategies')
('regularization strategies', 'part of', 'machine learning')
('objective function', 'part of', 'machine learning')
('hyperparameter', 'part of', 'machine learning')
('training algorithm', 'part of', 'machine learning')
('model parameters', 'part of', 'machine learning')
('biases', 'part of', 'neural networks')
('weights', 'part of', 'neural networks')
('affine transformation', 'part of', 'neural networks')
('underfitting', 'facet of', 'machine learning')
('vector w', 'use', 'linear regression')
('vector θ', 'use', 'logistic regression')"
7.1,1,"('deep learning', 'parameter norm penalty', 'weight decay', 'L2 parameter regularization', 'ridge regression', 'Tikhonov regularization', 'objective function', 'parameter gradient', 'learning rule', 'quadratic approximation', 'linear regression model')","('parameter norm penalty', 'use', 'deep learning')
('weight decay', 'use', 'deep learning')
('L2 parameter regularization', 'use', 'deep learning')
('ridge regression', 'use', 'linear regression model')
('Tikhonov regularization', 'use', 'linear regression model')
('objective function', 'part of', 'deep learning')
('parameter gradient', 'part of', 'deep learning')
('learning rule', 'part of', 'deep learning')
('quadratic approximation', 'part of', 'deep learning')"
7.1,2,"('regularization', 'deep learning', 'mean squared error', 'approximation', 'J', 'θ', 'w', 'Hessian matrix', 'first-order term', 'quadratic approximation', 'minimum', 'gradient', 'weight decay', 'regularized version', 'α', 'location', 'real', 'symmetric', 'decomposition', 'diagonal matrix', 'orthonormal basis', 'eigenvectors', 'axes', 'rescale', 'effect', 'larger eigenvalues', 'relatively small', 'shrunk', 'zero magnitude')","('regularization', 'part of', 'deep learning')
('theta', 'instance of', 'regularized version')
('w', 'instance of', 'regularized version')
('Hessian matrix', 'subclass of', 'matrix')
('J', 'instance of', 'mean squared error')
('J', 'instance of', 'approximation')
('J', 'instance of', 'quadratic approximation')
('J', 'instance of', 'minimum')
('gradient', 'instance of', 'first-order term')
('weight decay', 'instance of', 'regularized version')
('alpha', 'instance of', 'regularized version')
('location', 'instance of', 'real')
('location', 'instance of', 'symmetric')
('location', 'instance of', 'diagonal matrix')
('location', 'instance of', 'orthonormal basis')
('location', 'instance of', 'eigenvectors')
('location', 'instance of', 'axes')
('effect', 'instance of', 'rescale')
('effect', 'instance of', 'larger eigenvalues')
('effect', 'instance of', 'relatively small')
('effect', 'instance of', 'shrunk')
('effect', 'instance of', 'zero magnitude')"
7.1,3,"('L2 regularization', 'weight decay', 'optimal w', 'unregularized objective', 'L2 regularizer', 'equilibrium', 'Hessian of J', 'objective function', 'curvature', 'parameters', 'gradient', 'weight vector', 'quadratic cost function', 'linear regression', 'training data', 'cost function')","('L2 regularization', 'subclass of', 'weight decay')
('optimal w', 'instance of', 'unregularized objective')
('L2 regularizer', 'instance of', 'L2 regularization')
('equilibrium', 'instance of', 'Hessian of J')
('equilibrium', 'instance of', 'objective function')
('equilibrium', 'instance of', 'curvature')
('parameters', 'instance of', 'gradient')
('weight vector', 'instance of', 'gradient')
('weight vector', 'instance of', 'quadratic cost function')
('weight vector', 'instance of', 'linear regression')
('quadratic cost function', 'subclass of', 'training data')
('cost function', 'instance of', 'quadratic cost function')"
7.1,4,"('sum of squared errors', 'L2 regularization', 'objective function', 'normal equations', 'covariance matrix', 'variance', 'input feature', 'L1 regularization', 'model parameters', 'absolute values', 'linear regression model', 'bias parameter', 'differences')","('sum of squared errors', 'instance of', 'objective function')
('L2 regularization', 'instance of', 'objective function')
('covariance matrix', 'instance of', 'variance')
('input feature', 'subclass of', 'covariance matrix')
('L1 regularization', 'instance of', 'objective function')
('model parameters', 'instance of', 'linear regression model')
('model parameters', 'instance of', 'L2 regularization')
('model parameters', 'instance of', 'L1 regularization')
('model parameters', 'instance of', 'normal equations')
('model parameters', 'instance of', 'bias parameter')
('absolute values', 'instance of', 'L1 regularization')
('linear regression model', 'instance of', 'objective function')
('differences', 'instance of', 'sum of squared errors')"
7.1,5,"('L1 weight decay', 'regularized objective function', 'gradient', 'sign', 'quadratic approximations', 'Taylor series', 'Hessian matrix', 'diagonal', 'linear regression problem', 'preprocessed', 'correlation', 'PCA', 'analytical solution')","('L1 weight decay', 'instance of', 'regularized objective function')
('gradient', 'instance of', 'sign')
('quadratic approximations', 'instance of', 'Taylor series')
('Hessian matrix', 'subclass of', 'diagonal')
('linear regression problem', 'instance of', 'preprocessed')
('correlation', 'instance of', 'PCA')
('analytical solution', 'instance of', 'linear regression problem')"
7.1,6,"('optimal value', 'regularized objective', 'sparse', 'sparsity', 'feature selection', 'LASSO', 'least squares cost function', 'linear model', 'MAP Bayesian inference', 'Gaussian prior', 'isotropic Laplace distribution', 'log-prior term')","('optimal value', 'instance of', 'regularized objective')
('sparse', 'subclass of', 'sparsity')
('feature selection', 'instance of', 'LASSO')
('least squares cost function', 'instance of', 'linear model')
('MAP Bayesian inference', 'instance of', 'Gaussian prior')
('MAP Bayesian inference', 'instance of', 'isotropic Laplace distribution')
('MAP Bayesian inference', 'instance of', 'log-prior term')"
7.2,0,"('deep learning', 'machine learning', 'mathematics', 'computer science')","('deep learning', 'part of', 'machine learning')
('deep learning', 'part of', 'computer science')"
7.2,1,"('deep learning', 'machine learning', 'mathematics', 'computer science')","('deep learning', 'subclass of', 'machine learning')
('machine learning', 'part of', 'mathematics')
('machine learning', 'part of', 'computer science')"
7.3,0,"('regularization', 'deep learning', 'neural net layer', 'Frobenius norm', 'weight matrix', 'column norm limitation', 'reprojection', 'linear regression', 'PCA', 'inverting the matrix', 'closed form solutions', 'underdetermined problems', 'logistic regression', 'weight vector', 'stochastic gradient descent', 'weight decay', 'likelihood coefficient')","('regularization', 'instance of', 'deep learning')
('deep learning', 'subclass of', 'neural net layer')
('neural net layer', 'based on', 'Frobenius norm')
('weight matrix', 'subclass of', 'Frobenius norm')
('column norm limitation', 'subclass of', 'Frobenius norm')
('reprojection', 'based on', 'linear regression')
('linear regression', 'based on', 'PCA')
('PCA', 'based on', 'inverting the matrix')
('inverting the matrix', 'based on', 'closed form solutions')
('closed form solutions', 'based on', 'underdetermined problems')
('logistic regression', 'based on', 'linear regression')
('weight vector', 'instance of', 'stochastic gradient descent')
('weight matrix', 'subclass of', 'weight decay')
('likelihood coefficient', 'use', 'stochastic gradient descent')"
7.4,0,"('Moore-Penrose pseudoinverse', 'X+', 'matrix X', 'X', 'αI')","('Moore-Penrose pseudoinverse', 'instance of', 'matrix X')
('X+', 'subclass of', 'matrix X')
('X', 'relation not found', 'None')
('αI', 'subclass of', 'matrix X')"
7.4,1,"('speech recognition tasks', 'Jaitly and Hinton, 2013', 'neural network', 'Sietsma and Dow, 1991', 'denoising autoencoder', 'Vincent et al., 2008', 'Poole et al., 2014', 'dropout', 'section 7.12', 'machine learning benchmark', 'hand-designed dataset augmentation schemes', 'machine learning algorithm A', 'machine learning algorithm B', 'synthetic transformations of the input', 'Gaussian noise')","('speech recognition tasks', 'instance of', 'Jaitly and Hinton, 2013')
('neural network', 'instance of', 'Sietsma and Dow, 1991')
('denoising autoencoder', 'instance of', 'Vincent et al., 2008')
('denoising autoencoder', 'instance of', 'Poole et al., 2014')
('dropout', 'instance of', 'section 7.12')
('machine learning benchmark', 'subclass of', 'hand-designed dataset augmentation schemes')
('machine learning algorithm A', 'instance of', 'machine learning algorithm B')
('synthetic transformations of the input', 'instance of', 'Gaussian noise')"
7.5,0,"('regularization', 'deep learning', 'noise robustness', 'dataset augmentation strategy', 'penalty on the norm of the weights', 'dropout algorithm', 'recurrent neural networks', 'Bayesian inference', 'traditional form of regularization', 'regression setting', 'least-squares cost function', 'labeled examples', 'random perturbation', 'network weights', 'standard l-layer MLP', 'squared error', 'objective function', 'minimization', 'weight noise', 'covariance', 'additional regularization term')","('regularization', 'instance of', 'deep learning')
('penalty on the norm of the weights', 'instance of', 'regularization')
('dropout algorithm', 'instance of', 'regularization')
('traditional form of regularization', 'instance of', 'regularization')
('dataset augmentation strategy', 'instance of', 'regularization')
('Bayesian inference', 'instance of', 'regularization')
('recurrent neural networks', 'instance of', 'deep learning')
('least-squares cost function', 'instance of', 'regression setting')
('squared error', 'instance of', 'regression setting')
('objective function', 'instance of', 'regression setting')
('labeled examples', 'instance of', 'dataset augmentation strategy')
('random perturbation', 'instance of', 'dataset augmentation strategy')
('network weights', 'instance of', 'regularization')
('standard l-layer MLP', 'instance of', 'regularization')
('minimization', 'instance of', 'objective function')
('weight noise', 'instance of', 'regularization')
('covariance', 'instance of', 'regularization')
('additional regularization term', 'instance of', 'regularization')"
7.6,0,"('regularization', 'deep learning', 'small perturbations', 'parameter space', 'weights', 'minima', 'linear regression', 'parameters', 'injecting noise', 'output targets', 'labels', 'label smoothing', 'cross-entropy loss', 'maximum likelihood learning', 'softmax classifier', 'hard targets', 'convergence', 'weight decay', 'semi-supervised learning', 'unlabeled examples', 'labeled examples', 'representation')","('regularization', 'instance of', 'deep learning')
('small perturbations', 'instance of', 'regularization')
('weights', 'instance of', 'parameter space')
('minima', 'instance of', 'parameter space')
('linear regression', 'instance of', 'regression setting')
('parameters', 'instance of', 'linear regression')
('injecting noise', 'instance of', 'regularization')
('output targets', 'instance of', 'linear regression')
('labels', 'instance of', 'output targets')
('label smoothing', 'instance of', 'regularization')
('cross-entropy loss', 'instance of', 'objective function')
('maximum likelihood learning', 'instance of', 'objective function')
('softmax classifier', 'instance of', 'objective function')
('hard targets', 'instance of', 'output targets')
('convergence', 'instance of', 'minimization')
('weight decay', 'instance of', 'regularization')
('semi-supervised learning', 'instance of', 'regularization')
('unlabeled examples', 'instance of', 'semi-supervised learning')
('labeled examples', 'instance of', 'semi-supervised learning and regularization')
('representation', 'instance of', 'labeled examples')"
7.7,0,"('Deep Learning', 'Machine Learning', 'Unsupervised Learning', 'Principal Components Analysis', 'Generative Model', 'Discriminative Model', 'Semi-Supervised Learning', 'Multi-Task Learning')","('Deep Learning', 'subclass of', 'Machine Learning')
('Unsupervised Learning', 'subclass of', 'Machine Learning')
('Principal Components Analysis', 'instance of', 'Unsupervised Learning')
('Generative Model', 'subclass of', 'Machine Learning')
('Discriminative Model', 'subclass of', 'Machine Learning')
('Semi-Supervised Learning', 'subclass of', 'Machine Learning')
('Multi-Task Learning', 'subclass of', 'Machine Learning')"
7.7,1,"('Deep Learning', 'Multi-Task Learning', 'Neural Network', 'Supervised Learning', 'Feedforward Network', 'Generative Component', 'Factors', 'Generalization', 'Generalization Error Bounds', 'Statistical Strength')","('Deep Learning', 'subclass of', 'Neural Network')
('Multi-Task Learning', 'subclass of', 'Neural Network')
('Supervised Learning', 'subclass of', 'Neural Network')
('Feedforward Network', 'subclass of', 'Neural Network')
('Generative Component', 'subclass of', 'Neural Network')
('Factors', 'subclass of', 'Generative Component')
('Generalization', 'part of', 'Generative Component')
('Generalization Error Bounds', 'subclass of', 'Generalization')
('Statistical Strength', 'subclass of', 'Generalization Error Bounds')"
7.8,0,"('Deep Learning', 'Multi-Task Learning', 'Learning Curves', 'Negative Log-Likelihood Loss', 'Maxout Network', 'MNIST', 'Validation Set', 'Early Stopping')","('Deep Learning', 'subclass of', 'Multi-Task Learning')
('Learning Curves', 'instance of', 'Deep Learning')
('Negative Log-Likelihood Loss', 'instance of', 'Deep Learning')
('Maxout Network', 'instance of', 'Deep Learning')
('MNIST', 'instance of', 'Deep Learning')
('Validation Set', 'instance of', 'Deep Learning')
('Early Stopping', 'instance of', 'Deep Learning')"
7.8,1,"('Early Stopping', 'Meta-algorithm', 'Training Algorithm', 'Validation Set Error', 'Parameters', 'Patience', 'Best Parameters', 'Best Number of Training Steps', 'Regularization', 'Hyperparameter')","('Early Stopping', 'instance of', 'Meta-algorithm')
('Training Algorithm', 'instance of', 'Meta-algorithm')
('Validation Set Error', 'instance of', 'Training Algorithm')
('Parameters', 'instance of', 'Training Algorithm')
('Patience', 'instance of', 'Training Algorithm')
('Best Parameters', 'instance of', 'Training Algorithm')
('Best Number of Training Steps', 'instance of', 'Training Algorithm')
('Regularization', 'instance of', 'Training Algorithm')
('Hyperparameter', 'instance of', 'Training Algorithm')"
7.8,2,"('Early Stopping', 'Model Capacity', 'Hyperparameter', 'Training Time', 'Validation Set Evaluation', 'Best Parameters', 'Regularization', 'Weight Decay', 'Objective Function', 'Generalization', 'Training Data')","('Early Stopping', 'instance of', 'Model Capacity')
('Hyperparameter', 'instance of', 'Model Capacity')
('Training Time', 'instance of', 'Model Capacity')
('Validation Set Evaluation', 'instance of', 'Model Capacity')
('Best Parameters', 'instance of', 'Model Capacity')
('Regularization', 'instance of', 'Model Capacity')
('Weight Decay', 'instance of', 'Regularization')
('Objective Function', 'instance of', 'Model Capacity')
('Generalization', 'instance of', 'Model Capacity')
('Training Data', 'instance of', 'Model Capacity')"
7.8,3,"('regularization for deep learning', 'early stopping procedure', 'training set', 'training pass', 'parameter updates', 'training data', 'validation data', 'average loss function', 'training set objective', 'cost of the training procedure', 'regularization strategy', 'learning curves', 'U-shaped curve')","('regularization for deep learning', 'part of', 'training procedure')
('early stopping procedure', 'part of', 'training procedure')
('training set', 'part of', 'training procedure')
('training pass', 'part of', 'training procedure')
('parameter updates', 'part of', 'training procedure')
('training data', 'part of', 'training procedure')
('validation data', 'part of', 'training procedure')
('average loss function', 'part of', 'training procedure')
('training set objective', 'part of', 'training procedure')
('cost of the training procedure', 'part of', 'training procedure')
('regularization strategy', 'part of', 'training procedure')
('learning curves', 'part of', 'training procedure')
('U-shaped curve', 'part of', 'learning curves')"
7.8,4,"('regularization for deep learning', 'early stopping procedure', 'training set', 'training iterations', 'parameter space', 'initial parameter value', 'effective capacity', 'learning rate', 'volume of parameter space', 'weight decay', 'L2 regularization', 'linear model', 'quadratic error function', 'gradient descent', 'cost function', 'quadratic approximation', 'Hessian matrix', 'Taylor series approximation', 'local Taylor series approximation', 'gradient')","('regularization for deep learning', 'part of', 'training procedure')
('early stopping procedure', 'part of', 'training procedure')
('training set', 'part of', 'training procedure')
('training iterations', 'part of', 'training procedure')
('parameter space', 'facet of', 'training procedure')
('initial parameter value', 'facet of', 'training procedure')
('effective capacity', 'facet of', 'training procedure')
('learning rate', 'facet of', 'training procedure')
('volume of parameter space', 'part of', 'training procedure')
('weight decay', 'part of', 'regularization strategy')
('L2 regularization', 'part of', 'regularization strategy')
('linear model', 'instance of', 'model')
('quadratic error function', 'part of', 'cost function')
('gradient descent', 'part of', 'optimization algorithm')
('cost function', 'part of', 'training procedure')
('quadratic approximation', 'part of', 'Taylor series approximation')
('Hessian matrix', 'part of', 'Taylor series approximation')
('Taylor series approximation', 'part of', 'local Taylor series approximation')
('gradient', 'part of', 'gradient descent')"
7.8,5,"('regularization for deep learning', 'early stopping', 'trajectory', 'parameter vector', 'gradient descent', 'cost function', 'gradient', 'L2 regularization', 'parameter space', 'initial parameter vector', 'origin', 'eigenvectors', 'eigendecomposition', 'diagonal matrix', 'orthonormal basis', 'neural networks', 'symmetry breaking', 'hidden units', 'initial value')","('regularization for deep learning', 'part of', 'training procedure')
('early stopping', 'part of', 'training procedure')
('trajectory', 'part of', 'training procedure')
('parameter vector', 'part of', 'training procedure')
('gradient descent', 'part of', 'optimization algorithm')
('cost function', 'part of', 'training procedure')
('gradient', 'part of', 'gradient descent')
('L2 regularization', 'part of', 'regularization strategy')
('parameter space', 'facet of', 'training procedure')
('initial parameter vector', 'facet of', 'training procedure')
('origin', 'part of', 'parameter space')
('eigenvectors', 'part of', 'eigendecomposition')
('eigendecomposition', 'part of', 'diagonal matrix')
('diagonal matrix', 'part of', 'orthonormal basis')
('orthonormal basis', 'part of', 'parameter space')
('neural networks', 'instance of', 'model')
('symmetry breaking', 'part of', 'neural networks')
('hidden units', 'part of', 'neural networks')
('initial value', 'facet of', 'training procedure')"
7.8,6,"('regularization for deep learning', 'parameter trajectory', 'parameter updates', 'hyperparameters', 'L2 regularization', 'quadratic approximation', 'objective function', 'logarithms', 'series expansion', 'training iterations', 'weight decay coefficient', 'curvature', 'validation set error', 'correct amount of regularization')","('regularization for deep learning', 'part of', 'training procedure')
('parameter trajectory', 'part of', 'training procedure')
('parameter updates', 'part of', 'training procedure')
('hyperparameters', 'part of', 'training procedure')
('L2 regularization', 'part of', 'regularization strategy')
('quadratic approximation', 'part of', 'series expansion')
('objective function', 'part of', 'training procedure')
('logarithms', 'part of', 'series expansion')
('series expansion', 'part of', 'quadratic approximation')
('training iterations', 'part of', 'training procedure')
('weight decay coefficient', 'part of', 'regularization strategy')
('curvature', 'part of', 'quadratic approximation')
('validation set error', 'part of', 'training procedure')
('correct amount of regularization', 'part of', 'regularization strategy')"
7.9,0,"('parameter tying', 'parameter sharing', 'constraints', 'penalties', 'L2 regularization', 'model parameters', 'input distributions', 'model architecture', 'dependencies', 'classification task', 'output distributions', 'parameter norm penalty', 'parameter norm', 'parameter regularization', 'classifier model', 'unsupervised model', 'architectures', 'memory footprint')","('parameter tying', 'part of', 'model architecture')
('parameter sharing', 'part of', 'model architecture')
('constraints', 'part of', 'training procedure')
('penalties', 'part of', 'training procedure')
('L2 regularization', 'part of', 'parameter regularization')
('model parameters', 'part of', 'model architecture')
('input distributions', 'part of', 'model architecture')
('model architecture', 'facet of', 'model parameters')
('dependencies', 'part of', 'model architecture')
('classification task', 'part of', 'model architecture')
('output distributions', 'part of', 'model architecture')
('parameter norm penalty', 'part of', 'parameter regularization')
('parameter norm', 'part of', 'parameter regularization')
('parameter regularization', 'part of', 'training procedure')
('classifier model', 'instance of', 'model')
('unsupervised model', 'instance of', 'model')
('architectures', 'part of', 'model parameters')
('memory footprint', 'part of', 'model architecture')"
7.10,0,"('Convolutional Neural Networks', 'CNNs', 'computer vision', 'parametersharing', 'training data', 'network architecture', 'Sparse Representations', 'neural network', 'L1 penalization', 'representational sparsity', 'linear regression')","('Convolutional Neural Networks', 'subclass of', 'neural network')
('neural network', 'based on', 'linear regression')
('CNNs', 'instance of', 'Convolutional Neural Networks')
('parametersharing', 'part of', 'CNNs')
('training data', 'use', 'CNNs')
('network architecture', 'facet of', 'CNNs')
('Sparse Representations', 'subclass of', 'neural network')
('neural network', 'based on', 'Sparse Representations')
('L1 penalization', 'part of', 'Sparse Representations')
('representational sparsity', 'instance of', 'Sparse Representations')
('linear regression', 'subclass of', 'neural network')"
7.10,1,"('linear regression', 'sparse representation', 'representational regularization', 'norm penalty', 'L1 penalty', 'Student-t prior', 'KL divergence penalties', 'orthogonal matching pursuit')","('linear regression', 'subclass of', 'sparse representation')
('sparse representation', 'based on', 'linear regression')
('representational regularization', 'facet of', 'sparse representation')
('norm penalty', 'part of', 'representational regularization')
('L1 penalty', 'facet of', 'representational regularization')
('Student-t prior', 'subclass of', 'representational regularization')
('representational regularization', 'based on', 'Student-t prior')
('KL divergence penalties', 'facet of', 'representational regularization')
('orthogonal matching pursuit', 'use', 'sparse representation')"
7.11,0,"('regularization', 'deep learning', 'OMP-1', 'feature extractor', 'sparse', 'sparsity regularization', 'bagging', 'bootstrap aggregating', 'generalization error', 'ensemble methods', 'model averaging', 'machine learning', 'regression models', 'variances', 'covariances', 'ensemble predictor', 'squared error', 'correlated', 'uncorrelated', 'ensemble size', 'independent errors', 'ensemble methods')","('feature extractor', 'instance of', 'deep learning')
('sparsity regularization', 'instance of', 'regularization')
('bootstrap aggregating', 'instance of', 'ensemble methods')
('ensemble methods', 'use', 'machine learning')
('ensemble methods', 'use', 'regression models')
('ensemble methods', 'use', 'ensemble predictor')
('ensemble methods', 'use', 'squared error')
('ensemble methods', 'use', 'correlated')
('ensemble methods', 'use', 'uncorrelated')
('ensemble methods', 'use', 'ensemble size')
('ensemble methods', 'use', 'independent errors')
('ensemble methods', 'use', 'ensemble methods')"
7.11,1,"('regularization', 'deep learning', 'bagging', 'dataset', 'ensemble member', 'training procedure', 'detector', 'classification rules', 'model', 'algorithm', 'objective function', 'sampling with replacement', 'original dataset', 'examples', 'duplicate examples', 'trained models', 'neural networks', 'random initialization', 'random selection of minibatches', 'hyperparameters', 'non-deterministic implementations', 'solution points')","('deep learning', 'use', 'regularization')
('bagging', 'use', 'ensemble member')
('ensemble member', 'part of', 'bagging')
('training procedure', 'part of', 'bagging')
('detector', 'part of', 'bagging')
('classification rules', 'part of', 'bagging')
('model', 'part of', 'bagging')
('algorithm', 'part of', 'bagging')
('objective function', 'part of', 'bagging')
('sampling with replacement', 'part of', 'bagging')
('original dataset', 'part of', 'bagging')
('examples', 'part of', 'original dataset')
('duplicate examples', 'part of', 'original dataset')
('trained models', 'part of', 'ensemble member')
('neural networks', 'part of', 'trained models')
('random initialization', 'part of', 'trained models')
('random selection of minibatches', 'part of', 'trained models')
('hyperparameters', 'part of', 'trained models')
('non-deterministic implementations', 'part of', 'trained models')
('solution points', 'part of', 'trained models')"
7.12,0,"('dropout', 'regularizing', 'models', 'bagging', 'ensembles', 'neural networks', 'boosting', 'capacity', 'hidden units', 'computational inexpensive', 'approximation', 'runtime', 'memory', 'ensemble of exponentially many neural networks', 'sub-networks', 'base network', 'affine transformations', 'nonlinearities', 'radial basis function networks')","('dropout', 'instance of', 'regularizing')
('dropout', 'use', 'models')
('bagging', 'instance of', 'ensembles')
('ensembles', 'use', 'neural networks')
('boosting', 'instance of', 'ensembles')
('capacity', 'part of', 'neural networks')
('hidden units', 'part of', 'neural networks')
('approximation', 'part of', 'neural networks')
('runtime', 'part of', 'neural networks')
('memory', 'part of', 'neural networks')
('ensemble of exponentially many neural networks', 'part of', 'ensembles')
('sub-networks', 'part of', 'ensemble of exponentially many neural networks')
('base network', 'part of', 'ensemble of exponentially many neural networks')
('affine transformations', 'part of', 'base network')
('nonlinearities', 'part of', 'base network')
('radial basis function networks', 'part of', 'base network')"
7.12,1,"('dropout', 'regularization', 'neural networks', 'bagging', 'datasets', 'training', 'minibatch', 'binary mask', 'hyperparameter', 'forward propagation', 'back-propagation', 'learning update', 'mask vector', 'cost', 'parameters', 'parameter sharing', 'memory', 'convergence', 'parameter settings', 'sub-networks', 'training set')","('dropout', 'use', 'regularization')
('neural networks', 'use', 'dropout')
('bagging', 'use', 'neural networks')
('training', 'part of', 'neural networks')
('minibatch', 'part of', 'training')
('binary mask', 'part of', 'dropout')
('hyperparameter', 'part of', 'dropout')
('forward propagation', 'part of', 'neural networks')
('back-propagation', 'part of', 'neural networks')
('learning update', 'part of', 'neural networks')
('mask vector', 'part of', 'dropout')
('cost', 'part of', 'neural networks')
('parameters', 'part of', 'neural networks')
('parameter sharing', 'part of', 'neural networks')
('memory', 'part of', 'neural networks')
('convergence', 'part of', 'neural networks')
('parameter settings', 'part of', 'neural networks')
('sub-networks', 'part of', 'dropout')
('training set', 'part of', 'datasets')"
7.12,2,"('dropout', 'ensemble', 'sub-networks', 'base network', 'visible units', 'hidden units', 'subsets', 'input units', 'output units', 'path', 'dropout problem', 'wider layers')","('dropout', 'use', 'ensemble')
('sub-networks', 'part of', 'dropout')
('base network', 'part of', 'ensemble')
('visible units', 'part of', 'sub-networks')
('hidden units', 'part of', 'sub-networks')
('subsets', 'part of', 'sub-networks')
('input units', 'part of', 'base network')
('output units', 'part of', 'base network')
('path', 'part of', 'dropout problem')
('dropout problem', 'instance of', 'wider layers')"
7.12,3,"('regularization', 'deep learning', 'feedforward network', 'dropout', 'forward propagation', 'input units', 'hidden layer', 'hidden units', 'output unit', 'vector µ', 'binary', 'hyperparameter', 'mask', 'sub-networks', 'figure 7.6')","('regularization', 'subclass of', 'deep learning'), 
('dropout', 'use', 'feedforward network'),
('forward propagation', 'part of', 'feedforward network'),
('input units', 'part of', 'feedforward network'),
('hidden layer', 'part of', 'feedforward network'),
('hidden units', 'part of', 'hidden layer'),
('output unit', 'part of', 'feedforward network'),
('vector µ', 'instance of', 'binary'), 
('mask', 'use', 'dropout'), 
('sub-networks', 'instance of', 'feedforward network')"
7.12,4,"('bagged ensemble', 'inference', 'probabilistic', 'probability distribution', 'bagging', 'dropout', 'model', 'arithmetic mean', 'distributions', 'mask vector µ', 'sub-model', 'p(µ)', 'deep neural nets', 'sampling', 'geometric mean', 'ensemble members', 'predicted distributions', 'Warde- Farley et al. (2014)', 'probability distribution', 'renormalize', 'unnormalized probability distribution', 'uniform distribution', 'non-uniform distributions')","('bagged ensemble', 'instance of', 'ensemble members'),
('inference', 'use', 'bagged ensemble'),
('probabilistic', 'subclass of', 'probability distribution'),
('probability distribution', 'part of', 'inference'),
('bagging', 'use', 'ensemble members'),
('dropout', 'use', 'ensemble members'),
('model', 'instance of', 'ensemble members'),
('arithmetic mean', 'use', 'ensemble members'),
('distributions', 'part of', 'ensemble members'),
('mask vector µ', 'instance of', 'dropout'),
('sub-model', 'part of', 'ensemble members'),
('p(µ)', 'instance of', 'probability distribution'),
('deep neural nets', 'instance of', 'ensemble members'),
('sampling', 'use', 'ensemble members'),
('geometric mean', 'use', 'ensemble members'),
('predicted distributions', 'part of', 'ensemble members'),
('Warde- Farley et al. (2014)', 'instance of', 'ensemble members'),
('probability distribution', 'part of', 'ensemble members'),
('renormalize', 'part of', 'ensemble members'),
('unnormalized probability distribution', 'part of', 'ensemble members'),
('uniform distribution', 'instance of', 'probability distribution'),
('non-uniform distributions', 'instance of', 'probability distribution')"
7.12,5,"('p˜ (y x) ensemble', 'p (y x)', 'p˜ (y x) y', 'Hinton et al., 2012c', 'dropout', 'approximate inference rule', 'deep nonlinear networks', 'empirically', 'inclusion probability', 'weight scaling inference rule', 'softmax regression classifier', 'binary vector d', 'ensemble predictor', 'P˜ ensemble(y = y | v)')","('p˜ (y x) ensemble', 'instance of', 'ensemble predictor'),
('p (y x)', 'instance of', 'ensemble predictor'),
('p˜ (y x) y', 'instance of', 'ensemble predictor'),
('Hinton et al., 2012c', 'instance of', 'ensemble predictor'),
('dropout', 'use', 'ensemble predictor'),
('approximate inference rule', 'use', 'ensemble predictor'),
('deep nonlinear networks', 'instance of', 'ensemble predictor'),
('empirically', 'use', 'ensemble predictor'),
('inclusion probability', 'instance of', 'ensemble predictor'),
('weight scaling inference rule', 'use', 'ensemble predictor'),
('softmax regression classifier', 'instance of', 'ensemble predictor'),
('binary vector d', 'instance of', 'ensemble predictor'),
('P˜ ensemble(y = y | v)', 'instance of', 'ensemble predictor')"
7.12,6,"('weight scaling rule', 'softmax classifier', 'weights 1 W', 'regression networks', 'conditionally normal outputs', 'deep networks', 'hidden layers', 'nonlinearities', 'approximation', 'theoretically characterized', 'empirically', 'Goodfellow et al., 2013a', 'Monte Carlo approximations', 'ensemble predictor', 'Gal and Ghahramani, 2015')","('weight scaling rule', 'use', 'ensemble predictor'),
('softmax classifier', 'use', 'ensemble predictor'),
('weights 1 W', 'instance of', 'ensemble predictor'),
('regression networks', 'instance of', 'ensemble predictor'),
('conditionally normal outputs', 'part of', 'regression networks'),
('deep networks', 'instance of', 'ensemble predictor'),
('hidden layers', 'part of', 'deep networks'),
('nonlinearities', 'part of', 'deep networks'),
('approximation', 'part of', 'ensemble predictor'),
('theoretically characterized', 'part of', 'ensemble predictor'),
('empirically', 'part of', 'ensemble predictor'),
('Goodfellow et al., 2013a', 'instance of', 'ensemble predictor'),
('Monte Carlo approximations', 'use', 'ensemble predictor'),
('ensemble predictor', 'instance of', 'ensemble predictor'),
('Gal and Ghahramani, 2015', 'instance of', 'ensemble predictor')"
7.12,7,"('inference approximation', 'Srivastava et al., 2014', 'dropout', 'regularizers', 'weight decay', 'filter norm constraints', 'sparse activity regularization', 'computationally cheap', 'distributed representation', 'stochastic gradient descent', 'feedforward neural networks', 'restricted Boltzmann machines', 'recurrent neural networks', 'architecture of the model', 'effective capacity', 'validation set error', 'complete system', 'generalization error', 'Bayesian neural networks', 'Alternative Splicing Dataset', 'unsupervised feature learning', 'L2 weight decay', 'weight decay coefficient')","('inference approximation', 'instance of', 'computationally cheap'),
('Srivastava et al., 2014', 'instance of', 'dropout'),
('dropout', 'use', 'regularizers'),
('regularizers', 'part of', 'inference approximation'),
('weight decay', 'use', 'regularizers'),
('filter norm constraints', 'use', 'regularizers'),
('sparse activity regularization', 'use', 'regularizers'),
('computationally cheap', 'part of', 'inference approximation'),
('distributed representation', 'part of', 'inference approximation'),
('stochastic gradient descent', 'use', 'inference approximation'),
('feedforward neural networks', 'instance of', 'inference approximation'),
('restricted Boltzmann machines', 'instance of', 'inference approximation'),
('recurrent neural networks', 'instance of', 'inference approximation'),
('architecture of the model', 'part of', 'inference approximation'),
('effective capacity', 'part of', 'inference approximation'),
('validation set error', 'part of', 'inference approximation'),
('complete system', 'part of', 'inference approximation'),
('generalization error', 'part of', 'inference approximation'),
('Bayesian neural networks', 'instance of', 'inference approximation'),
('Alternative Splicing Dataset', 'part of', 'inference approximation'),
('unsupervised feature learning', 'part of', 'inference approximation'),
('L2 weight decay', 'use', 'weight decay'),
('weight decay coefficient', 'part of', 'weight decay')"
7.12,8,"('REGULARIZATION FOR DEEP LEARNING', 'weight decay', 'dropout', 'Wang and Manning (2013)', 'fast dropout', 'Warde-Farley et al. (2014)', 'dropout boosting', 'bagging', 'DropConnect', 'Wan et al., 2013', 'stochastic pooling')","('dropout', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('fast dropout', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('dropout boosting', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('bagging', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('DropConnect', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('stochastic pooling', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('Wang and Manning (2013)', 'use', 'dropout')
('Warde-Farley et al. (2014)', 'use', 'dropout')
('Wan et al., 2013', 'use', 'DropConnect')"
7.12,9,"('µ (1,I)', 'Srivastava et al. (2014)', 'bagged ensemble', 'Hinton et al. (2012c)', 'sexual reproduction', 'Warde-Farley et al. (2014)')","('Srivastava et al. (2014)', 'use', 'µ (1,I)')
('Hinton et al. (2012c)', 'use', 'bagged ensemble')
('Warde-Farley et al. (2014)', 'use', 'sexual reproduction')"
7.13,0,"('regularization', 'deep learning', 'knowledge', 'input distribution', 'dropout', 'noise', 'rectified linear hidden unit', 'batch normalization', 'optimization', 'adversarial training', 'neural networks', 'error rate', 'computer security', 'linearity')","('regularization', 'part of', 'deep learning')
('dropout', 'part of', 'deep learning')
('rectified linear hidden unit', 'part of', 'neural networks')
('batch normalization', 'part of', 'neural networks')
('optimization', 'part of', 'deep learning')
('adversarial training', 'part of', 'deep learning')
('neural networks', 'part of', 'deep learning')
('error rate', 'part of', 'deep learning')
('computer security', 'part of', 'deep learning')"
7.13,1,"('regularization', 'deep learning', 'adversarial example generation', 'GoogLeNet', 'ImageNet', 'cost function', 'local constancy prior', 'supervised neural nets', 'semi-supervised learning', 'classifier')","('regularization', 'part of', 'deep learning')
('adversarial example generation', 'part of', 'deep learning')
('GoogLeNet', 'instance of', 'deep learning')
('cost function', 'part of', 'deep learning')
('local constancy prior', 'part of', 'deep learning')
('supervised neural nets', 'part of', 'deep learning')
('semi-supervised learning', 'part of', 'deep learning')
('classifier', 'part of', 'deep learning')"
7.14,0,"('regularization', 'deep learning', 'manifold', 'tangent distance algorithm', 'nearest-neighbor algorithm', 'Euclidean distance', 'manifold hypothesis', 'tangent prop algorithm', 'neural net classifier', 'local invariance')","('regularization', 'part of', 'deep learning')
('manifold', 'part of', 'deep learning')
('tangent distance algorithm', 'part of', 'deep learning')
('nearest-neighbor algorithm', 'part of', 'deep learning')
('Euclidean distance', 'part of', 'deep learning')
('manifold hypothesis', 'part of', 'deep learning')
('tangent prop algorithm', 'part of', 'deep learning')
('neural net classifier', 'part of', 'deep learning')
('local invariance', 'part of', 'deep learning')"
7.14,1,"('regularization', 'deep learning', 'tangent prop', 'formal knowledge', 'transformation', 'reinforcement learning', 'dataset augmentation', 'rectified linear units', 'double backprop', 'adversarial training', 'manifold tangent classifier', 'autoencoders')","('regularization', 'part of', 'deep learning')
('tangent prop', 'part of', 'deep learning')
('formal knowledge', 'part of', 'deep learning')
('transformation', 'part of', 'deep learning')
('reinforcement learning', 'part of', 'deep learning')
('dataset augmentation', 'part of', 'deep learning')
('rectified linear units', 'part of', 'deep learning')
('double backprop', 'part of', 'deep learning')
('adversarial training', 'part of', 'deep learning')
('manifold tangent classifier', 'part of', 'deep learning')
('autoencoders', 'part of', 'deep learning')"
7.14,2,"('regularization', 'deep learning', 'tangent prop algorithm', 'manifold tangent classifier', 'autoencoders', 'manifold', 'tangent vectors', 'geometry of images', 'unsupervised learning', 'neural net classifier')","('regularization', 'part of', 'deep learning')
('tangent prop algorithm', 'part of', 'deep learning')
('manifold tangent classifier', 'part of', 'deep learning')
('autoencoders', 'part of', 'deep learning')
('manifold', 'part of', 'deep learning')
('tangent vectors', 'part of', 'deep learning')
('geometry of images', 'part of', 'deep learning')
('unsupervised learning', 'part of', 'deep learning')
('neural net classifier', 'part of', 'deep learning')"
7.14,3,"('REGULARIZATION FOR DEEP LEARNING', 'machine learning', 'optimization')","('REGULARIZATION FOR DEEP LEARNING', 'instance of', 'machine learning')
('REGULARIZATION FOR DEEP LEARNING', 'subject of', 'optimization')"
7.14,4,"('deep learning', 'optimization', 'neural network training', 'gradient-based optimization', 'numerical optimization', 'cost function', 'performance measure', 'regularization terms')","('deep learning', 'subject of', 'neural network training')
('deep learning', 'subject of', 'gradient-based optimization')
('deep learning', 'subject of', 'numerical optimization')
('deep learning', 'subject of', 'cost function')
('deep learning', 'subject of', 'performance measure')
('deep learning', 'subject of', 'regularization terms')"
8.1,0,"('deep models', 'optimization algorithms', 'machine learning', 'performance measure', 'cost function', 'per-example loss function', 'supervised learning', 'unsupervised learning', 'objective function', 'data generating distribution', 'empirical risk minimization', 'generalization error')","('deep models', 'subject of', 'optimization algorithms')
('deep models', 'instance of', 'machine learning')
('deep models', 'subject of', 'performance measure')
('deep models', 'subject of', 'cost function')
('deep models', 'subject of', 'per-example loss function')
('deep models', 'instance of', 'supervised learning')
('deep models', 'instance of', 'unsupervised learning')
('deep models', 'subject of', 'objective function')
('deep models', 'subject of', 'data generating distribution')
('deep models', 'subject of', 'empirical risk minimization')
('deep models', 'subject of', 'generalization error')"
8.1,1,"('optimization algorithm', 'machine learning problem', 'empirical risk minimization', 'average training error', 'overfitting', 'gradient descent', 'loss function', 'surrogate loss functions', 'early stopping', 'classification error', 'negative log-likelihood')","('optimization algorithm', 'subject of', 'machine learning problem')
('optimization algorithm', 'subject of', 'empirical risk minimization')
('optimization algorithm', 'subject of', 'average training error')
('optimization algorithm', 'subject of', 'overfitting')
('optimization algorithm', 'subject of', 'gradient descent')
('optimization algorithm', 'subject of', 'loss function')
('optimization algorithm', 'subject of', 'surrogate loss functions')
('optimization algorithm', 'subject of', 'early stopping')
('optimization algorithm', 'subject of', 'classification error')
('optimization algorithm', 'subject of', 'negative log-likelihood')"
8.1,2,"('surrogate loss function', 'test set 0-1 loss', 'robustness of the classifier', 'convergence criterion', 'early stopping', 'local minimum', 'batch and minibatch algorithms', 'maximum likelihood estimation', 'empirical distribution', 'objective function')","('surrogate loss function', 'subject of', 'test set 0-1 loss')
('surrogate loss function', 'subject of', 'robustness of the classifier')
('surrogate loss function', 'subject of', 'convergence criterion')
('surrogate loss function', 'subject of', 'early stopping')
('surrogate loss function', 'subject of', 'local minimum')
('surrogate loss function', 'subject of', 'batch and minibatch algorithms')
('surrogate loss function', 'subject of', 'maximum likelihood estimation')
('surrogate loss function', 'subject of', 'empirical distribution')
('surrogate loss function', 'subject of', 'objective function')"
8.1,3,"('optimization', 'training', 'deep models', 'gradient', 'J(θ)', 'logp (x,y;θ)', '∇θ', 'data', 'model', 'expectation', 'computation', 'examples', 'dataset', 'standard error', 'mean', 'n samples', 'σ', 'true standard deviation', 'value', 'linear returns', 'standard deviation', 'hypo","('optimization', 'training', 'deep models')
('gradient', 'J(θ)', 'logp (x,y;θ)')
('∇θ', 'data', 'model')
('expectation', 'computation', 'examples')
('dataset', 'standard error', 'mean')
('n samples', 'σ', 'true standard deviation')
('value', 'linear returns', 'standard deviation')"
8.1,4,"('optimization', 'training', 'deep models', 'minibatch', 'stochastic methods', 'stochastic gradient descent', 'batch size', 'multicore architectures', 'memory', 'hardware', 'power of 2', 'regularizing effect', 'generalization error', 'learning rate', 'sampling error', 'gradient', 'Hessian matrix', 'condition number')","('optimization', 'training', 'deep models')
('minibatch', 'stochastic methods', 'stochastic gradient descent')
('batch size', 'multicore architectures', 'memory')
('hardware', 'power of 2', 'regularizing effect')
('generalization error', 'learning rate', 'sampling error')
('gradient', 'Hessian matrix', 'condition number')"
8.1,5,"('OPTIMIZATION', 'TRAINING', 'DEEP MODELS', 'H', 'inverse', 'errors', 'estimation errors', 'g', 'estimate of g', 'update H 1g', 'H', 'minibatches', 'samples', 'gradient', 'expected gradient', 'dataset', 'medical data', 'blood sample test results', 'patient', 'examples', 'order', 'shuffle', 'data center', 'random selection', 'algorithm', 'optimization problems', 'machine learning', 'J(X)', 'minibatch stochastic gradient descent', 'generalization error', 'implementations')","('H', 'instance of', 'optimization') 
('inverse', 'instance of', 'relation') 
('errors', 'instance of', 'training') 
('estimation errors', 'instance of', 'errors') 
('g', 'instance of', 'estimation errors') 
('estimate of g', 'instance of', 'g') 
('update H 1g', 'instance of', 'estimate of g') 
('H', 'instance of', 'minibatches') 
('samples', 'instance of', 'gradient') 
('expected gradient', 'instance of', 'samples') 
('dataset', 'instance of', 'medical data') 
('blood sample test results', 'instance of', 'dataset') 
('patient', 'instance of', 'blood sample test results') 
('examples', 'instance of', 'order') 
('shuffle', 'instance of', 'examples') 
('data center', 'instance of', 'shuffle') 
('random selection', 'instance of', 'data center') 
('algorithm', 'instance of', 'optimization problems') 
('optimization problems', 'instance of', 'machine learning') 
('J(X)', 'instance of', 'minibatch stochastic gradient descent') 
('generalization error', 'instance of', 'implementations')"
8.1,6,"('OPTIMIZATION', 'TRAINING', 'DEEP MODELS', 'descent', 'shuffle', 'dataset', 'minibatch', 'compute', 'unbiased estimate', 'generalization error', 'online learning', 'stream of data', 'learner', 'example', 'data generating distribution', 'discrete', 'exact gradient', 'log-likelihood', 'functions', 'likelihood', 'continuous', 'mild assumptions', 'parameters', 'minibatch of examples', 'targets', 'loss', 'updating', 'direction', 'SGD', 'epochs')","('descent', 'instance of', 'optimization')
('shuffle', 'instance of', 'training')
('dataset', 'instance of', 'deep models')
('minibatch', 'instance of', 'dataset')
('compute', 'instance of', 'minibatch')
('unbiased estimate', 'instance of', 'compute')
('generalization error', 'instance of', 'unbiased estimate')
('online learning', 'instance of', 'generalization error')
('stream of data', 'instance of', 'online learning')
('learner', 'instance of', 'stream of data')
('example', 'instance of', 'learner')
('data generating distribution', 'instance of', 'example')
('discrete', 'instance of', 'data generating distribution')
('exact gradient', 'instance of', 'discrete')
('log-likelihood', 'instance of', 'exact gradient')
('functions', 'instance of', 'log-likelihood')
('likelihood', 'instance of', 'functions')
('continuous', 'instance of', 'likelihood')
('mild assumptions', 'instance of', 'continuous')
('parameters', 'instance of', 'mild assumptions')
('minibatch of examples', 'instance of', 'parameters')
('targets', 'instance of', 'minibatch of examples')
('loss', 'instance of', 'targets')
('updating', 'instance of', 'loss')
('direction', 'instance of', 'updating')
('SGD', 'instance of', 'direction')
('epochs', 'instance of', 'SGD')"
8.2,0,"('Optimization', 'Neural Network Optimization', 'convex optimization', 'objective function', 'constraints', 'convex case', 'most prominent challenges', 'ill-conditioning', 'Hessian matrix H', 'numerical optimization', 'neural network training problems', 'convex functions', 'second-order Taylor series expansion', 'gradient descent step', 'squared gradient norm')","('Neural Network Optimization', 'instance of', 'Optimization')
('convex optimization', 'instance of', 'Optimization')
('objective function', 'instance of', 'convex optimization')
('constraints', 'instance of', 'convex optimization')
('convex case', 'instance of', 'convex optimization')
('ill-conditioning', 'instance of', 'most prominent challenges')
('Hessian matrix H', 'instance of', 'ill-conditioning')
('numerical optimization', 'instance of', 'neural network training problems')
('convex functions', 'instance of', 'convex optimization')
('second-order Taylor series expansion', 'instance of', 'convex functions')
('gradient descent step', 'instance of', 'numerical optimization')
('squared gradient norm', 'instance of', 'gradient descent step')"
8.2,1,"('Gradient descent', 'critical point', 'convolutional network', 'object detection', 'scatterplot', 'gradient norm', 'training process', 'validation set', 'classification error', 'learning', 'learning rate', 'curvature', 'ill-conditioning', 'Newton’s method', 'local minima', 'convex optimization problem')","('critical point', 'instance of', 'gradient descent')
('convolutional network', 'instance of', 'gradient descent')
('object detection', 'instance of', 'convolutional network')
('scatterplot', 'instance of', 'gradient descent')
('gradient norm', 'instance of', 'gradient descent')
('training process', 'instance of', 'gradient descent')
('validation set', 'instance of', 'training process')
('classification error', 'instance of', 'training process')
('learning', 'instance of', 'gradient descent')
('learning rate', 'instance of', 'learning')
('curvature', 'instance of', 'gradient descent')
('ill-conditioning', 'instance of', 'curvature')
('Newton’s method', 'instance of', 'gradient descent')
('local minima', 'instance of', 'Newton’s method')
('convex optimization problem', 'instance of', 'Newton’s method')"
8.2,2,"('local minima', 'global minimum', 'convex functions', 'deep model', 'model identifiability problem', 'latent variables', 'weight space symmetry', 'rectified linear', 'maxout network', 'cost function value')","('global minimum', 'instance of', 'local minima')
('convex functions', 'instance of', 'global minimum')
('deep model', 'instance of', 'convex functions')
('model identifiability problem', 'instance of', 'deep model')
('latent variables', 'instance of', 'model identifiability problem')
('weight space symmetry', 'instance of', 'latent variables')
('rectified linear', 'instance of', 'deep model')
('maxout network', 'instance of', 'deep model')
('cost function value', 'instance of', 'maxout network')"
8.2,3,"('optimization', 'training', 'deep models', 'neural network optimization', 'local minima', 'cost function value', 'global minimum', 'parameter space', 'low cost', 'Saxe et al.', 'Dauphin et al.', 'Goodfellow et al.', 'Choromanska et al.', 'gradient', 'sufficiently large neural networks', 'norm of the gradient', 'negative test', 'high dimensional spaces', 'plateaus', 'saddle points', 'flat regions', 'Hessian matrix', 'cross-section', 'random functions', 'expected ratio', 'sign of each eigenvalue', 'coin tosses')","('optimization', 'part of', 'deep models')
('training', 'part of', 'deep models')
('deep models', 'instance of', 'neural network optimization')
('local minima', 'part of', 'cost function value')
('cost function value', 'part of', 'global minimum')
('parameter space', 'part of', 'neural network optimization')
('low cost', 'part of', 'sufficiently large neural networks')
('Saxe et al.', 'part of', 'neural network optimization')
('Dauphin et al.', 'part of', 'neural network optimization')
('Goodfellow et al.', 'part of', 'neural network optimization')
('Choromanska et al.', 'part of', 'neural network optimization')
('gradient', 'part of', 'sufficiently large neural networks')
('sufficiently large neural networks', 'part of', 'norm of the gradient')
('negative test', 'part of', 'high dimensional spaces')
('plateaus', 'part of', 'high dimensional spaces')
('saddle points', 'part of', 'high dimensional spaces')
('flat regions', 'part of', 'high dimensional spaces')
('Hessian matrix', 'part of', 'high dimensional spaces')
('cross-section', 'part of', 'high dimensional spaces')
('random functions', 'part of', 'high dimensional spaces')
('expected ratio', 'part of', 'high dimensional spaces')
('sign of each eigenvalue', 'part of', 'high dimensional spaces')
('coin tosses', 'part of', 'high dimensional spaces')"
8.2,4,"('optimization', 'training', 'deep models', 'random functions', 'eigenvalues', 'Hessian', 'coin tossing analogy', 'local minima', 'critical points', 'saddle points', 'local maxima', 'nonlinearities', 'shallow autoencoders', 'feedforward networks', 'nonlinear neural networks', 'complete learning dynamics', 'learning in these models', 'training algorithms', 'first-order optimization algorithms', 'gradient descent', 'visualizations', 'cost function', 'weights', 'continuous-time gradient descent', 'Newton’s method')","('optimization', 'part of', 'deep models')
('training', 'part of', 'deep models')
('deep models', 'instance of', 'neural network optimization')
('random functions', 'part of', 'high dimensional spaces')
('eigenvalues', 'part of', 'Hessian')
('Hessian', 'part of', 'neural network optimization')
('coin tossing analogy', 'part of', 'high dimensional spaces')
('local minima', 'part of', 'cost function')
('critical points', 'part of', 'cost function')
('saddle points', 'part of', 'cost function')
('local maxima', 'part of', 'cost function')
('nonlinearities', 'part of', 'nonlinear neural networks')
('shallow autoencoders', 'part of', 'feedforward networks')
('feedforward networks', 'part of', 'nonlinear neural networks')
('nonlinear neural networks', 'part of', 'deep models')
('complete learning dynamics', 'part of', 'deep models')
('learning in these models', 'part of', 'deep models')
('training algorithms', 'part of', 'deep models')
('first-order optimization algorithms', 'part of', 'training algorithms')
('gradient descent', 'part of', 'first-order optimization algorithms')
('visualizations', 'part of', 'deep models')
('cost function', 'part of', 'deep models')
('weights', 'part of', 'deep models')
('continuous-time gradient descent', 'part of', 'optimization')
('Newton’s method', 'part of', 'optimization')"
8.2,5,"('neural network', 'cost function', 'stochastic gradient descent', 'training trajectory', 'training time', 'gradient', 'Hessian matrix')","('neural network', 'instance of', 'cost function')
('cost function', 'instance of', 'neural network')
('neural network', 'instance of', 'stochastic gradient descent')
('stochastic gradient descent', 'instance of', 'neural network')
('training trajectory', 'instance of', 'neural network')
('neural network', 'instance of', 'training trajectory')
('training time', 'instance of', 'neural network')
('neural network', 'instance of', 'training time')
('gradient', 'instance of', 'neural network')
('neural network', 'instance of', 'gradient')
('Hessian matrix', 'instance of', 'neural network')
('neural network', 'instance of', 'Hessian matrix')"
8.2,6,"('gradient descent', 'Newton’s method', 'saddle point', 'second-order methods', 'saddle-free Newton method', 'maxima', 'wide, flat regions', 'convex problem', 'cliffs', 'exploding gradients')","('gradient descent', 'instance of', 'Newton’s method')
('Newton’s method', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'saddle point')
('saddle point', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'second-order methods')
('second-order methods', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'saddle-free Newton method')
('saddle-free Newton method', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'maxima')
('maxima', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'wide, flat regions')
('wide, flat regions', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'convex problem')
('convex problem', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'cliffs')
('cliffs', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'exploding gradients')
('exploding gradients', 'instance of', 'gradient descent')"
8.2,7,"('deep neural networks', 'recurrent neural networks', 'nonlinearities', 'parameter space', 'cliff region', 'gradient clipping heuristic', 'cost functions', 'multiplication', 'long-term dependencies', 'computational graph')","('deep neural networks', 'instance of', 'recurrent neural networks')
('recurrent neural networks', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'nonlinearities')
('nonlinearities', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'parameter space')
('parameter space', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'cliff region')
('cliff region', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'gradient clipping heuristic')
('gradient clipping heuristic', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'cost functions')
('cost functions', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'multiplication')
('multiplication', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'long-term dependencies')
('long-term dependencies', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'computational graph')
('computational graph', 'instance of', 'deep neural networks')"
8.2,8,"('computational graph', 'long temporal sequence', 'matrix multiplication', 'eigendecomposition', 'vanishing gradients', 'exploding gradients', 'gradient clipping', 'power method algorithm', 'principal eigenvector', 'recurrent networks', 'feedforward networks', 'inexact gradients')","('computational graph', 'instance of', 'long temporal sequence')
('long temporal sequence', 'instance of', 'computational graph')
('computational graph', 'instance of', 'matrix multiplication')
('matrix multiplication', 'instance of', 'computational graph')
('computational graph', 'instance of', 'eigendecomposition')
('eigendecomposition', 'instance of', 'computational graph')
('computational graph', 'instance of', 'vanishing gradients')
('vanishing gradients', 'instance of', 'computational graph')
('computational graph', 'instance of', 'exploding gradients')
('exploding gradients', 'instance of', 'computational graph')
('computational graph', 'instance of', 'gradient clipping')
('gradient clipping', 'instance of', 'computational graph')
('computational graph', 'instance of', 'power method algorithm')
('power method algorithm', 'instance of', 'computational graph')
('computational graph', 'instance of', 'principal eigenvector')
('principal eigenvector', 'instance of', 'computational graph')
('computational graph', 'instance of', 'recurrent networks')
('recurrent networks', 'instance of', 'computational graph')
('computational graph', 'instance of', 'feedforward networks')
('feedforward networks', 'instance of', 'computational graph')
('computational graph', 'instance of', 'inexact gradients')
('inexact gradients', 'instance of', 'computational graph')"
8.2,9,"('contrastive divergence', 'Boltzmann machine', 'surrogate loss function', 'poorly conditioned', 'cliff', 'saddle point', 'learning trajectory', 'global minimum', 'local minimum', 'critical point', 'loss function', 'log-likelihood', 'softmax', 'classifier', 'negative log-likelihood', 'N log-likelihood', 'learning algorithm', 'local optimization')","('contrastive divergence', 'instance of', 'Boltzmann machine')
('Boltzmann machine', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'surrogate loss function')
('surrogate loss function', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'poorly conditioned')
('poorly conditioned', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'cliff')
('cliff', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'saddle point')
('saddle point', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'learning trajectory')
('learning trajectory', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'global minimum')
('global minimum', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'local minimum')
('local minimum', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'critical point')
('critical point', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'loss function')
('loss function', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'log-likelihood')
('log-likelihood', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'softmax')
('softmax', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'classifier')
('classifier', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'negative log-likelihood')
('negative log-likelihood', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'N log-likelihood')
('N log-likelihood', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'learning algorithm')
('learning algorithm', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'local optimization')
('local optimization', 'instance of', 'contrastive divergence')"
8.2,10,"('deep models', 'optimization', 'training', 'global solution', 'saddle points', 'local minima', 'cost function', 'asymptotes', 'mountain', 'trajectory', 'learning algorithms', 'neural networks', 'gradient descent', 'objective function', 'conditioning', 'discontinuous gradients', 'steps', 'short path')","('deep models', 'subclass of', 'neural networks')
('optimization', 'part of', 'training')
('training', 'use', 'learning algorithms')
('global solution', 'based on', 'optimization')
('saddle points', 'based on', 'optimization')
('local minima', 'based on', 'optimization')
('cost function', 'based on', 'optimization')
('asymptotes', 'based on', 'cost function')
('mountain', 'based on', 'cost function')
('trajectory', 'based on', 'steps')
('learning algorithms', 'use', 'gradient descent')
('neural networks', 'instance of', 'deep models')
('gradient descent', 'use', 'learning algorithms')
('objective function', 'based on', 'cost function')
('conditioning', 'based on', 'cost function')
('discontinuous gradients', 'based on', 'cost function')
('steps', 'use', 'learning algorithms')
('short path', 'based on', 'trajectory')"
8.2,11,"('neural networks', 'optimization algorithm', 'performance', 'critical point', 'Newton’s method', 'wide flat region', 'greedy', 'trajectory', 'well-behaved region', 'initial points', 'traditional optimization algorithms', 'theoretical limits', 'intractable', 'generalization error', 'machine learning research')","('neural networks', 'instance of', 'optimization algorithm')
('optimization algorithm', 'use', 'neural networks')
('performance', 'based on', 'optimization algorithm')
('critical point', 'based on', 'optimization algorithm')
('Newton’s method', 'instance of', 'optimization algorithm')
('wide flat region', 'based on', 'optimization algorithm')
('greedy', 'based on', 'optimization algorithm')
('trajectory', 'based on', 'optimization algorithm')
('well-behaved region', 'based on', 'optimization algorithm')
('initial points', 'based on', 'optimization algorithm')
('traditional optimization algorithms', 'subclass of', 'optimization algorithm')
('theoretical limits', 'based on', 'optimization algorithm')
('intractable', 'based on', 'optimization algorithm')
('generalization error', 'based on', 'optimization algorithm')
('machine learning research', 'based on', 'optimization algorithm')"
8.3,0,"('gradient descent', 'stochastic gradient descent', 'optimization algorithms', 'machine learning', 'deep learning', 'learning rate', 'parameter', 'training set', 'gradient estimate', 'update', 'stopping criterion', 'minibatch', 'examples', 'targets', 'total cost function', 'convergence')","('gradient descent', 'subclass of', 'optimization algorithms')
('stochastic gradient descent', 'subclass of', 'optimization algorithms')
('optimization algorithms', 'use', 'machine learning')
('machine learning', 'instance of', 'deep learning')
('deep learning', 'use', 'gradient descent')
('learning rate', 'use', 'gradient descent')
('parameter', 'based on', 'gradient descent')
('training set', 'use', 'gradient descent')
('gradient estimate', 'use', 'gradient descent')
('update', 'use', 'gradient descent')
('stopping criterion', 'use', 'gradient descent')
('minibatch', 'use', 'stochastic gradient descent')
('examples', 'use', 'gradient descent')
('targets', 'use', 'gradient descent')
('total cost function', 'based on', 'gradient descent')
('convergence', 'use', 'gradient descent')"
8.3,1,"('learning rate', 'decay', 'iteration', 'monitoring learning curves', 'linear schedule', 'initial learning rate', 'cost function', 'convergence', 'optimization algorithm', 'training examples', 'dataset', 'tolerance', 'excess error', 'convex problem', 'strongly convex', 'batch gradient descent', 'stochastic gradient descent', 'Cramér-Rao bound', 'generalization error')","('learning rate', 'decay', 'optimization algorithm')
('learning rate', 'decay', 'convergence')
('learning rate', 'decay', 'monitoring learning curves')
('learning rate', 'decay', 'linear schedule')
('learning rate', 'decay', 'initial learning rate')
('learning rate', 'decay', 'cost function')
('learning rate', 'decay', 'batch gradient descent')
('learning rate', 'decay', 'stochastic gradient descent')
('iteration', 'monitoring', 'learning curves')
('iteration', 'monitoring', 'cost function')
('iteration', 'monitoring', 'convergence')
('iteration', 'monitoring', 'optimization algorithm')
('iteration', 'monitoring', 'training examples')
('cost function', 'convergence', 'optimization algorithm')
('cost function', 'convergence', 'training examples')
('cost function', 'convergence', 'dataset')
('optimization algorithm', 'convergence', 'tolerance')
('optimization algorithm', 'convergence', 'excess error')
('optimization algorithm', 'convergence', 'convex problem')
('optimization algorithm', 'convergence', 'strongly convex')
('optimization algorithm', 'training examples', 'batch gradient descent')
('optimization algorithm', 'training examples', 'stochastic gradient descent')
('optimization algorithm', 'convergence', 'Cramér-Rao bound')
('optimization algorithm', 'convergence', 'generalization error')"
8.3,2,"('deep models', 'optimization algorithm', 'converges faster', 'machine learning', 'overfitting', 'stochastic gradient descent', 'large datasets', 'rapid initial progress', 'evaluating the gradient', 'batch and stochastic gradient descent', 'minibatch size', 'learning with it', 'momentum algorithm', 'high curvature', 'consistent gradients', 'noisy gradients', 'exponentially decaying moving average', 'parameter space', 'Newton’s laws of motion', 'momentum in physics', 'hyperparameter', 'update rule', 'velocity vectorv', 'particle', 'learning algorithm', 'algorithm 8.2')","('deep models', 'subclass of', 'machine learning')
('optimization algorithm', 'subclass of', 'machine learning')
('converges faster', 'subclass of', 'optimization algorithm')
('overfitting','subclass of', 'machine learning')
('stochastic gradient descent', 'subclass of', 'optimization algorithm')
('large datasets', 'subclass of', 'machine learning')
('rapid initial progress', 'subclass of', 'optimization algorithm')
('evaluating the gradient', 'subclass of', 'optimization algorithm')
('batch and stochastic gradient descent', 'subclass of', 'optimization algorithm')
('minibatch size', 'subclass of', 'batch and stochastic gradient descent')
('learning with it', 'subclass of', 'batch and stochastic gradient descent')
('momentum algorithm', 'subclass of', 'optimization algorithm')
('high curvature', 'subclass of', 'optimization algorithm')
('consistent gradients', 'subclass of', 'optimization algorithm')
('noisy gradients', 'subclass of', 'optimization algorithm')
('exponentially decaying moving average', 'subclass of', 'optimization algorithm')
('parameter space', 'instance of', 'machine learning')
('Newton’s laws of motion', 'subclass of', 'machine learning')
('momentum in physics', 'subclass of', 'machine learning')
('hyperparameter', 'subclass of', 'machine learning')
('update rule', 'subclass of', 'machine learning')
('velocity vectorv', 'subclass of', 'machine learning')
('particle', 'subclass of', 'machine learning')
('learning algorithm', 'subclass of', 'machine learning')
('algorithm 8.2', 'subclass of', 'machine learning')"
8.3,3,"('Hessian matrix', 'variance', 'stochastic gradient', 'momentum', 'poorly conditioned Hessian matrix', 'quadratic loss function', 'momentum learning rule', 'gradient descent', 'canyon', 'steep sides', 'quadratic objective')","('Hessian matrix', 'subclass of', 'variance')
('stochastic gradient', 'subclass of', 'momentum')
('poorly conditioned Hessian matrix', 'subclass of', 'Hessian matrix')
('quadratic loss function', 'subclass of', 'variance')
('momentum learning rule', 'subclass of', 'momentum')
('gradient descent', 'subclass of', 'momentum')
('canyon', 'subclass of', 'quadratic loss function')
('steep sides', 'subclass of', 'canyon')
('quadratic objective', 'subclass of', 'quadratic loss function')"
8.3,4,"('step size', 'sequence of gradients', 'momentum algorithm', 'terminal velocity', 'momentum hyperparameter', 'learning rate', 'initial parameter', 'velocity', 'stopping criterion', 'minibatch', 'gradient estimate', 'velocity update', 'update', 'continuous-time Newtonian dynamics', 'particle', 'net force', 'accelerate', 'position', 'variable', 'velocity', 'first-order differential equation')","('step size', 'subclass of', 'momentum algorithm')
('sequence of gradients', 'subclass of', 'momentum algorithm')
('momentum algorithm', 'subclass of', 'terminal velocity')
('momentum algorithm', 'subclass of', 'momentum hyperparameter')
('learning rate', 'subclass of', 'momentum algorithm')
('initial parameter', 'subclass of', 'momentum algorithm')
('velocity', 'subclass of', 'momentum algorithm')
('stopping criterion', 'subclass of', 'momentum algorithm')
('minibatch', 'subclass of', 'gradient estimate')
('gradient estimate', 'subclass of', 'velocity update')
('velocity update', 'subclass of', 'momentum algorithm')
('continuous-time Newtonian dynamics', 'subclass of', 'particle')
('particle', 'subclass of', 'accelerate')
('net force', 'subclass of', 'position')
('position', 'subclass of', 'variable')
('velocity', 'subclass of', 'position')
('first-order differential equation', 'subclass of', 'variable')"
8.3,5,"('differential equations', ""Euler's method"", 'forces', 'negative gradient', 'cost function', 'Newtonian scenario', 'velocity', 'hockey puck', 'icy surface', 'downhill', 'uphill', 'oscillating', 'frictionless', 'viscous drag', 'resistant medium', 'energy', 'local minimum', 'mathematical convenience', 'integer powers', 'physical systems', 'drag', 'turbulent drag', 'square of the velocity', 'dry friction', 'constant magnitude', 'lower power', 'force', 'gradient of the cost function', 'local minimum', 'viscous drag')","('differential equations', 'subclass of', 'Euler\'s method')
('forces', 'subclass of', 'negative gradient')
('cost function', 'subclass of', 'negative gradient')
('Newtonian scenario', 'subclass of', 'forces')
('velocity', 'subclass of', 'forces')
('hockey puck', 'subclass of', 'velocity')
('icy surface', 'subclass of', 'forces')
('downhill', 'subclass of', 'icy surface')
('uphill', 'subclass of', 'icy surface')
('oscillating', 'subclass of', 'forces')
('frictionless', 'subclass of', 'forces')
('viscous drag', 'subclass of', 'oscillating')
('resistant medium', 'subclass of', 'forces')
('energy', 'subclass of', 'forces')
('local minimum', 'subclass of', 'gradient of the cost function')
('mathematical convenience', 'subclass of', 'local minimum')
('integer powers', 'subclass of', 'local minimum')
('physical systems', 'instance of', 'forces')
('drag', 'subclass of', 'viscous drag')
('turbulent drag', 'subclass of', 'drag')
('square of the velocity', 'subclass of', 'viscous drag')
('dry friction', 'subclass of', 'viscous drag')
('constant magnitude', 'subclass of', 'forces')
('lower power', 'subclass of', 'turbulent drag')
('force', 'subclass of', 'forces')
('gradient of the cost function', 'subclass of', 'cost function')
('local minimum', 'subclass of', 'force')
('viscous drag', 'subclass of', 'resistant medium')"
8.3,6,"('Nesterov’s accelerated gradient method', 'update rules', 'momentum algorithm', 'parameters', 'excess error', 'rate of convergence', 'stochastic gradient', 'correction factor', 'Nesterov momentum algorithm', 'convex batch gradient case', 'rate of convergence', 'stopping criterion', 'minibatch', 'interim update', 'interim point', 'velocity update')","('Nesterov’s accelerated gradient method', 'subclass of', 'update rules')
('momentum algorithm', 'subclass of', 'update rules')
('parameters', 'subclass of', 'momentum algorithm')
('excess error', 'subclass of', 'momentum algorithm')
('rate of convergence', 'subclass of', 'update rules')
('stochastic gradient', 'subclass of', 'momentum algorithm')
('correction factor', 'subclass of', 'momentum algorithm')
('Nesterov momentum algorithm', 'subclass of', 'update rules')
('convex batch gradient case', 'subclass of', 'rate of convergence')
('stopping criterion', 'subclass of', 'update rules')
('minibatch', 'subclass of', 'update rules')
('interim update', 'subclass of', 'minibatch')
('interim point', 'subclass of', 'update rules')
('velocity update', 'subclass of', 'Nesterov’s accelerated gradient method')"
8.4,0,"('deep learning', 'machine learning', 'optimization', 'training', 'deep models', 'initialization strategies', 'neural network optimization')","('deep learning', 'subclass of', 'machine learning')
('machine learning', 'use', 'optimization')
('training', 'based on', 'deep learning')
('training', 'subject of', 'neural network optimization')
('deep models', 'facet of', 'deep learning')
('initialization strategies', 'use', 'neural network optimization')
('neural network optimization', 'use', 'optimization')"
8.4,1,"('optimization', 'random initialization', 'parameters', 'basis functions', 'Gram-Schmidt orthogonalization', 'high-entropy distribution', 'weights', 'biases', 'Gaussian distribution', 'uniform distribution', 'symmetry breaking', 'signal loss', 'exploding values', 'gradient clipping', 'activation function', 'regularization', 'stochastic gradient descent')","('optimization', 'subclass of', 'random initialization')
('parameters', 'facet of', 'optimization')
('basis functions', 'facet of', 'optimization')
('Gram-Schmidt orthogonalization', 'facet of', 'optimization')
('high-entropy distribution', 'facet of', 'optimization')
('weights', 'part of', 'parameters')
('biases', 'part of', 'parameters')
('Gaussian distribution', 'facet of', 'random initialization')
('uniform distribution', 'facet of', 'random initialization')
('symmetry breaking', 'facet of', 'random initialization')
('signal loss', 'facet of', 'optimization')
('exploding values', 'facet of', 'optimization')
('gradient clipping', 'facet of', 'optimization')
('activation function', 'facet of', 'optimization')
('regularization', 'facet of', 'optimization')
('stochastic gradient descent', 'facet of', 'optimization')"
8.4,2,"('optimization for training deep models', 'early stopping criterion', 'weight decay', 'initialization', 'parameters', 'gradient descent', 'Gaussian prior', 'units', 'likelihood term', 'objective function', 'heuristics', 'fully connected layer', 'weights', 'normalized initialization', 'activation variance', 'gradient variance', 'random orthogonal matrices', 'scaling factor', 'nonlinear activation functions', 'convergence', 'deep network')","('optimization for training deep models', 'early stopping criterion', 'deep network')
('optimization for training deep models', 'weight decay', 'parameters')
('optimization for training deep models', 'initialization', 'parameters')
('optimization for training deep models', 'gradient descent', 'parameters')
('optimization for training deep models', 'Gaussian prior', 'parameters')
('optimization for training deep models', 'units', 'parameters')
('optimization for training deep models', 'likelihood term', 'objective function')
('optimization for training deep models', 'heuristics', 'objective function')
('optimization for training deep models', 'fully connected layer', 'parameters')
('optimization for training deep models', 'weights', 'parameters')
('optimization for training deep models', 'normalized initialization', 'parameters')
('optimization for training deep models', 'activation variance', 'parameters')
('optimization for training deep models', 'gradient variance', 'parameters')
('optimization for training deep models', 'random orthogonal matrices', 'parameters')
('optimization for training deep models', 'scaling factor', 'parameters')
('optimization for training deep models', 'nonlinear activation functions', 'parameters')
('optimization for training deep models', 'convergence', 'parameters')"
8.4,3,"('optimization for training deep models', 'feedforward networks', 'vanishing and exploding gradients problem', 'initial weights', 'generalization error', 'hyperparameter', 'scaling rules', 'sparse initialization', 'diversity', 'prior', 'gradient descent', 'maxout units', 'computational resources', 'hyperparameter search algorithm', 'dense initialization', 'random search')","('optimization for training deep models', 'feedforward networks', 'vanishing and exploding gradients problem')
('optimization for training deep models', 'initial weights', 'feedforward networks')
('optimization for training deep models', 'generalization error', 'feedforward networks')
('optimization for training deep models', 'hyperparameter', 'feedforward networks')
('optimization for training deep models', 'scaling rules', 'feedforward networks')
('optimization for training deep models', 'sparse initialization', 'feedforward networks')
('optimization for training deep models', 'diversity', 'feedforward networks')
('optimization for training deep models', 'prior', 'feedforward networks')
('optimization for training deep models', 'gradient descent', 'feedforward networks')
('optimization for training deep models', 'maxout units', 'feedforward networks')
('optimization for training deep models', 'computational resources', 'feedforward networks')
('optimization for training deep models', 'hyperparameter search algorithm', 'feedforward networks')
('optimization for training deep models', 'dense initialization', 'feedforward networks')
('optimization for training deep models', 'random search', 'feedforward networks')"
8.4,4,"('initialization of weights', 'biases', 'output unit', 'marginal statistics', 'activation function', 'training set', 'distribution over classes', 'highly skewed distribution', 'softmax', 'classifiers', 'autoencoders', 'Boltzmann machines', 'input data', 'saturation', 'ReLU hidden unit', 'random walk initialization', 'participation function')","('initialization of weights', 'biases', 'output unit')
('initialization of weights', 'marginal statistics', 'output unit')
('initialization of weights', 'activation function', 'output unit')
('initialization of weights', 'training set', 'output unit')
('initialization of weights', 'distribution over classes', 'output unit')
('initialization of weights', 'highly skewed distribution', 'output unit')
('initialization of weights', 'softmax', 'output unit')
('initialization of weights', 'classifiers', 'output unit')
('initialization of weights', 'autoencoders', 'output unit')
('initialization of weights', 'Boltzmann machines', 'output unit')
('initialization of weights', 'input data', 'output unit')
('initialization of weights', 'saturation', 'output unit')
('initialization of weights', 'ReLU hidden unit', 'output unit')
('initialization of weights', 'random walk initialization', 'output unit')
('initialization of weights', 'participation function', 'output unit')"
8.5,0,"('variance parameter', 'precision parameter', 'linear regression', 'conditional variance estimate', 'supervised model', 'unsupervised model', 'related task', 'random initialization', 'convergence', 'generalization', 'adaptive learning rates', 'neural network researchers', 'parameter space', 'momentum algorithm')","('variance parameter', 'linear regression', 'conditional variance estimate')
('variance parameter', 'supervised model', 'conditional variance estimate')
('variance parameter', 'unsupervised model', 'conditional variance estimate')
('variance parameter', 'related task', 'conditional variance estimate')
('variance parameter', 'random initialization', 'conditional variance estimate')
('variance parameter', 'convergence', 'conditional variance estimate')
('variance parameter', 'generalization', 'conditional variance estimate')
('variance parameter', 'adaptive learning rates', 'conditional variance estimate')
('variance parameter', 'neural network researchers', 'conditional variance estimate')
('variance parameter', 'parameter space', 'conditional variance estimate')
('variance parameter', 'momentum algorithm', 'conditional variance estimate')
('precision parameter', 'linear regression', 'conditional variance estimate')
('precision parameter', 'supervised model', 'conditional variance estimate')
('precision parameter', 'unsupervised model', 'conditional variance estimate')
('precision parameter', 'related task', 'conditional variance estimate')
('precision parameter', 'random initialization', 'conditional variance estimate')
('precision parameter', 'convergence', 'conditional variance estimate')
('precision parameter', 'generalization', 'conditional variance estimate')
('precision parameter', 'adaptive learning rates', 'conditional variance estimate')
('precision parameter', 'neural network researchers', 'conditional variance estimate')
('precision parameter', 'parameter space', 'conditional variance estimate')
('precision parameter', 'momentum algorithm', 'conditional variance estimate')"
8.5,1,"('delta-bar-delta algorithm', 'individual learning rates', 'model parameters', 'partial derivative', 'full batch optimization', 'incremental methods', 'AdaGrad algorithm', 'convex optimization', 'theoretical properties', 'deep neural network models', 'effective learning rate', 'RMSProp algorithm', 'exponentially weighted moving average', 'non-convex setting', 'neural network training', 'learning trajectory', 'locally convex bowl')","('delta-bar-delta algorithm', 'individual learning rates', 'model parameters')
('delta-bar-delta algorithm', 'partial derivative', 'model parameters')
('delta-bar-delta algorithm', 'full batch optimization', 'model parameters')
('delta-bar-delta algorithm', 'incremental methods', 'model parameters')
('delta-bar-delta algorithm', 'AdaGrad algorithm', 'model parameters')
('delta-bar-delta algorithm', 'convex optimization', 'model parameters')
('delta-bar-delta algorithm', 'theoretical properties', 'model parameters')
('delta-bar-delta algorithm', 'deep neural network models', 'model parameters')
('delta-bar-delta algorithm', 'effective learning rate', 'model parameters')
('delta-bar-delta algorithm', 'RMSProp algorithm', 'model parameters')
('delta-bar-delta algorithm', 'exponentially weighted moving average', 'model parameters')
('delta-bar-delta algorithm', 'non-convex setting', 'model parameters')
('delta-bar-delta algorithm', 'neural network training', 'model parameters')
('delta-bar-delta algorithm', 'learning trajectory', 'model parameters')
('delta-bar-delta algorithm', 'locally convex bowl', 'model parameters')"
8.5,2,"('AdaGrad', 'RMSProp', 'AdaGrad', 'RMSProp', 'Nesterov momentum', 'AdaGrad', 'RMSProp', 'Adam', 'RMSProp', 'Adam')","('AdaGrad', 'subclass of', 'RMSProp')
('Nesterov momentum', 'subclass of', 'AdaGrad')
('Adam', 'subclass of', 'RMSProp')"
8.5,3,"('RMSProp', 'Adam', 'AdaGrad', 'RMSProp', 'Adam', 'RMSProp', 'Adam', 'RMSProp', 'SGD', 'SGD with momentum', 'RMSProp', 'RMSProp with momentum', 'AdaDelta', 'Adam')","('RMSProp', 'subclass of', 'Adam')
('AdaGrad', 'subclass of', 'RMSProp')
('Adam', 'subclass of', 'RMSProp')
('RMSProp', 'subclass of', 'Adam')
('RMSProp', 'subclass of', 'Adam')
('SGD with momentum', 'subclass of', 'SGD')
('RMSProp', 'subclass of', 'RMSProp with momentum')
('AdaDelta', 'subclass of', 'RMSProp')
('Adam', 'subclass of', 'RMSProp')"
8.6,0,"('RMSProp', 'Nesterov momentum', 'Newton’s Method')","('RMSProp', 'instance of', 'Nesterov momentum')
('Nesterov momentum', 'use', 'Newton’s Method')"
8.6,1,"('Adam', 'Newton’s Method')","('Adam', 'use', 'Newton’s Method')"
8.6,2,"('Newton’s Method', 'Levenberg–Marquardt algorithm')","('Newton’s Method', 'use', 'Levenberg–Marquardt algorithm')"
8.6,3,"('Optimization', 'Training', 'Deep Models', 'Newton\'s method', 'Hessian', 'k parameters', 'inversion', 'matrix', 'computational complexity', 'Conjugate Gradients', 'line search', 'zig-zag pattern', 'search direction')","('Optimization', 'based on', 'Newton\'s method')
('Optimization', 'based on', 'Conjugate Gradients')
('Training', 'based on', 'Optimization')
('Deep Models', 'based on', 'Training')
('Newton\'s method', 'facet of', 'Optimization')
('Hessian', 'part of', 'Optimization')
('k parameters', 'part of', 'Optimization')
('inversion', 'part of', 'Optimization')
('matrix', 'part of', 'Optimization')
('computational complexity', 'part of', 'Optimization')
('Conjugate Gradients', 'part of', 'Optimization')
('line search', 'part of', 'Optimization')
('zig-zag pattern', 'part of', 'Optimization')
('search direction', 'part of', 'Optimization')"
8.6,4,"('Optimization', 'Training', 'Deep Models', 'Newton\'s method', 'Hessian', 'k parameters', 'inversion', 'matrix', 'computational complexity', 'Conjugate Gradients', 'line search', 'zig-zag pattern', 'search direction', 'Fletcher-Reeves')","('Optimization', 'based on', 'Newton\'s method')
('Optimization', 'based on', 'Conjugate Gradients')
('Training', 'based on', 'Optimization')
('Deep Models', 'based on', 'Training')
('Newton\'s method', 'facet of', 'Optimization')
('Hessian', 'part of', 'Optimization')
('k parameters', 'part of', 'Optimization')
('inversion', 'part of', 'Optimization')
('matrix', 'part of', 'Optimization')
('computational complexity', 'part of', 'Optimization')
('Conjugate Gradients', 'part of', 'Optimization')
('line search', 'part of', 'Optimization')
('zig-zag pattern', 'part of', 'Optimization')
('search direction', 'part of', 'Optimization')
('Fletcher-Reeves', 'part of', 'Optimization')"
8.6,5,"('Optimization', 'Training', 'Deep Models', 'Conjugate Gradients', 'Fletcher-Reeves', 'Polak-Ribière', 'parameters', 'Training set', 'examples', 'gradient', 'search direction', 'line search', 'update', 'Nonlinear Conjugate Gradients')","('Optimization', 'based on', 'Conjugate Gradients')
('Optimization', 'based on', 'Fletcher-Reeves')
('Optimization', 'based on', 'Polak-Ribière')
('Training', 'based on', 'Optimization')
('Deep Models', 'based on', 'Training')
('Conjugate Gradients', 'facet of', 'Optimization')
('Fletcher-Reeves', 'facet of', 'Optimization')
('Polak-Ribière', 'facet of', 'Optimization')
('parameters', 'part of', 'Optimization')
('Training set', 'part of', 'Training')
('examples', 'part of', 'Training set')
('gradient', 'part of', 'Optimization')
('search direction', 'part of', 'Optimization')
('line search', 'part of', 'Optimization')
('update', 'part of', 'Optimization')
('Nonlinear Conjugate Gradients', 'part of', 'Optimization')"
8.6,6,"('Optimization', 'Training', 'Deep Models', 'BFGS', 'Newton\'s method', 'computational burden', 'approximation', 'Hessian', 'parameters', 'quasi-Newton methods', 'inverse Hessian', 'matrix M', 'direction of descent', 'line search', 'step', 'update', 'parameters')","('Optimization', 'based on', 'BFGS')
('Optimization', 'based on', 'Newton\'s method')
('Training', 'based on', 'Optimization')
('Deep Models', 'based on', 'Training')
('BFGS', 'facet of', 'Optimization')
('Newton\'s method', 'facet of', 'Optimization')
('computational burden', 'part of', 'Optimization')
('approximation', 'part of', 'Optimization')
('Hessian', 'part of', 'Optimization')
('parameters', 'part of', 'Optimization')
('quasi-Newton methods', 'part of', 'Optimization')
('inverse Hessian', 'part of', 'Optimization')
('matrix M', 'part of', 'Optimization')
('direction of descent', 'part of', 'Optimization')
('line search', 'part of', 'Optimization')
('step', 'part of', 'Optimization')
('update', 'part of', 'Optimization')
('parameters', 'part of', 'Optimization')"
8.7,0,"('conjugate gradients', 'BFGS', 'L-BFGS', 'Hessian', 'conjugate gradients', 'Batch Normalization', 'Ioffe and Szegedy')","('conjugate gradients', 'instance of', 'BFGS'),
('L-BFGS', 'instance of', 'BFGS'),
('Hessian', 'instance of', 'BFGS'),
('Batch Normalization', 'instance of', 'Ioffe and Szegedy')"
8.7,1,"('back-propagation algorithm', 'Taylor series approximation', 'learning rate', 'parameters', 'second-order optimization algorithms', 'batch normalization', 'network', 'mean', 'standard deviation', 'vector')","('back-propagation algorithm', 'instance of', 'Taylor series approximation'),
('learning rate', 'relation', 'parameters'),
('second-order optimization algorithms', 'instance of', 'Taylor series approximation'),
('batch normalization', 'instance of', 'mean'),
('batch normalization', 'instance of', 'standard deviation'),
('network', 'relation', 'parameters'),
('mean', 'relation', 'batch normalization'),
('standard deviation', 'relation', 'batch normalization'),
('vector', 'instance of', 'parameters')"
8.7,2,"('mean', 'standard deviation', 'back-propagate', 'gradient descent', 'batch normalization', 'test time', 'running averages', 'minibatch', 'model')","('mean', 'instance of', 'standard deviation'),
('back-propagate', 'relation', 'gradient descent'),
('batch normalization', 'relation', 'gradient descent'),
('test time', 'relation', 'running averages'),
('minibatch', 'relation', 'gradient descent'),
('minibatch', 'relation', 'model')"
8.7,3,"('linear example', 'lower layers', 'nonlinear activation functions', 'expressive power', 'learned parameters', 'learning dynamics', 'gradient descent', 'neural network layers', 'rectified linear transformation')","('linear example', 'instance of', 'lower layers'),
('nonlinear activation functions', 'relation', 'expressive power'),
('learned parameters', 'relation', 'gradient descent'),
('learning dynamics', 'relation', 'gradient descent'),
('gradient descent', 'relation', 'neural network layers'),
('rectified linear transformation', 'instance of', 'nonlinear activation functions'),
('rectified linear transformation', 'relation', 'neural network layers')"
8.7,4,"('deep models', 'XW', 'normalized version', 'bias term', 'β parameter', 'batch normalization', 'nonlinear activation function', 'rectified linear function', 'statistics of the input', 'standardization', 'linear operations', 'convolutional networks', 'spatial location', 'coordinate descent', 'optimization problem', 'local minimum', 'block coordinate descent', 'cost function', 'sparse coding', 'weight matrix', 'activation values', 'training set', 'weight decay', 'constraint', 'norms', 'columns', 'convex problem', 'objective function', 'variables')","('deep models', 'instance of', 'XW'),
('XW', 'is a', 'normalized version'),
('normalized version', 'is a', 'bias term'),
('bias term', 'is a', 'β parameter'),
('deep models', 'use', 'batch normalization'),
('deep models', 'use', 'nonlinear activation function'),
('nonlinear activation function', 'based on', 'rectified linear function'),
('deep models', 'use', 'statistics of the input'),
('statistics of the input', 'based on', 'standardization'),
('deep models', 'use', 'linear operations'),
('deep models', 'use', 'convolutional networks'),
('convolutional networks', 'use', 'spatial location'),
('linear operations', 'based on', 'coordinate descent'),
('coordinate descent', 'is a', 'optimization problem'),
('optimization problem', 'can have a', 'local minimum'),
('optimization problem', 'solved by', 'block coordinate descent'),
('block coordinate descent', 'is a', 'optimization problem'),
('optimization problem', 'has', 'cost function'),
('cost function', 'used in', 'sparse coding'),
('sparse coding', 'uses', 'weight matrix'),
('sparse coding', 'uses', 'activation values'),
('deep models', 'apply to', 'training set'),
('deep models', 'use', 'weight decay'),
('weight decay', 'can be a', 'constraint'),
('constraint', 'applied to', 'norms'),
('norms', 'define', 'columns'),
('optimization problem', 'is a', 'convex problem'),
('optimization problem', 'has', 'objective function'),
('objective function', 'has', 'variables')"
8.7,5,"('optimization strategy', 'convex optimization', 'alternating', 'optimizing W', 'optimizing H', 'coordinate descent', 'function f(x)', 'Newton’s method', 'Polyak averaging', 'trajectory', 'optimization algorithm', 'convex problems', 'neural networks', 'valley', 'non-convex problems', 'exponentially decaying running average', 'running average approach', 'applications', 'Szegedy et al. (2015)')","('optimization strategy', 'is a', 'convex optimization'),
('convex optimization', 'uses', 'alternating'),
('alternating', 'applies to', 'optimizing W'),
('alternating', 'applies to', 'optimizing H'),
('optimizing W', 'can be done with', 'coordinate descent'),
('optimizing H', 'can be done with', 'coordinate descent'),
('coordinate descent', 'is a', 'function f(x)'),
('function f(x)', 'can be optimized using', 'Newton’s method'),
('Newton’s method', 'can be improved by', 'Polyak averaging'),
('Polyak averaging', 'calculates', 'trajectory'),
('trajectory', 'is used in', 'optimization algorithm'),
('convex optimization', 'can be applied to', 'convex problems'),
('convex problems', 'commonly arise in', 'neural networks'),
('neural networks', 'can have a', 'valley'),
('optimization algorithm', 'can be used for', 'non-convex problems'),
('exponentially decaying running average', 'is a', 'running average approach'),
('running average approach', 'has', 'applications'),
('Szegedy et al. (2015)', 'cited in the context of', 'applications')"
8.7,6,"('Supervised Pretraining', 'training a model', 'complex and hard to optimize', 'difficult task', 'simpler model', 'simpler task', 'pretraining', 'Greedy algorithms', 'optimal solution', 'joint solution', 'fine-tuning stage', 'initializing the joint optimization algorithm', 'greedy pretraining', 'supervised learning problems', 'Bengio et al. (2007)', 'Simonyan and Zisserman (2015)', 'deep convolutional network', 'Yu et al. (2010)', 'raw input')","('Supervised Pretraining', 'is a', 'training a model'),
('training a model', 'can be', 'complex and hard to optimize'),
('complex and hard to optimize', 'is a', 'difficult task'),
('Supervised Pretraining', 'uses', 'simpler model'),
('simpler model', 'is trained on a', 'simpler task'),
('simpler task', 'is used for', 'pretraining'),
('pretraining', 'can be done with', 'Greedy algorithms'),
('Greedy algorithms', 'may not find the', 'optimal solution'),
('Greedy algorithms', 'may find a', 'joint solution'),
('joint solution', 'is used in the', 'fine-tuning stage'),
('fine-tuning stage', 'involves', 'initializing the joint optimization algorithm'),
('initializing the joint optimization algorithm', 'can be done with', 'greedy pretraining'),
('greedy pretraining', 'is used for', 'supervised learning problems'),
('Bengio et al. (2007)', 'discussed', 'Supervised Pretraining'),
('Simonyan and Zisserman (2015)', 'cited for', 'deep convolutional network'),
('Yu et al. (2010)', 'cited for', 'raw input')"
8.7,7,"('greedy supervised pretraining', 'Bengio et al. (2007)', 'training a sufficiently shallow architecture', 'supervised single hidden layer MLP', 'hidden-to-output layer', 'feedforward network', 'jointly fine-tune', 'layers')","('greedy supervised pretraining', 'can be found in', 'Bengio et al. (2007)'),
('greedy supervised pretraining', 'involves', 'training a sufficiently shallow architecture'),
('training a sufficiently shallow architecture', 'can be a', 'supervised single hidden layer MLP'),
('hidden-to-output layer', 'is a part of', 'feedforward network'),
('greedy supervised pretraining', 'can be used to', 'jointly fine-tune'),
('jointly fine-tune', 'multiple', 'layers')"
8.7,8,"('optimization', 'training', 'deep models', 'pretraining', 'supervised pretraining', 'transfer learning', 'neural networks', 'FitNets', 'Romero et al.', 'teacher network', 'student network', 'SGD', 'middle layer', 'hidden layers', 'classification target', 'wide and shallow network', 'computational cost', 'parameters', 'experiments', 'test set', 'optimization techniques', 'architecture')","('deep models', 'instance of', 'neural networks')
('Romero et al.', 'instance of', 'neural networks')
('FitNets', 'instance of', 'neural networks')
('teacher network', 'instance of', 'neural networks')
('student network', 'instance of', 'neural networks')
('SGD', 'instance of', 'optimization techniques')"
8.7,9,"('optimization', 'training', 'deep models', 'activation functions', 'model family', 'optimization algorithm', 'neural network learning', 'stochastic gradient descent', 'momentum', 'linear transformations', 'rectified linear units', 'maxout units', 'LSTM', 'sigmoidal units', 'gradient flows', 'Jacobian', 'loss function', 'skip connections', 'vanishing gradient problem', 'GoogLeNet', 'deeply-supervised nets', 'pretraining strategies', 'architecture', 'layers')","('deep models', 'instance of', 'neural networks')
('activation functions', 'use', 'neural network learning')
('model family', 'instance of', 'deep models')
('optimization algorithm', 'use', 'neural network learning')
('neural network learning', 'instance of', 'deep models')
('stochastic gradient descent', 'use', 'optimization algorithm')
('momentum', 'use', 'optimization algorithm')
('linear transformations', 'use', 'activation functions')
('rectified linear units', 'subclass of', 'activation functions')
('maxout units', 'subclass of', 'activation functions')
('LSTM', 'instance of', 'neural networks')
('sigmoidal units', 'subclass of', 'activation functions')
('Jacobian', 'relation', 'gradient flows')
('loss function', 'instance of', 'optimization algorithm')
('skip connections', 'use', 'architecture')
('vanishing gradient problem', 'relation', 'neural network learning')
('GoogLeNet', 'instance of', 'deep models')
('deeply-supervised nets', 'subclass of', 'deep models')"
8.7,10,"('optimization', 'training', 'deep models', 'global structure', 'cost function', 'local update directions', 'parameters', 'continuation methods', 'curriculum learning', 'initialization', 'parameter space', 'objective functions', 'random initialization', 'local descent', 'neural network training', 'smoothing', 'simulated annealing', 'local minima', 'global minimum', 'blurring', 'approximating', 'sampling', 'non-convex functions')","('deep models', 'instance of', 'neural networks')
('global structure', 'relation', 'deep models')
('cost function', 'instance of', 'objective functions')
('local update directions', 'relation', 'deep models')
('parameters', 'instance of', 'deep models')
('continuation methods', 'relation', 'optimization')
('curriculum learning', 'relation', 'neural network training')
('initialization', 'relation', 'optimization')
('parameter space', 'relation', 'optimization')
('objective functions', 'instance of', 'optimization')
('random initialization', 'relation', 'initialization')
('local descent', 'relation', 'optimization')
('neural network training', 'relation', 'deep models')
('smoothing', 'relation', 'optimization')
('simulated annealing', 'use', 'optimization')
('local minima', 'relation', 'optimization')
('global minimum', 'relation', 'optimization')
('blurring', 'use', 'smoothing')
('approximating', 'use', 'optimization')
('sampling', 'use', 'optimization')
('non-convex functions', 'relation', 'optimization')"
8.7,11,"('optimization', 'training', 'deep models', 'convex', 'cost functions', 'global minimum', 'NP-hard optimization problems', 'blurring', 'local minimum', 'continuation methods', 'curriculum learning', 'learning process', 'simple concepts', 'complex concepts', 'animal training', 'machine learning', 'neural language modeling task', 'natural language', 'computer vision', 'consistent', 'humans teach')","('deep models', 'instance of', 'neural networks')
('convex', 'relation', 'optimization')
('cost functions', 'instance of', 'objective functions')
('global minimum', 'relation', 'optimization')
('NP-hard optimization problems', 'subclass of', 'optimization')
('blurring', 'use', 'optimization')
('local minimum', 'relation', 'optimization')
('continuation methods', 'relation', 'optimization')
('curriculum learning', 'relation', 'machine learning')
('learning process', 'relation', 'machine learning')
('simple concepts', 'instance of', 'natural language')
('complex concepts', 'instance of', 'natural language')
('animal training', 'relation', 'machine learning')
('machine learning', 'instance of', 'deep models')
('neural language modeling task', 'relation', 'machine learning')
('natural language', 'relation', 'machine learning')
('computer vision', 'relation', 'machine learning')
('consistent', 'relation', 'humans teach')"
8.7,12,"('optimization', 'training', 'deep models', 'curriculum learning', 'prototypical examples', 'decision surface', 'teaching strategies', 'recurrent neural networks', 'long-term dependencies', 'stochastic curriculum', 'deterministic curriculum', 'regularize', 'specializations', 'neural networks', 'scale', 'input data', 'special structure', 'specialized architectures')","('deep models', 'instance of', 'neural networks')
('curriculum learning', 'relation', 'training')
('prototypical examples', 'use', 'curriculum learning')
('decision surface', 'relation', 'curriculum learning')
('teaching strategies', 'relation', 'curriculum learning')
('recurrent neural networks', 'instance of', 'neural networks')
('long-term dependencies', 'relation', 'recurrent neural networks')
('stochastic curriculum', 'instance of', 'curriculum learning')
('deterministic curriculum', 'instance of', 'curriculum learning')
('regularize', 'use', 'training')
('specializations', 'relation', 'training')
('neural networks', 'instance of', 'deep models')
('scale', 'relation', 'input data')
('input data', 'relation', 'neural networks')
('special structure', 'relation', 'neural networks')
('specialized architectures', 'relation', 'neural networks')"
8.7,13,"('Convolutional networks', 'convolutional neural networks', 'CNNs', 'neural network', 'convolution', 'mathematical operation', 'linear operation', 'matrix multiplication', 'pooling', 'neuroscientific principles', 'deep learning')","('Convolutional networks', 'subclass of', 'neural network')
('Convolutional networks', 'use', 'convolutional neural networks')
('Convolutional networks', 'use', 'CNNs')
('convolutional neural networks', 'use', 'neural network')
('convolutional neural networks', 'subclass of', 'deep learning')
('CNNs', 'use', 'neural network')
('CNNs', 'subclass of', 'deep learning')
('neural network', 'use', 'mathematical operation')
('neural network', 'subclass of', 'deep learning')
('convolution', 'use', 'mathematical operation')
('mathematical operation', 'use', 'linear operation')
('linear operation', 'use', 'matrix multiplication')
('pooling', 'use', 'mathematical operation')"
9.1,0,"argument (in this example, the function w) is often referred to as the kernel or filter. The output of the convolution is a new function that represents the combined information from the input and the kernel.

9.2 Pooling Pooling is an operation that reduces the spatial dimensions of the input. It is commonly used in convolutional networks to decrease the size of the feature maps and to introduce some degree of translation invariance into the model. The pooling operation divides the input into equally sized regions (called pooling regions) and replaces each region with a single value, typically the maximum or the average value within that region. This reduces the size of the feature maps while preserving the most salient information.

9.3 Activation Functions Activation functions introduce non-linearity to the network and are applied element-wise to the output of a layer. They determine the output of a neuron given its input. Common activation functions include sigmoid, tanh, and ReLU (Rectified Linear Unit). These functions introduce non-linearities to the network, allowing it to model complex relationships between inputs and outputs.

9.4 Loss Functions Loss functions are used to quantify the difference between the predicted outputs and the true outputs. They measure the error or the cost of the model's predictions. Common loss functions include mean squared error (MSE), categorical cross-entropy, and binary cross-entropy. The choice of loss function depends on the task at hand, such as regression or classification.

9.5 Optimization Algorithms Optimization algorithms are used to update the parameters of the model during training. They determine how the model learns from the data and adjusts its weights and biases to minimize the loss function. Common optimization algorithms include stochastic gradient descent (SGD), Adam, and RMSprop. These algorithms apply different strategies to find the optimal values for the model's parameters.

9.6 Regularization Techniques Regularization techniques help prevent overfitting, which occurs when the model performs well on the training data but poorly on new, unseen data. They introduce additional constraints to the model to prevent it from becoming too complex and to encourage it to generalize well. Common regularization techniques include L1 and L2 regularization, dropout, and early stopping.

9.7 Model Evaluation Model evaluation is the process of assessing the performance of a trained model on unseen data. It involves measuring various metrics such as accuracy, precision, recall, and F1 score. Model evaluation helps determine how well the model generalizes to new examples and whether it is suitable for the intended task.

('Convolutional Networks', 'Convolution Operation', 'Pooling', 'Activation Functions', 'Loss Functions', 'Optimization Algorithms', 'Regularization Techniques', 'Model Evaluation')","('Convolutional Networks', 'instance of', 'Pooling')
('Convolutional Networks', 'instance of', 'Activation Functions')
('Convolutional Networks', 'instance of', 'Loss Functions')
('Convolutional Networks', 'instance of', 'Optimization Algorithms')
('Convolutional Networks', 'instance of', 'Regularization Techniques')
('Convolutional Networks', 'instance of', 'Model Evaluation')
('Pooling', 'instance of', 'Activation Functions')
('Pooling', 'instance of', 'Loss Functions')
('Pooling', 'instance of', 'Optimization Algorithms')
('Pooling', 'instance of', 'Regularization Techniques')
('Pooling', 'instance of', 'Model Evaluation')
('Activation Functions', 'instance of', 'Loss Functions')
('Activation Functions', 'instance of', 'Optimization Algorithms')
('Activation Functions', 'instance of', 'Regularization Techniques')
('Activation Functions', 'instance of', 'Model Evaluation')
('Loss Functions', 'instance of', 'Optimization Algorithms')
('Loss Functions', 'instance of', 'Regularization Techniques')
('Loss Functions', 'instance of', 'Model Evaluation')
('Optimization Algorithms', 'instance of', 'Regularization Techniques')
('Optimization Algorithms', 'instance of', 'Model Evaluation')
('Regularization Techniques', 'instance of', 'Model Evaluation')"
9.1,1,"('Convolutional Networks', 'Convolution Operation', 'Pooling', 'Activation Functions', 'Loss Functions', 'Optimization Algorithms', 'Regularization Techniques', 'Model Evaluation')","('Convolutional Networks', 'instance of', 'Convolution Operation')
('Convolution Operation', 'based on', 'Pooling')
('Convolution Operation', 'based on', 'Activation Functions')
('Convolution Operation', 'based on', 'Loss Functions')
('Convolution Operation', 'based on', 'Optimization Algorithms')
('Convolution Operation', 'based on', 'Regularization Techniques')
('Convolution Operation', 'based on', 'Model Evaluation')"
9.1,2,"('convolutional networks', 'neural network', 'cross-correlation', 'machine learning', 'learning algorithm', 'kernel flipping', 'convolution operation', '2-D tensor', 'discrete convolution', 'Toeplitz matrix', 'block circulant matrix', 'sparse matrix', 'convolutional neural networks')","返回结果如下：

('convolutional networks', 'instance of', 'neural network')
('neural network', 'use', 'cross-correlation')
('cross-correlation', 'instance of', 'machine learning')
('machine learning', 'use', 'learning algorithm')
('learning algorithm', 'use', 'kernel flipping')
('kernel flipping', 'instance of', 'convolution operation')
('convolution operation', 'use', '2-D tensor')
('2-D tensor', 'instance of', 'discrete convolution')
('discrete convolution', 'use', 'Toeplitz matrix')
('Toeplitz matrix', 'instance of', 'block circulant matrix')
('block circulant matrix', 'instance of', 'sparse matrix')
('sparse matrix', 'use', 'convolutional neural networks')"
9.1,3,"('2-D convolution', 'kernel-flipping', 'valid convolution')","返回结果如下：

('2-D convolution', 'instance of', 'kernel-flipping')
('kernel-flipping', 'instance of', 'valid convolution')"
9.2,0,"('sparse interactions', 'parameter sharing', 'equivariant representations', 'variable size', 'convolution', 'machine learning system', 'sparse connectivity', 'sparse weights', 'memory requirements', 'statistical efficiency', 'computation efficiency', 'matrix multiplication', 'runtime', 'sparsely connected approach', 'graphical demonstrations', 'deep convolutional network', 'complicated interactions', 'simple building blocks', 'parameter sharing', 'weight matrix', 'tied weights')","返回结果如下：

('sparse interactions', 'instance of', 'parameter sharing')
('parameter sharing', 'use', 'equivariant representations')
('equivariant representations', 'instance of', 'variable size')
('variable size', 'use', 'convolution')
('convolution', 'use', 'machine learning system')
('machine learning system', 'instance of', 'sparse connectivity')
('sparse connectivity', 'use', 'sparse weights')
('sparse weights', 'use', 'memory requirements')
('memory requirements', 'use', 'statistical efficiency')
('statistical efficiency', 'use', 'computation efficiency')
('computation efficiency', 'use', 'matrix multiplication')
('matrix multiplication', 'instance of', 'runtime')
('runtime', 'use', 'sparsely connected approach')
('sparsely connected approach', 'instance of', 'graphical demonstrations')
('graphical demonstrations', 'use', 'deep convolutional network')
('deep convolutional network', 'use', 'complicated interactions')
('complicated interactions', 'use', 'simple building blocks')
('simple building blocks', 'use', 'parameter sharing')
('parameter sharing', 'use', 'weight matrix')
('weight matrix', 'instance of', 'tied weights')"
9.2,1,"('sparse connectivity', 'convolution', 'kernel', 'matrix multiplication')","返回结果如下：

('sparse connectivity', 'use', 'convolution')
('convolution', 'use', 'kernel')
('kernel', 'instance of', 'matrix multiplication')"
9.2,2,"('sparse connectivity', 'convolution', 'kernel', 'matrix multiplication', 'receptive field', 'deeper layers', 'shallow layers', 'strided convolution', 'pooling', 'indirect connections', 'input image')","返回结果如下：

('sparse connectivity', 'use', 'convolution')
('convolution', 'use', 'kernel')
('kernel', 'instance of', 'matrix multiplication')
('receptive field', 'instance of', 'deeper layers')
('deeper layers', 'instance of', 'shallow layers')
('shallow layers', 'use', 'strided convolution')
('strided convolution', 'use', 'pooling')
('pooling', 'use', 'indirect connections')
('indirect connections', 'use', 'input image')"
9.2,3,"('Convolutional Networks', 'Parameter sharing', '3-element kernel', 'convolutional model', 'weight matrix', 'fully connected model', 'forward propagation', 'memory requirements', 'statistical efficiency', 'linear function', 'detecting edges', 'equivariance to translation', 'function f(x)', 'function g', 'input changes', 'output changes', 'function g(x)', 'convolution function')","('Convolutional Networks', 'Parameter sharing', '3-element kernel')
('convolutional model', 'instance of', 'Convolutional Networks')
('weight matrix', 'use', 'convolutional model')
('fully connected model', 'subclass of', 'convolutional model')
('forward propagation', 'part of', 'fully connected model')
('memory requirements', 'based on', 'forward propagation')
('statistical efficiency', 'facet of', 'forward propagation')
('linear function', 'use', 'statistical efficiency')
('detecting edges', 'use', 'linear function')
('equivariance to translation', 'use', 'detecting edges')
('function f(x)', 'instance of', 'linear function')
('function g', 'use', 'function f(x)')
('input changes', 'based on', 'function g')
('output changes', 'based on', 'function g')
('function g(x)', 'subclass of', 'linear function')
('convolution function', 'use', '3-element kernel')"
9.3,0,"('image function', 'I = g(I)', 'transformation g', 'time series data', 'convolution', 'timeline', 'features', 'images', '2-D map', 'parameters', 'individual’s face', 'scale', 'rotation', 'neural networks', 'matrix multiplication', 'fixed-shape matrix', 'Pooling', 'convolutional network', 'linear activations', 'nonlinear activation function', 'pooling function', 'max pooling')","('image function', 'instance of', 'convolution')
('I = g(I)', 'use', 'image function')
('transformation g', 'instance of', 'image function')
('time series data', 'instance of', 'matrix multiplication')
('convolution', 'based on', 'time series data')
('timeline', 'instance of', 'time series data')
('features', 'based on', 'timeline')
('images', 'facet of', 'features')
('2-D map', 'part of', 'images')
('parameters', 'use', '2-D map')
('individual’s face', 'instance of', 'images')
('scale', 'use', 'individual’s face')
('rotation', 'use', 'individual’s face')
('neural networks', 'instance of', 'matrix multiplication')
('matrix multiplication', 'facet of', 'neural networks')
('fixed-shape matrix', 'instance of', 'matrix multiplication')
('Pooling', 'use', 'matrix multiplication')
('convolutional network', 'instance of', 'Pooling')
('linear activations', 'part of', 'convolutional network')
('nonlinear activation function', 'part of', 'convolutional network')
('pooling function', 'use', 'Pooling')
('max pooling', 'subclass of', 'pooling function')"
9.3,1,"('Efficiency of edge detection', 'original image', 'neighboring pixel', 'vertically oriented edges', 'object detection', 'input image', 'output image', 'convolution kernel', 'floating point operations', 'multiplications', 'addition per output pixel', 'matrix multiplication', 'entries in the matrix', 'representing this transformation', 'matrix multiplication algorithm', 'nonzero entries', 'number of floating point operations', 'linear transformation', 'local region', 'entire input', 'Photo credit: Paula Goodfellow')","('Efficiency of edge detection', 'instance of', 'object detection')
('original image', 'instance of', 'input image')
('neighboring pixel', 'use', 'original image')
('vertically oriented edges', 'instance of', 'neighboring pixel')
('object detection', 'use', 'original image')
('input image', 'facet of', 'object detection')
('output image', 'instance of', 'object detection')
('convolution kernel', 'use', 'object detection')
('floating point operations', 'based on', 'convolution kernel')
('multiplications', 'use', 'floating point operations')
('addition per output pixel', 'use', 'floating point operations')
('matrix multiplication', 'instance of', 'multiplications')
('entries in the matrix', 'use', 'matrix multiplication')
('representing this transformation', 'part of', 'entries in the matrix')
('matrix multiplication algorithm', 'based on', 'matrix multiplication')
('nonzero entries', 'use', 'entries in the matrix')
('number of floating point operations', 'based on', 'nonzero entries')
('linear transformation', 'instance of', 'matrix multiplication algorithm')
('local region', 'part of', 'linear transformation')
('entire input', 'based on', 'local region')"
9.3,2,"('Complex layer terminology', 'Simple layer terminology', 'Next layer', 'Convolutional Layer', 'Pooling stage', 'Pooling layer', 'Detector stage', 'Detector layer', 'Nonlinearity', 'rectified linear', 'Convolution stage', 'Convolution layer', 'Affine transform', 'Input to layer', 'The components of a typical convolutional neural network layer', 'kernel tensors', 'network layers', 'every step of processing', 'not every layer has parameters')","('Complex layer terminology', 'instance of', 'Convolutional Layer')
('Simple layer terminology', 'use', 'Complex layer terminology')
('Next layer', 'based on', 'Complex layer terminology')
('Convolutional Layer', 'use', 'Pooling layer')
('Pooling stage', 'part of', 'Pooling layer')
('Pooling layer', 'instance of', 'Detector layer')
('Detector stage', 'part of', 'Detector layer')
('Detector layer', 'instance of', 'Nonlinearity')
('Nonlinearity', 'use', 'rectified linear')
('rectified linear', 'use', 'Convolution layer')
('Convolution stage', 'part of', 'Convolution layer')
('Convolution layer', 'instance of', 'Affine transform')
('Affine transform', 'use', 'Input to layer')
('Input to layer', 'part of', 'The components of a typical convolutional neural network layer')
('The components of a typical convolutional neural network layer', 'facet of', 'Convolution layer')
('kernel tensors', 'facet of', 'The components of a typical convolutional neural network layer')
('network layers', 'use', 'The components of a typical convolutional neural network layer')
('every step of processing', 'based on', 'network layers')
('not every layer has parameters', 'based on', 'network layers')"
9.3,3,"('Chellappa', 'operation', 'maximum output', 'rectangular neighborhood', 'pooling functions', 'average of a rectangular neighborhood', 'L2 norm of a rectangular neighborhood', 'weighted average', 'invariance to small translations', 'invariant to local translation', 'whether some feature is present', 'location of the eyes', 'location of a feature', 'corner defined by two edges', 'statistical efficiency', 'pooling over spatial regions', 'fewer pooling units', 'detector units', 'summary statistics', 'pooling regions spaced k pixels apart', 'computational efficiency', 'number of parameters', 'fully connected layer', 'matrix multiplication', 'reduction in the input size', 'memory requirements', 'classifying images', 'input size', 'offset between pooling regions', 'classification layer', 'summary statistics', 'final pooling layer', 'quadrant of an image')","('Chellappa', 'instance of', 'operation')
('maximum output', 'use', 'operation')
('rectangular neighborhood', 'facet of', 'pooling functions')
('pooling functions', 'based on', 'operation')
('average of a rectangular neighborhood', 'use', 'pooling functions')
('L2 norm of a rectangular neighborhood', 'use', 'pooling functions')
('weighted average', 'use', 'pooling functions')
('invariance to small translations', 'part of', 'invariant to local translation')
('invariant to local translation', 'use', 'pooling functions')
('whether some feature is present', 'based on', 'pooling functions')
('location of the eyes', 'instance of', 'whether some feature is present')
('location of a feature', 'instance of', 'whether some feature is present')
('corner defined by two edges', 'instance of', 'whether some feature is present')
('statistical efficiency', 'instance of', 'summary statistics')
('pooling over spatial regions', 'use', 'summary statistics')
('fewer pooling units', 'based on', 'pooling over spatial regions')
('detector units', 'use', 'fewer pooling units')
('summary statistics', 'instance of', 'pooling over spatial regions')
('pooling regions spaced k pixels apart', 'use', 'pooling over spatial regions')
('computational efficiency', 'based on', 'pooling regions spaced k pixels apart')
('number of parameters', 'based on', 'computational efficiency')
('fully connected layer', 'based on', 'number of parameters')
('matrix multiplication', 'part of', 'fully connected layer')
('reduction in the input size', 'based on', 'matrix multiplication')
('memory requirements', 'based on', 'matrix multiplication')
('classifying images', 'instance of', 'reduction in the input size')
('input size', 'facet of', 'classifying images')
('offset between pooling regions', 'facet of', 'pooling regions spaced k pixels apart')
('classification layer', 'instance of', 'classifying images')
('summary statistics', 'part of', 'final pooling layer')
('final pooling layer', 'instance of', 'pooling over spatial regions')
('quadrant of an image', 'facet of', 'final pooling layer')"
9.3,4,"('CONVOLUTIONAL NETWORKS', 'POOLING STAGE', 'DETECTOR STAGE', 'MAX POOLING')","('CONVOLUTIONAL NETWORKS', 'part of', 'POOLING STAGE')
('CONVOLUTIONAL NETWORKS', 'part of', 'DETECTOR STAGE')
('POOLING STAGE', 'instance of', 'MAX POOLING')"
9.3,5,"('convolutional networks', 'pooling unit', 'detector unit', 'max pooling unit', 'rotation', 'filters', 'hand-written 5', 'activation', 'maxout networks', 'Goodfellow et al., 2013a', 'spatial positions', 'translation', 'downsampling', 'representation size', 'computational burden', 'statistical burden', 'next layer')","('convolutional networks', 'instance of', 'pooling unit')
('pooling unit', 'instance of', 'detector unit')
('detector unit', 'instance of', 'max pooling unit')
('rotation', 'instance of', 'filters')
('hand-written 5', 'instance of', 'activation')
('maxout networks', 'instance of', 'Goodfellow et al., 2013a')
('spatial positions', 'instance of', 'translation')
('downsampling', 'instance of', 'representation size')
('computational burden', 'instance of', 'statistical burden')"
9.4,0,"('theoretical work', 'pooling', 'clustering algorithm', 'pooling structure', 'top-down information', 'Boltzmann machines', 'autoencoders', 'convolutional Boltzmann machines', 'differentiable networks', 'convolution and pooling', 'prior probability distribution', 'weak prior', 'strong prior', 'infinitely strong prior', 'convolutional net', 'fully connected net', 'hidden unit', 'weights', 'receptive field')","('pooling', 'instance of', 'clustering algorithm')
('pooling structure', 'instance of', 'top-down information')
('Boltzmann machines', 'instance of', 'autoencoders')
('convolutional Boltzmann machines', 'instance of', 'differentiable networks')
('convolution and pooling', 'instance of', 'prior probability distribution')
('weak prior', 'instance of', 'strong prior')
('strong prior', 'instance of', 'infinitely strong prior')
('convolutional net', 'instance of', 'fully connected net')
('hidden unit', 'instance of', 'weights')
('receptive field', 'instance of', 'convolution and pooling')"
9.4,1,"('softmax', 'matrix', 'average', 'multiply', 'pooling', 'reshape', 'vector', 'convolution', 'ReLU', 'pooling', 'input image', 'architectures', 'classification', 'convolutional network', 'fixed image size', 'convolutional feature map', 'spatial dimensions', 'feedforward network classifier', 'variable-sized image', 'fully connected section', 'fixed-size vector', 'fully connected weight layer', 'last convolutional layer', 'feature map', 'softmax classifier')","('softmax', 'part of', 'matrix')
('pooling', 'based on', 'matrix')
('reshape', 'based on', 'vector')
('convolution', 'based on', 'matrix')
('ReLU', 'based on', 'matrix')
('pooling', 'based on', 'matrix')
('input image', 'part of', 'architectures')
('classification', 'based on', 'architectures')
('classification', 'part of', 'feedforward network classifier')
('convolutional network', 'based on', 'architectures')
('fixed image size', 'based on', 'variable-sized image')
('convolutional feature map', 'based on', 'spatial dimensions')
('fully connected section', 'based on', 'convolutional feature map')
('fixed-size vector', 'based on', 'fully connected weight layer')
('last convolutional layer', 'based on', 'feature map')
('softmax classifier', 'based on', 'last convolutional layer')"
9.5,0,"('convolutional networks', 'local interactions', 'translation equivariant', 'pooling', 'invariant to translations', 'underfitting', 'convolutional net', 'fully connected net', 'computational wasteful', 'insights', 'task relies on preserving precise spatial information', 'Szegedy et al., 2014a', 'translation invariance prior', 'statistical learning performance', 'convolutional models', 'benchmarks', 'permutation invariant', 'discrete convolution operation', 'neural networks', 'many applications of convolution', 'single kernel', 'many kinds of features', 'many locations')","('convolutional networks', 'based on', 'local interactions')
('convolutional networks', 'based on', 'translation equivariant')
('pooling', 'based on', 'convolutional networks')
('pooling', 'based on', 'invariant to translations')
('underfitting', 'based on', 'convolutional networks')
('convolutional net', 'subclass of', 'neural networks')
('fully connected net', 'subclass of', 'neural networks')
('computational wasteful', 'based on', 'fully connected net')
('insights', 'part of', 'convolutional networks')
('task relies on preserving precise spatial information', 'based on', 'convolutional networks')
('Szegedy et al., 2014a', 'part of', 'convolutional networks')
('translation invariance prior', 'part of', 'convolutional networks')
('statistical learning performance', 'based on', 'convolutional models')
('benchmarks', 'based on', 'statistical learning performance')
('permutation invariant', 'based on', 'discrete convolution operation')
('discrete convolution operation', 'based on', 'neural networks')
('many applications of convolution', 'based on', 'neural networks')
('single kernel', 'subclass of', 'neural networks')
('many kinds of features', 'part of', 'neural networks')
('many locations', 'part of', 'neural networks')"
9.5,1,"('convolutional networks', 'grid of vector-valued observations', 'color image', 'multilayer convolutional network', 'input to the second layer', 'output of the first layer', 'output of many different convolutions', 'input and output of the convolution', '3-D tensors', 'two indices into the spatial coordinates', 'batch mode', '4-D tensors', 'kernel-flipping', 'linear operations', 'commutative', 'output channels', 'connection strength', 'offset of rows and columns', 'observed data', 'convolving', 'element V', 'element K', 'summation over l, m and n', 'linear algebra notation', 'index starting from 0', 'computational cost', 'downsampling the output', 'downsampled convolution function', 'stride of this downsampled convolution')","('convolutional networks', 'instance of', 'grid of vector-valued observations')
('color image', 'instance of', 'multilayer convolutional network')
('multilayer convolutional network', 'part of', 'input to the second layer')
('output of the first layer', 'part of', 'output of many different convolutions')
('input and output of the convolution', 'part of', '3-D tensors')
('3-D tensors', 'part of', 'two indices into the spatial coordinates')
('batch mode', 'part of', '4-D tensors')
('kernel-flipping', 'use', 'linear operations')
('commutative', 'based on', 'linear algebra notation')
('output channels', 'instance of', 'connection strength')
('offset of rows and columns', 'based on', 'observed data')
('convolving', 'based on', 'element V')
('convolving', 'based on', 'element K')
('summation over l, m and n', 'part of', 'linear algebra notation')
('index starting from 0', 'part of', 'linear algebra notation')
('computational cost', 'based on', 'linear operations')
('downsampling the output', 'use', 'downsampled convolution function')
('downsampling the output', 'based on', 'stride of this downsampled convolution')"
9.5,2,"('Convolutional Networks', 'illustration', 'kernel', 'implementation', 'input', 'width', 'representation', 'zero padding', 'size', 'output', 'spatial extent', 'expressive power', 'example', 'zero-padding setting', 'valid convolution', 'MATLAB', 'pixels', 'network', 'convolutional layers', 'dimension', 'border', 'model', 'full convolution', 'feature map', 'test set classification accuracy')","('Convolutional Networks', 'illustration', 'kernel')
('Convolutional Networks', 'implementation', 'input')
('Convolutional Networks', 'implementation', 'width')
('Convolutional Networks', 'implementation', 'representation')
('Convolutional Networks', 'implementation', 'zero padding')
('Convolutional Networks', 'representation', 'size')
('Convolutional Networks', 'width', 'output')
('Convolutional Networks', 'width', 'spatial extent')
('Convolutional Networks', 'zero padding', 'expressive power')
('Convolutional Networks', 'zero padding', 'example')
('Convolutional Networks', 'zero-padding setting', 'valid convolution')
('Convolutional Networks', 'zero-padding setting', 'MATLAB')
('Convolutional Networks', 'size', 'pixels')
('Convolutional Networks', 'input', 'network')
('Convolutional Networks', 'input', 'convolutional layers')
('Convolutional Networks', 'input', 'dimension')
('Convolutional Networks', 'representation', 'border')
('Convolutional Networks', 'border', 'model')
('Convolutional Networks', 'width', 'border')
('Convolutional Networks', 'zero padding', 'model')
('Convolutional Networks', 'size', 'model')
('Convolutional Networks', 'zero padding', 'full convolution')
('Convolutional Networks', 'border', 'feature map')
('Convolutional Networks', 'model', 'test set classification accuracy')"
9.5,3,"('CHAPTER 9', 'Convolutional Networks', 'Strided Convolution', 'Downsampling', 'Convolution', 'Figure 9.12', 'stride', 'operation', 'pixel', 'mathematically equivalent', 'downsampling', 'two-step approach', 'computational wasteful')","[('Convolutional Networks', 'instance of', 'CHAPTER 9'),
 ('Strided Convolution', 'instance of', 'Convolutional Networks'),
 ('Downsampling', 'instance of', 'Strided Convolution'),
 ('Convolution', 'instance of', 'Strided Convolution'),
 ('Figure 9.12', 'instance of', 'CHAPTER 9'),
 ('stride', 'instance of', 'Convolution'),
 ('operation', 'instance of', 'Convolution'),
 ('pixel', 'instance of', 'operation'),
 ('mathematically equivalent', 'instance of', 'operation'),
 ('downsampling', 'instance of', 'operation'),
 ('two-step approach', 'instance of', 'operation'),
 ('computational wasteful', 'instance of', 'operation')]"
9.5,4,"('CHAPTER 9', 'Convolutional Networks', 'Figure 9.13', 'zero padding', 'network size', 'convolutional network', 'kernel', 'pooling', 'convolution operation', 'shrink', 'pixels', 'layers', 'rate of shrinking', 'smaller kernels', 'expressive', 'architecture', 'implicit zeroes', 'depth')","[('Convolutional Networks', 'instance of', 'CHAPTER 9'),
 ('Figure 9.13', 'instance of', 'CHAPTER 9'),
 ('zero padding', 'instance of', 'Figure 9.13'),
 ('network size', 'instance of', 'convolutional network'),
 ('convolutional network', 'instance of', 'CHAPTER 9'),
 ('kernel', 'instance of', 'convolution operation'),
 ('pooling', 'instance of', 'kernel'),
 ('convolution operation', 'instance of', 'convolutional network'),
 ('shrink', 'instance of', 'convolution operation'),
 ('pixels', 'instance of', 'shrink'),
 ('layers', 'instance of', 'convolutional network'),
 ('rate of shrinking', 'instance of', 'shrink'),
 ('smaller kernels', 'instance of', 'convolutional network'),
 ('expressive', 'instance of', 'convolutional network'),
 ('architecture', 'instance of', 'convolutional network'),
 ('implicit zeroes', 'instance of', 'convolutional network'),
 ('depth', 'instance of', 'convolutional network')]"
9.5,5,"('CHAPTER 9', 'Convolutional Networks', 'locally connected layers', 'adjacency matrix', 'MLP', 'connection', 'weight', '6-D tensor', 'indices', 'linear part', 'unshared convolution', 'discrete convolution', 'kernel', 'sharing parameters', 'local connections', 'full connections', 'feature', 'space', 'image', 'face', 'mouth', 'bottom half', 'output channels', 'input channels', 'memory consumption', 'statistical efficiency', 'computation', 'forward-propagation', 'back-propagation', 'hidden units', 'tiled convolution', 'kernels', 'spatial location', 'output feature map')","[('Convolutional Networks', 'instance of', 'CHAPTER 9'),
 ('locally connected layers', 'instance of', 'Convolutional Networks'),
 ('adjacency matrix', 'instance of', 'locally connected layers'),
 ('MLP', 'instance of', 'locally connected layers'),
 ('connection', 'instance of', 'locally connected layers'),
 ('weight', 'instance of', 'connection'),
 ('6-D tensor', 'instance of', 'weight'),
 ('indices', 'instance of', 'connection'),
 ('linear part', 'instance of', 'weight'),
 ('unshared convolution', 'instance of', 'connection'),
 ('discrete convolution', 'instance of', 'unshared convolution'),
 ('kernel', 'instance of', 'discrete convolution'),
 ('sharing parameters', 'instance of', 'unshared convolution'),
 ('local connections', 'instance of', 'locally connected layers'),
 ('full connections', 'instance of', 'locally connected layers'),
 ('feature', 'instance of', 'locally connected layers'),
 ('space', 'instance of', 'feature'),
 ('image', 'instance of', 'space'),
 ('face', 'instance of', 'image'),
 ('mouth', 'instance of', 'face'),
 ('bottom half', 'instance of', 'face'),
 ('output channels', 'instance of', 'feature'),
 ('input channels', 'instance of', 'feature'),
 ('memory consumption', 'instance of', 'locally connected layers'),
 ('statistical efficiency', 'instance of', 'locally connected layers'),
 ('computation', 'instance of', 'locally connected layers'),
 ('forward-propagation', 'instance of', 'computation'),
 ('back-propagation', 'instance of', 'computation'),
 ('hidden units', 'instance of', 'computation'),
 ('tiled convolution', 'instance of', 'computation'),
 ('kernels', 'instance of', 'tiled convolution'),
 ('spatial location', 'instance of', 'tiled convolution'),
 ('output feature map', 'instance of', 'tiled convolution')]"
9.5,6,"('CHAPTER 9', 'Convolutional Networks', 'Figure 9.14', 'local connections', 'convolution', 'full connections', 'locally connected layer', 'patch size', 'pixels', 'edge', 'weight parameter', 'convolutional layer', 'kernel width', 'connectivity', 'parameter sharing', 'repetition', 'fully connected layer', 'restricted connectivity')","[('Convolutional Networks', 'instance of', 'CHAPTER 9'),
 ('Figure 9.14', 'instance of', 'CHAPTER 9'),
 ('local connections', 'instance of', 'Figure 9.14'),
 ('convolution', 'instance of', 'local connections'),
 ('full connections', 'instance of', 'Figure 9.14'),
 ('locally connected layer', 'instance of', 'local connections'),
 ('patch size', 'instance of', 'locally connected layer'),
 ('pixels', 'instance of', 'patch size'),
 ('edge', 'instance of', 'pixels'),
 ('weight parameter', 'instance of', 'edge'),
 ('convolutional layer', 'instance of', 'local connections'),
 ('kernel width', 'instance of', 'convolution'),
 ('connectivity', 'instance of', 'convolutional layer'),
 ('parameter sharing', 'instance of', 'convolutional layer'),
 ('repetition', 'instance of', 'convolutional layer'),
 ('fully connected layer', 'instance of', 'convolutional layer'),
 ('restricted connectivity', 'instance of', 'fully connected layer')]"
9.5,7,"('CHAPTER 9', 'Convolutional Networks', 'Figure 9.15', 'convolutional network', 'output channels', 'input channels', 'spatial coordinates')","[('Convolutional Networks', 'instance of', 'CHAPTER 9'),
 ('Figure 9.15', 'instance of', 'CHAPTER 9'),
 ('convolutional network', 'instance of', 'Figure 9.15'),
 ('output channels', 'instance of', 'convolutional network'),
 ('input channels', 'instance of', 'convolutional network'),
 ('spatial coordinates', 'instance of', 'convolutional network')]"
9.5,8,"('CONVOLUTIONAL NETWORKS', 'kernel', 'pixels', 'layers', 'connections', 'weights')","('CONVOLUTIONAL NETWORKS', 'based on', 'CONVOLUTIONAL NETWORKS')
('CONVOLUTIONAL NETWORKS', 'facet of', 'CONVOLUTIONAL NETWORKS')
('CONVOLUTIONAL NETWORKS', 'part of', 'CONVOLUTIONAL NETWORKS')
('CONVOLUTIONAL NETWORKS', 'instance of', 'CONVOLUTIONAL NETWORKS')
('CONVOLUTIONAL NETWORKS', 'subject of', 'CONVOLUTIONAL NETWORKS')
('CONVOLUTIONAL NETWORKS', 'subclass of', 'CONVOLUTIONAL NETWORKS')
('CONVOLUTIONAL NETWORKS', 'use', 'CONVOLUTIONAL NETWORKS')
('kernel', 'based on', 'kernel')
('pixels', 'based on', 'pixels')
('layers', 'based on', 'layers')
('connections', 'based on', 'connections')
('weights', 'based on', 'weights')
('CONVOLUTIONAL NETWORKS', 'part of', 'pixels')
('CONVOLUTIONAL NETWORKS', 'subject of', 'pixels')
('CONVOLUTIONAL NETWORKS', 'subclass of', 'pixels')
('kernel', 'based on', 'pixels')
('kernel', 'part of', 'pixels')
('kernel', 'use', 'pixels')
('pixels', 'based on', 'CONVOLUTIONAL NETWORKS')
('pixels', 'part of', 'CONVOLUTIONAL NETWORKS')
('pixels', 'use', 'CONVOLUTIONAL NETWORKS')
('layers', 'based on', 'CONVOLUTIONAL NETWORKS')
('layers', 'part of', 'CONVOLUTIONAL NETWORKS')
('layers', 'use', 'CONVOLUTIONAL NETWORKS')
('connections', 'based on', 'CONVOLUTIONAL NETWORKS')
('connections', 'part of', 'CONVOLUTIONAL NETWORKS')
('connections', 'use', 'CONVOLUTIONAL NETWORKS')
('weights', 'based on', 'CONVOLUTIONAL NETWORKS')
('weights', 'part of', 'CONVOLUTIONAL NETWORKS')
('weights', 'use', 'CONVOLUTIONAL NETWORKS')"
9.5,9,"('tiled convolution', 'locally connected layer', 'max-pooling', 'convolutional network', 'convolution', 'matrix multiplication', 'back-propagate', 'error derivatives', 'hidden layer', 'transpose convolution', 'visible units', 'autoencoders', 'RBMs', 'sparse coding')","('tiled convolution', 'based on', 'tiled convolution')
('locally connected layer', 'based on', 'locally connected layer')
('max-pooling', 'based on', 'max-pooling')
('convolutional network', 'based on', 'convolutional network')
('convolution', 'based on', 'convolution')
('matrix multiplication', 'based on', 'matrix multiplication')
('back-propagate', 'based on', 'back-propagate')
('error derivatives', 'based on', 'error derivatives')
('hidden layer', 'based on', 'hidden layer')
('transpose convolution', 'based on', 'transpose convolution')
('visible units', 'based on', 'visible units')
('autoencoders', 'based on', 'autoencoders')
('RBMs', 'based on', 'RBMs')
('sparse coding', 'based on', 'sparse coding')
('tiled convolution', 'part of', 'tiled convolution')
('locally connected layer', 'part of', 'locally connected layer')
('max-pooling', 'part of', 'max-pooling')
('convolutional network', 'part of', 'convolutional network')
('convolution', 'part of', 'convolution')
('matrix multiplication', 'part of', 'matrix multiplication')
('back-propagate', 'part of', 'back-propagate')
('error derivatives', 'part of', 'error derivatives')
('hidden layer', 'part of', 'hidden layer')
('transpose convolution', 'part of', 'transpose convolution')
('visible units', 'part of', 'visible units')
('autoencoders', 'part of', 'autoencoders')
('RBMs', 'part of', 'RBMs')
('sparse coding', 'part of', 'sparse coding')
('tiled convolution', 'use', 'tiled convolution')
('locally connected layer', 'use', 'locally connected layer')
('max-pooling', 'use', 'max-pooling')
('convolutional network', 'use', 'convolutional network')
('convolution', 'use', 'convolution')
('matrix multiplication', 'use', 'matrix multiplication')
('back-propagate', 'use', 'back-propagate')
('error derivatives', 'use', 'error derivatives')
('hidden layer', 'use', 'hidden layer')
('transpose convolution', 'use', 'transpose convolution')
('visible units', 'use', 'visible units')
('autoencoders', 'use', 'autoencoders')
('RBMs', 'use', 'RBMs')
('sparse coding', 'use', 'sparse coding')"
9.5,10,"('convolutional networks', 'forward propagation', 'transpose operation', 'zero padding policy', 'stride', 'output map', 'convolution', 'backpropagation', 'gradients', 'feedforward convolutional network', 'reconstruction functions', 'equations', 'loss function', 'kernel', 'network', 'derivative', 'weights', 'bottom layer', 'error', 'autoencoder networks', 'PCA algorithm')","('convolutional networks', 'subclass of', 'neural networks')
('forward propagation', 'part of', 'neural networks')
('transpose operation', 'use', 'matrix transposition')
('zero padding policy', 'use', 'padding')
('stride', 'facet of', 'convolution')
('output map', 'part of', 'convolutional networks')
('convolution', 'instance of', 'operation')
('backpropagation', 'part of', 'training algorithms')
('gradients', 'part of', 'backpropagation')
('feedforward convolutional network', 'subclass of', 'convolutional networks')
('reconstruction functions', 'part of', 'autoencoder networks')
('equations', 'part of', 'mathematics')
('loss function', 'part of', 'machine learning')
('kernel', 'instance of', 'matrix')
('network', 'instance of', 'system')
('derivative', 'part of', 'calculus')
('weights', 'part of', 'neural networks')
('bottom layer', 'part of', 'neural networks')
('error', 'part of', 'evaluation')
('autoencoder networks', 'subclass of', 'neural networks')
('PCA algorithm', 'instance of', 'dimensionality reduction algorithm')"
9.6,0,"('autoencoder', 'weight matrix', 'convolution', 'hidden units', 'reconstruction', 'gradient', 'decoder', 'encoder', 'linear operation', 'bias term', 'parameters', 'locally connected layers', 'tiling pattern', 'kernels', 'convolution map', 'output map', 'structured outputs', 'classification task', 'regression task', 'tensor', 'probability', 'pixel', 'class')","('autoencoder', 'instance of', 'neural network')
('weight matrix', 'part of', 'neural network')
('convolution', 'part of', 'neural network')
('hidden units', 'part of', 'neural network')
('reconstruction', 'part of', 'autoencoder')
('gradient', 'part of', 'backpropagation')
('decoder', 'part of', 'autoencoder')
('encoder', 'part of', 'autoencoder')
('linear operation', 'part of', 'neural network')
('bias term', 'part of', 'neural network')
('parameters', 'part of', 'neural network')
('locally connected layers', 'part of', 'neural network')
('tiling pattern', 'part of', 'convolution')
('kernels', 'part of', 'convolution')
('convolution map', 'part of', 'neural network')
('output map', 'part of', 'neural network')
('structured outputs', 'part of', 'machine learning')
('classification task', 'part of', 'machine learning')
('regression task', 'part of', 'machine learning')
('tensor', 'part of', 'mathematics')
('probability', 'part of', 'statistics')
('pixel', 'part of', 'image')
('class', 'part of', 'classification')"
9.6,1,"('recurrent convolutional network', 'pixel labeling', 'image tensor', 'axes', 'labels', 'probability distribution', 'classes', 'convolution kernels', 'hidden representation', 'parameters', 'hidden layer', 'pooling layers', 'stride', 'output map', 'pooling operator', 'refinement step', 'interactions', 'neighboring pixels', 'deep net', 'computation', 'successive convolutional layers')","('recurrent convolutional network', 'subclass of', 'convolutional networks')
('pixel labeling', 'part of', 'image segmentation')
('image tensor', 'part of', 'machine learning')
('axes', 'part of', 'coordinate system')
('labels', 'part of', 'supervised learning')
('probability distribution', 'part of', 'statistics')
('classes', 'part of', 'classification')
('convolution kernels', 'part of', 'convolutional networks')
('hidden representation', 'part of', 'neural networks')
('parameters', 'part of', 'model')
('hidden layer', 'part of', 'neural networks')
('pooling layers', 'part of', 'convolutional networks')
('stride', 'part of', 'convolution')
('output map', 'part of', 'convolutional networks')
('pooling operator', 'use', 'pooling')
('refinement step', 'part of', 'image segmentation')
('interactions', 'part of', 'neural networks')
('neighboring pixels', 'part of', 'image processing')
('deep net', 'instance of', 'neural networks')
('computation', 'part of', 'computer science')
('successive convolutional layers', 'part of', 'convolutional networks')"
9.7,0,"('segmentation', 'image', 'regions', 'graphical models', 'training objective', 'data types', 'channels', 'spatial dimensions', 'video', 'varying spatial extents', 'computational cost', 'overfitting', 'collection of images', 'weight matrix', 'convolution', 'kernel', 'matrix multiplication', 'doubly block circulant matrix', 'class label', 'pooling layer', 'pooled outputs', 'strategy')","('segmentation', 'part of', 'image processing')
('image', 'part of', 'computer vision')
('regions', 'part of', 'image segmentation')
('graphical models', 'part of', 'machine learning')
('training objective', 'part of', 'machine learning')
('data types', 'part of', 'programming')
('channels', 'part of', 'image representation')
('spatial dimensions', 'part of', 'geometry')
('video', 'part of', 'computer vision')
('varying spatial extents', 'facet of', 'image processing')
('computational cost', 'facet of', 'algorithm design')
('overfitting', 'facet of', 'machine learning')
('collection of images', 'part of', 'datasets')
('weight matrix', 'part of', 'neural networks')
('convolution', 'part of', 'neural networks')
('kernel', 'part of', 'convolution')
('matrix multiplication', 'use', 'linear algebra')
('doubly block circulant matrix', 'instance of', 'matrix')
('class label', 'part of', 'classification')
('pooling layer', 'part of', 'convolutional networks')
('pooled outputs', 'part of', 'convolutional networks')
('strategy', 'part of', 'decision-making')"
9.7,1,"('Convolutional Networks', '1-D Audio waveform', 'Skeleton animation data', '3-D computer-rendered', 'pose', 'character', 'skeleton', 'convolutional model', 'angle', 'joint', '2-D Audio data', 'Color image data', 'red pixels', 'green pixels', 'blue pixels', 'convolution kernel', 'image', 'translation', 'frequency axis', 'melody', 'octave', 'representation', ""network's output"", '3-D Volumetric data', 'Color video data', 'time', 'height', 'video frame', 'CT scans')","('Convolutional Networks', 'instance of', '1-D Audio waveform')
('Convolutional Networks', 'instance of', 'Skeleton animation data')
('Convolutional Networks', 'instance of', '3-D computer-rendered')
('pose', 'partition of', 'character')
('pose', 'partition of', 'skeleton')
('convolutional model', 'instance of', 'angle')
('convolutional model', 'instance of', 'joint')
('2-D Audio data', 'instance of', 'Color image data')
('red pixels', 'based on', 'Color image data')
('green pixels', 'based on', 'Color image data')
('blue pixels', 'based on', 'Color image data')
('convolution kernel', 'instance of', 'image')
('translation', 'instance of', 'frequency axis')
('melody', 'instance of', 'frequency axis')
('melody', 'instance of', 'octave')
(""network's output"", 'instance of', 'representation')
('Color video data', 'instance of', '3-D Volumetric data')
('time', 'partition of', 'height')
('video frame', 'partition of', 'height')
('video frame', 'partition of', 'Color video data')
('CT scans', 'based on', 'video frame')"
9.8,0,"('Convolutional Networks', 'variable sized inputs', 'observations', 'recordings over time', 'observations over space', 'college applications', 'grades', 'standardized test scores', 'input', 'convolve', 'weights', 'features', 'efficient convolution algorithms', 'modern convolutional network applications', 'more than one million units', 'parallel computation resources', 'convolution algorithm', 'frequency domain', 'Fourier transform', 'point-wise multiplication', 'time domain', 'inverse Fourier transform', 'discrete convolution', 'd-dimensional kernel', 'outer product', 'separable convolution', 'one-dimensional convolutions', 'composed approach', 'parameter storage space', 'multidimensional convolution', 'runtime', 'research', 'forward propagation', 'deployment', 'training')","('Convolutional Networks', 'based on', 'variable sized inputs')
('observations', 'instance of', 'recordings over time')
('observations', 'instance of', 'observations over space')
('college applications', 'based on', 'grades')
('college applications', 'based on', 'standardized test scores')
('input', 'convolve', 'weights')
('features', 'instance of', 'efficient convolution algorithms')
('features', 'instance of', 'modern convolutional network applications')
('more than one million units', 'subclass of', 'parallel computation resources')
('convolution algorithm', 'based on', 'frequency domain')
('Fourier transform', 'instance of', 'point-wise multiplication')
('Fourier transform', 'instance of', 'time domain')
('point-wise multiplication', 'instance of', 'inverse Fourier transform')
('discrete convolution', 'instance of', 'd-dimensional kernel')
('d-dimensional kernel', 'subclass of', 'outer product')
('separable convolution', 'subclass of', 'one-dimensional convolutions')
('composed approach', 'based on', 'parameter storage space')
('multidimensional convolution', 'instance of', 'runtime')
('multidimensional convolution', 'instance of', 'research')
('forward propagation', 'instance of', 'deployment')
('training', 'subclass of', 'research')"
9.9,0,"('convolutional network training', 'features', 'output layer', 'forward propagation', 'backward propagation', 'supervised training', 'gradient descent', 'initialization', 'randomly', 'design', 'detect edges', 'orientation', 'scale', 'unsupervised criterion', 'k-means clustering', 'small image patches', 'learned centroid', 'classifier layer', 'training set', 'convex optimization problem', 'logistic regression', 'SVM', 'random filters', 'convolutional networks', 'frequency selective', 'translation invariant', 'architecture', 'intermediate approach', 'greedy layer-wise pretraining', 'multilayer perceptrons', 'first layer', 'second layer', 'supervised greedy layer-wise pretraining', 'unsupervised criterion', 'convolutional deep belief network')","('convolutional network training', 'instance of', 'features')
('output layer', 'instance of', 'forward propagation')
('output layer', 'instance of', 'backward propagation')
('supervised training', 'instance of', 'gradient descent')
('initialization', 'instance of', 'randomly')
('design', 'subclass of', 'detect edges')
('design', 'subclass of', 'orientation')
('design', 'subclass of', 'scale')
('unsupervised criterion', 'based on', 'k-means clustering')
('unsupervised criterion', 'based on', 'small image patches')
('learned centroid', 'subclass of', 'classifier layer')
('training set', 'partition of', 'convex optimization problem')
('training set', 'partition of', 'logistic regression')
('training set', 'partition of', 'SVM')
('random filters', 'instance of', 'convolutional networks')
('frequency selective', 'instance of', 'translation invariant')
('architecture', 'subclass of', 'intermediate approach')
('architecture', 'subclass of', 'greedy layer-wise pretraining')
('architecture', 'subclass of', 'multilayer perceptrons')
('first layer', 'instance of', 'supervised greedy layer-wise pretraining')
('second layer', 'instance of', 'supervised greedy layer-wise pretraining')
('unsupervised criterion', 'based on', 'convolutional deep belief network')"
9.10,0,"('convolutional networks', 'multilayer perceptrons', 'Coates et al. (2011)', 'k-means', 'parameters', 'patch-based model', 'kernels', 'unsupervised learning', 'inference time', 'Ranzato et al. (2007b)', 'Jarrett et al. (2009)', 'Kavukcuoglu et al. (2010)', 'Coates et al. (2013)', 'labeled datasets', 'computational power', 'supervised fashion', 'forward and back-propagation', 'unsupervised pretraining', 'regularization', 'learning rule', 'Neuroscientific Basis for Convolutional Net- works', 'biologically inspired artificial intelligence', 'neuroscience', 'neural networks', 'David Hubel', 'Torsten Wiesel', 'mammalian vision system', 'Hubel and Wiesel', 'Nobel prize', 'deep learning models', 'individual neurons', 'cats', 'visual system', 'patterns of light', 'oriented bars')","('convolutional networks', 'instance of', 'neural networks')
('multilayer perceptrons', 'instance of', 'neural networks')
('Coates et al. (2011)', 'instance of', 'neural networks')
('k-means', 'instance of', 'unsupervised learning')
('parameters', 'instance of', 'neural networks')
('patch-based model', 'instance of', 'unsupervised learning')
('kernels', 'instance of', 'neural networks')
('unsupervised learning', 'instance of', 'machine learning')
('inference time', 'instance of', 'deep learning models')
('Ranzato et al. (2007b)', 'instance of', 'neural networks')
('Jarrett et al. (2009)', 'instance of', 'neural networks')
('Kavukcuoglu et al. (2010)', 'instance of', 'neural networks')
('Coates et al. (2013)', 'instance of', 'neural networks')
('labeled datasets', 'instance of', 'supervised fashion')
('computational power', 'instance of', 'deep learning models')
('supervised fashion', 'instance of', 'machine learning')
('forward and back-propagation', 'instance of', 'neural networks')
('unsupervised pretraining', 'instance of', 'unsupervised learning')
('regularization', 'instance of', 'neural networks')
('learning rule', 'instance of', 'neural networks')
('Neuroscientific Basis for Convolutional Net- works', 'instance of', 'neural networks')
('biologically inspired artificial intelligence', 'instance of', 'artificial intelligence')
('neuroscience', 'instance of', 'biology')
('neural networks', 'subclass of', 'machine learning')
('David Hubel', 'instance of', 'neuroscientist')
('Torsten Wiesel', 'instance of', 'neuroscientist')
('mammalian vision system', 'instance of', 'vision system')
('Hubel and Wiesel', 'instance of', 'neuroscientist')
('Nobel prize', 'instance of', 'award')
('deep learning models', 'subclass of', 'neural networks')
('individual neurons', 'instance of', 'neural networks')
('cats', 'instance of', 'animals')
('visual system', 'instance of', 'vision system')
('patterns of light', 'instance of', 'visual stimuli')"
9.10,1,"('convolutional networks', 'V1', 'primary visual cortex', 'retina', 'optic nerve', 'lateral geniculate nucleus', 'spatial map', 'simple cells', 'linear function', 'receptive field', 'detector units', 'complex cells', 'pooling units', 'cross-channel pooling strategies', 'maxout units', 'visual system', 'anatomical layers', 'specific concept', 'invariant transformations')","('convolutional networks', 'instance of', 'neural networks')
('V1', 'instance of', 'visual cortex')
('primary visual cortex', 'instance of', 'visual cortex')
('retina', 'instance of', 'vision system')
('optic nerve', 'instance of', 'nerve')
('lateral geniculate nucleus', 'instance of', 'brain structure')
('spatial map', 'instance of', 'visual representation')
('simple cells', 'instance of', 'neurons')
('linear function', 'instance of', 'mathematical function')
('receptive field', 'instance of', 'neural networks')
('detector units', 'instance of', 'neurons')
('complex cells', 'instance of', 'neurons')
('pooling units', 'instance of', 'neurons')
('cross-channel pooling strategies', 'instance of', 'pooling')
('maxout units', 'instance of', 'neurons')
('visual system', 'instance of', 'sensory system')
('anatomical layers', 'instance of', 'biological structure')
('specific concept', 'instance of', 'idea')
('invariant transformations', 'instance of', 'transformations')"
9.10,2,"('grandmother cells', 'medial temporal lobe', 'Quiroga et al. (2005)', 'Halle Berry neuron', 'Halle Berry', 'Bill Clinton', 'Jennifer Aniston', 'inferotemporal cortex (IT)', 'retina', 'LGN', 'V1', 'V2', 'V4', 'object recognition tasks', 'DiCarlo (2013)', 'mammalian vision system', 'computational neuroscientists', 'human eye', 'fovea')","('grandmother cells', 'instance of', 'neurons')
('medial temporal lobe', 'instance of', 'brain structure')
('Quiroga et al. (2005)', 'instance of', 'researcher')
('Halle Berry neuron', 'instance of', 'neuron')
('Halle Berry', 'instance of', 'actress')
('Bill Clinton', 'instance of', 'politician')
('Jennifer Aniston', 'instance of', 'actress')
('inferotemporal cortex (IT)', 'instance of', 'brain structure')
('retina', 'instance of', 'vision system')
('LGN', 'instance of', 'brain structure')
('V1', 'instance of', 'visual cortex')
('V2', 'instance of', 'visual cortex')
('V4', 'instance of', 'visual cortex')
('object recognition tasks', 'instance of', 'tasks')
('DiCarlo (2013)', 'instance of', 'researcher')
('mammalian vision system', 'instance of', 'vision system')
('computational neuroscientists', 'instance of', 'scientists')
('human eye', 'instance of', 'eye')
('fovea', 'instance of', 'part of eye')"
9.10,3,"('saccades', 'attention mechanisms', 'natural language processing', 'foveation mechanisms', 'Larochelle and Hinton (2010)', 'Denil et al. (2012)', 'hearing', 'understand entire scenes', '3-D geometric information', 'feedback from higher levels', 'feedforward IT firing rates', 'activation and pooling functions', 'quadratic filters', 'Model structures with parameter sharing', 'connectionist models of vision', 'Marr and Poggio (1976)', 'Neocognitron', 'Fukushima (1980)')","('saccades', 'instance of', 'eye movements')
('attention mechanisms', 'instance of', 'cognitive mechanisms')
('natural language processing', 'instance of', 'computational linguistics')
('foveation mechanisms', 'instance of', 'vision mechanisms')
('Larochelle and Hinton (2010)', 'instance of', 'researchers')
('Denil et al. (2012)', 'instance of', 'researchers')
('hearing', 'instance of', 'sense')
('understand entire scenes', 'instance of', 'cognitive task')
('3-D geometric information', 'instance of', 'visual information')
('feedback from higher levels', 'instance of', 'information flow')
('feedforward IT firing rates', 'instance of', 'neural activity')
('activation and pooling functions', 'instance of', 'neural network components')
('quadratic filters', 'instance of', 'filters')
('Model structures with parameter sharing', 'instance of', 'modeling technique')
('connectionist models of vision', 'instance of', 'model')
('Marr and Poggio (1976)', 'instance of', 'researchers')
('Neocognitron', 'instance of', 'neural network model')
('Fukushima (1980)', 'instance of', 'researcher')"
9.10,4,"('Lang and Hinton (1988)', 'back-propagation', 'time-delay neural networks (TDNNs)', 'biologically implausible', 'LeCun et al. (1989)', '2-D convolution', 'simple cells', 'complex cells', 'grandmother cells', 'convolution kernel', 'reverse correlation', 'Gabor functions', 'linear model', 'weights', 'Gabor function', 'image coordinates', 'response of a simple cell', 's(I) = w(x,y)I(x,y)', 'Gabor function form', 'α, β, β, f, φ, x, y, τ')","('Lang and Hinton (1988)', 'instance of', 'researchers')
('back-propagation', 'instance of', 'algorithm')
('time-delay neural networks (TDNNs)', 'instance of', 'neural network model')
('biologically implausible', 'instance of', 'characteristic')
('LeCun et al. (1989)', 'instance of', 'researchers')
('2-D convolution', 'instance of', 'convolution operation')
('simple cells', 'instance of', 'neurons')
('complex cells', 'instance of', 'neurons')
('grandmother cells', 'instance of', 'neurons')
('convolution kernel', 'instance of', 'matrix')
('reverse correlation', 'instance of', 'signal processing technique')
('Gabor functions', 'instance of', 'mathematical functions')
('linear model', 'instance of', 'model')
('weights', 'instance of', 'parameters')
('Gabor function', 'instance of', 'mathematical function')
('image coordinates', 'instance of', 'coordinates')
('response of a simple cell', 'instance of', 'neuron response')
('s(I) = w(x,y)I(x,y)', 'instance of', 'mathematical equation')
('Gabor function form', 'instance of', 'mathematical function form')
('α, β, γ, f, φ, x, y, τ', 'instance of', 'variables')"
9.10,5,"('Convolutional Networks', 'Gabor function', 'simple cell', 'receptive field', 'complex cell', 'L2 norm')","('Convolutional Networks', 'instance of', 'Gabor function')
('Gabor function', 'instance of', 'simple cell')
('simple cell', 'part of', 'receptive field')
('receptive field', 'instance of', 'complex cell')
('L2 norm', 'part of', 'receptive field')"
9.10,6,"('Convolutional Networks', 'Gabor functions', 'parameter settings', 'coordinate system', 'Gaussian scale parameters', 'sinusoid parameters', 'neuroscience', 'machine learning', 'V1', 'sparse coding', 'unsupervised learning algorithm', 'edge detectors', 'deep learning algorithms', 'natural images', 'statistical modeling', 'natural image statistics')","('Convolutional Networks', 'instance of', 'Gabor functions')
('Gabor functions', 'part of', 'parameter settings')
('parameter settings', 'part of', 'coordinate system')
('Gaussian scale parameters', 'part of', 'Gabor functions')
('sinusoid parameters', 'part of', 'Gabor functions')
('parameter settings', 'instance of', 'neuroscience')
('parameter settings', 'instance of', 'machine learning')
('V1', 'part of', 'neuroscience')
('sparse coding', 'instance of', 'unsupervised learning algorithm')
('unsupervised learning algorithm', 'instance of', 'neuroscience')
('edge detectors', 'part of', 'Gabor functions')
('deep learning algorithms', 'instance of', 'machine learning')
('natural images', 'instance of', 'statistical modeling')
('statistical modeling', 'part of', 'natural image statistics')"
9.11,0,"('Convolutional Networks', 'unsupervised learning algorithm', 'spike and slab sparse coding', 'convolution kernels', 'fully supervised convolutional maxout network', 'deep learning', 'brain', 'machine learning applications', 'neural networks', 'commercial applications', 'AT&T', 'NEC', 'OCR', 'handwriting recognition systems', 'Microsoft', 'ImageNet object recognition challenge', 'contests')","('Convolutional Networks', 'part of', 'unsupervised learning algorithm')
('unsupervised learning algorithm', 'instance of', 'spike and slab sparse coding')
('unsupervised learning algorithm', 'part of', 'convolution kernels')
('fully supervised convolutional maxout network', 'part of', 'convolution kernels')
('deep learning', 'part of', 'machine learning applications')
('brain', 'part of', 'neural networks')
('machine learning applications', 'subclass of', 'commercial applications')
('commercial applications', 'use', 'AT&T')
('commercial applications', 'use', 'NEC')
('OCR', 'use', 'handwriting recognition systems')
('handwriting recognition systems', 'subclass of', 'commercial applications')
('ImageNet object recognition challenge', 'part of', 'contests')"
9.11,1,"('Convolutional Networks', 'back-propagation', 'fully connected networks', 'computational efficiency', 'implementation', 'hyperparameters', 'neural networks', 'psychological barriers', 'specialization', 'grid-structured topology', 'two-dimensional image topology', 'one-dimensional sequential data', 'recurrent neural networks')","('Convolutional Networks', 'part of', 'back-propagation')
('fully connected networks', 'part of', 'back-propagation')
('computational efficiency', 'part of', 'implementation')
('hyperparameters', 'part of', 'implementation')
('neural networks', 'part of', 'psychological barriers')
('specialization', 'part of', 'neural networks')
('grid-structured topology', 'part of', 'specialization')
('two-dimensional image topology', 'instance of', 'grid-structured topology')
('one-dimensional sequential data', 'instance of', 'grid-structured topology')
('one-dimensional sequential data', 'instance of', 'specialization')
('recurrent neural networks', 'part of', 'neural networks')"
9.11,2,"('Recurrent neural networks', 'RNNs', 'neural networks', 'sequential data', 'convolutional networks', 'grid of values', 'image', 'sequence of values', 'parameter sharing', 'multi-layer networks', 'machine learning', 'statistical models', 'sequence lengths', 'positions in time', 'information extraction')","('Recurrent neural networks', 'instance of', 'RNNs')
('RNNs', 'part of', 'neural networks')
('sequential data', 'part of', 'neural networks')
('convolutional networks', 'instance of', 'neural networks')
('grid of values', 'instance of', 'image')
('sequence of values', 'instance of', 'sequential data')
('parameter sharing', 'part of', 'RNNs')
('multi-layer networks', 'part of', 'neural networks')
('machine learning', 'part of', 'statistical models')
('sequence lengths', 'part of', 'sequential data')
('positions in time', 'instance of', 'sequence lengths')
('information extraction', 'part of', 'sequence of values')"
9.11,3,"('sequence modeling', 'recurrent neural network', 'convolution', 'time-delay neural network', 'parameter sharing', 'computational graph', 'RNNs', 'minibatch', 'spatial data', 'computational graph', 'recurrent neural networks', 'textbook of Graves (2012)')","('sequence modeling', 'instance of', 'recurrent neural network')
('sequence modeling', 'instance of', 'convolution')
('sequence modeling', 'instance of', 'time-delay neural network')
('sequence modeling', 'instance of', 'parameter sharing')
('sequence modeling', 'instance of', 'computational graph')
('sequence modeling', 'instance of', 'RNNs')
('sequence modeling', 'instance of', 'minibatch')
('sequence modeling', 'instance of', 'spatial data')
('sequence modeling', 'instance of', 'recurrent neural networks')
('sequence modeling', 'instance of', 'textbook of Graves (2012)')"
10.1,0,"('computational graph', 'recursive computation', 'deep network structure', 'dynamical system', 'state of the system', 'repeatedly applying the definition', 'directed acyclic computational graph', 'unfolded computational graph', 'external signal')","('computational graph', 'instance of', 'recursive computation')
('computational graph', 'instance of', 'deep network structure')
('computational graph', 'instance of', 'dynamical system')
('computational graph', 'instance of', 'state of the system')
('computational graph', 'instance of', 'repeatedly applying the definition')
('computational graph', 'instance of', 'directed acyclic computational graph')
('computational graph', 'instance of', 'unfolded computational graph')
('computational graph', 'instance of', 'external signal')"
10.1,1,"('recurrent neural network', 'hidden units', 'architectural features', 'output layers', 'training criterion', 'statistical language modeling', 'autoencoder frameworks', 'input sequence', 'state h')","('recurrent neural network', 'instance of', 'hidden units')
('recurrent neural network', 'instance of', 'architectural features')
('recurrent neural network', 'instance of', 'output layers')
('recurrent neural network', 'instance of', 'training criterion')
('recurrent neural network', 'instance of', 'statistical language modeling')
('recurrent neural network', 'instance of', 'autoencoder frameworks')
('recurrent neural network', 'instance of', 'input sequence')
('recurrent neural network', 'instance of', 'state h')"
10.1,2,"('unfolded computational graph', 'circuit diagram', 'sequence length', 'function g(t)', 'transition function', 'parameter sharing', 'training examples', 'recurrent graph', 'unrolled graph')","('unfolded computational graph', 'instance of', 'circuit diagram')
('unfolded computational graph', 'instance of', 'sequence length')
('unfolded computational graph', 'instance of', 'function g(t)')
('unfolded computational graph', 'instance of', 'transition function')
('unfolded computational graph', 'instance of', 'parameter sharing')
('unfolded computational graph', 'instance of', 'training examples')
('unfolded computational graph', 'instance of', 'recurrent graph')
('unfolded computational graph', 'instance of', 'unrolled graph')"
10.2,0,"('recurrent neural networks', 'graph unrolling', 'parameter sharing', 'information flow forward and backward in time', 'output and losses', 'input-to-hidden connections', 'hidden-to-hidden recurrent connections', 'hidden-to-output connections')","('recurrent neural networks', 'instance of', 'graph unrolling')
('recurrent neural networks', 'instance of', 'parameter sharing')
('recurrent neural networks', 'instance of', 'information flow forward and backward in time')
('recurrent neural networks', 'instance of', 'output and losses')
('recurrent neural networks', 'instance of', 'input-to-hidden connections')
('recurrent neural networks', 'instance of', 'hidden-to-hidden recurrent connections')
('recurrent neural networks', 'instance of', 'hidden-to-output connections')"
10.2,1,"('sequence modeling', 'recurrent networks', 'hidden units', 'output', 'time step', 'figure', 'example', 
'recurrent neural network', 'equation', 'universal', 'Turing machine', 'size', 'RNN',
'input', 'binary sequence', 'functions', 'approximations', 'Turing machine', 'specific RNN',
'unbounded stack', 'activations', 'weights', 'rational numbers', 'unbounded precision',
'forward propagation', 'activation function', 'output', 'loss function', 'discrete', 'softmax operation',
'normalized probabilities')","('sequence modeling', 'based on', 'recurrent networks')
('recurrent networks', 'part of', 'sequence modeling')
('recurrent networks', 'based on', 'hidden units')
('hidden units', 'facet of', 'recurrent networks')
('hidden units', 'based on', 'output')
('output', 'facet of', 'hidden units')
('output', 'part of', 'time step')
('time step', 'facet of', 'output')
('time step', 'part of', 'figure')
('figure', 'facet of', 'time step')
('figure', 'part of', 'example')
('example', 'facet of', 'figure')
('example', 'part of', 'recurrent neural network')
('recurrent neural network', 'facet of', 'example')
('recurrent neural network', 'part of', 'equation')
('equation', 'facet of', 'recurrent neural network')
('equation', 'part of', 'universal')
('universal', 'facet of', 'equation')
('universal', 'part of', 'Turing machine')
('Turing machine', 'facet of', 'universal')
('Turing machine', 'part of', 'size')
('size', 'facet of', 'Turing machine')
('size', 'part of', 'RNN')
('RNN', 'facet of', 'size')
('RNN', 'part of', 'input')
('input', 'facet of', 'RNN')
('input', 'based on', 'binary sequence')
('binary sequence', 'part of', 'input')
('binary sequence', 'facet of', 'functions')
('functions', 'part of', 'binary sequence')
('functions', 'based on', 'approximations')
('approximations', 'facet of', 'functions')
('approximations', 'based on', 'Turing machine')
('Turing machine', 'part of', 'approximations')
('unbounded stack', 'facet of', 'activations')
('activations', 'part of', 'unbounded stack')
('activations', 'based on', 'weights')
('weights', 'facet of', 'activations')
('weights', 'part of', 'rational numbers')
('rational numbers', 'facet of', 'weights')
('rational numbers', 'based on', 'unbounded precision')
('unbounded precision', 'facet of', 'rational numbers')
('unbounded precision', 'based on', 'forward propagation')
('forward propagation', 'facet of', 'unbounded precision')
('forward propagation', 'part of', 'activation function')
('activation function', 'facet of', 'forward propagation')
('activation function', 'part of', 'output')
('output', 'facet of', 'activation function')
('output', 'part of', 'loss function')
('loss function', 'facet of', 'output')
('loss function', 'based on', 'discrete')
('discrete', 'facet of', 'loss function')
('discrete', 'based on', 'softmax operation')
('softmax operation', 'facet of', 'discrete')
('softmax operation', 'based on', 'normalized probabilities')
('normalized probabilities', 'facet of', 'softmax operation')"
10.2,2,"('SEQUENCE MODELING', 'RECURRENT', 'RECURSIVE NETS', 'Figure 10.4', 'RNN', 'feedback connection', 'hidden layer', 'time step', 'input', 'hidden layer activations', 'outputs', 'targets', 'loss', 'Circuit diagram', 'Unfolded computational graph', 'family', 'figure 10.3', 'information', 'past', 'hidden representation h', 'future', 'output value', 'direct connections')","('SEQUENCE MODELING', 'sublcass of', 'RECURRENT')
('RECURRENT', 'use', 'RECURSIVE NETS')
('Figure 10.4', 'figure 10.3', 'part of')
('RNN', 'instance of', 'RECURRENT')
('feedback connection', 'use', 'RNN')
('hidden layer', 'part of', 'RNN')
('time step', 'part of', 'RNN')
('input', 'part of', 'RNN')
('hidden layer activations', 'use', 'RNN')
('outputs', 'part of', 'RNN')
('targets', 'part of', 'RNN')
('loss', 'part of', 'RNN')
('Circuit diagram', 'based on', 'RNN')
('Unfolded computational graph', 'based on', 'RNN')
('family', 'figure 10.3', 'part of')
('figure 10.3', 'figure 10.4', 'part of')
('information', 'part of', 'RNN')
('past', 'part of', 'RNN')
('hidden representation h', 'part of', 'RNN')
('future', 'part of', 'RNN')
('output value', 'subclass of', 'RNN')
('direct connections', 'use', 'RNN')"
10.2,3,"('update equations', 'bias vectors', 'weight matrices', 'input-to-hidden', 'hidden-to-output', 'hidden-to-hidden', 'recurrent network', 'input sequence', 'output sequence', 'total loss', 'negative log-likelihood', 'forward propagation', 'backward propagation', 'runtime', 'parallelization', 'memory cost', 'back-propagation algorithm', 'back-propagation through time', 'network with recurrence', 'Teacher Forcing', 'Output Recurrence')","('update equations', 'part of', 'recurrent network')
('bias vectors', 'part of', 'recurrent network')
('weight matrices', 'part of', 'recurrent network')
('input-to-hidden', 'part of', 'recurrent network')
('hidden-to-output', 'part of', 'recurrent network')
('hidden-to-hidden', 'part of', 'recurrent network')
('recurrent network', 'instance of', 'RECURRENT')
('input sequence', 'part of', 'recurrent network')
('output sequence', 'part of', 'recurrent network')
('total loss', 'part of', 'recurrent network')
('negative log-likelihood', 'part of', 'total loss')
('forward propagation', 'part of', 'recurrent network')
('backward propagation', 'part of', 'recurrent network')
('runtime', 'subclass of', 'recurrent network')
('parallelization', 'part of', 'recurrent network')
('memory cost', 'part of', 'recurrent network')
('back-propagation algorithm', 'part of', 'recurrent network')
('back-propagation through time', 'part of', 'recurrent network')
('network with recurrence', 'use', 'recurrent network')
('Teacher Forcing', 'use', 'recurrent network')
('Output Recurrence', 'part of', 'recurrent network')"
10.2,4,"('sequence modeling', 'recurrent nets', 'recursive nets', 'universal Turing machine', 'loss function', 'gradient', 'time step', 'parallelized training', 'time-unfolded recurrent neural network', 'fixed-size representation', 'back-propagating', 'teacher forcing', 'maximum likelihood criterion')","('sequence modeling', 'subclass of', 'recurrent nets')
('sequence modeling', 'subclass of', 'recursive nets')
('recursive nets', 'subclass of', 'universal Turing machine')
('recurrent nets', 'subject of', 'loss function')
('loss function', 'subject of', 'gradient')
('time step', 'based on', 'parallelized training')
('time step', 'part of', 'time-unfolded recurrent neural network')
('fixed-size representation', 'based on', 'back-propagating')
('fixed-size representation', 'based on', 'teacher forcing')
('time-unfolded recurrent neural network', 'based on', 'maximum likelihood criterion')"
10.2,5,"('sequence modeling', 'recurrent nets', 'recursive nets', 'RNNs', 'teacher forcing', 'training technique', 'hidden states', 'train set', 'deployed', 'output')","('sequence modeling', 'subclass of', 'recurrent nets')
('sequence modeling', 'subclass of', 'recursive nets')
('sequence modeling', 'subclass of', 'RNNs')
('RNNs', 'based on', 'teacher forcing')
('training technique', 'based on', 'hidden states')
('train set', 'subject of', 'training technique')
('deployed', 'based on', 'output')"
10.2,6,"('sequence modeling', 'recurrent nets', 'recursive nets', 'likelihood criterion', 'conditional probability', 'training set', 'maximum likelihood', 'target values', 'teacher forcing', 'back-propagation through time', 'hidden units', 'BPTT algorithm', 'open-loop mode', 'output distribution', 'free-running inputs', 'recurrent output-to-input paths', 'input conditions', 'curriculum learning strategy', 'computing the gradient', 'recurrent neural network', 'generalized back-propagation algorithm')","('sequence modeling', 'subclass of', 'neural networks')
('recurrent nets', 'subclass of', 'neural networks')
('recursive nets', 'subclass of', 'neural networks')
('likelihood criterion', 'use', 'training set')
('conditional probability', 'use', 'likelihood criterion')
('training set', 'part of', 'likelihood criterion')
('maximum likelihood', 'use', 'likelihood criterion')
('target values', 'part of', 'training set')
('teacher forcing', 'use', 'training set')
('back-propagation through time', 'use', 'BPTT algorithm')
('hidden units', 'part of', 'recurrent neural network')
('BPTT algorithm', 'use', 'back-propagation through time')
('open-loop mode', 'use', 'recurrent neural network')
('output distribution', 'part of', 'recurrent neural network')
('free-running inputs', 'use', 'recurrent neural network')
('recurrent output-to-input paths', 'part of', 'recurrent neural network')
('input conditions', 'use', 'recurrent neural network')
('curriculum learning strategy', 'use', 'recurrent neural network')
('computing the gradient', 'use', 'generalized back-propagation algorithm')
('recurrent neural network', 'subclass of', 'neural networks')
('generalized back-propagation algorithm', 'based on', 'back-propagation through time')"
10.2,7,"('unrolled computational graph', 'specialized algorithms', 'back-propagation', 'RNN equations', 'computational graph', 'parameters', 'sequence of nodes', 'final loss', 'softmax function', 'true target', 'negative log-likelihood', 'time step', 'gradient', 'descendant', 'iterate backwards', 'back-propagate gradients', 'diagonal matrix', 'hyperbolic tangent', 'hidden unit')","('unrolled computational graph', 'subclass of', 'computational graph')
('specialized algorithms', 'use', 'back-propagation')
('back-propagation', 'part of', 'specialized algorithms')
('RNN equations', 'part of', 'specialized algorithms')
('computational graph', 'part of', 'specialized algorithms')
('parameters', 'part of', 'computational graph')
('sequence of nodes', 'part of', 'computational graph')
('final loss', 'part of', 'specialized algorithms')
('softmax function', 'use', 'specialized algorithms')
('true target', 'part of', 'softmax function')
('negative log-likelihood', 'part of', 'softmax function')
('time step', 'part of', 'specialized algorithms')
('gradient', 'part of', 'specialized algorithms')
('descendant', 'part of', 'unrolled computational graph')
('iterate backwards', 'use', 'unrolled computational graph')
('back-propagate gradients', 'part of', 'unrolled computational graph')
('diagonal matrix', 'part of', 'specialized algorithms')
('hyperbolic tangent', 'part of', 'unrolled computational graph')
('hidden unit', 'part of', 'unrolled computational graph')"
10.2,8,"('SEQUENCE MODELING', 'RECURRENT AND RECURSIVE NETS', 'computational graph', 'parameter nodes', 'calculus operations', 'time steps', 'dummy variables', 'weights', 'remaining parameters', 'gradient', 'L', 'h(t)', 'o(t)', 'c', 'b(t)', 'V(t)', 'W(t)', 'U(t)', 'x(t)')","('SEQUENCE MODELING', 'RECURRENT AND RECURSIVE NETS', 'computational graph')
('RECURRENT AND RECURSIVE NETS', 'instance of', 'SEQUENCE MODELING')
('parameter nodes', 'part of', 'computational graph')
('calculus operations', 'part of', 'computational graph')
('time steps', 'part of', 'computational graph')
('dummy variables', 'part of', 'computational graph')
('weights', 'part of', 'computational graph')
('remaining parameters', 'part of', 'computational graph')
('gradient', 'part of', 'computational graph')
('L', 'part of', 'RECURRENT AND RECURSIVE NETS')
('h(t)', 'part of', 'RECURRENT AND RECURSIVE NETS')
('o(t)', 'part of', 'RECURRENT AND RECURSIVE NETS')
('c', 'part of', 'RECURRENT AND RECURSIVE NETS')
('b(t)', 'part of', 'RECURRENT AND RECURSIVE NETS')
('V(t)', 'part of', 'RECURRENT AND RECURSIVE NETS')
('W(t)', 'part of', 'RECURRENT AND RECURSIVE NETS')
('U(t)', 'part of', 'RECURRENT AND RECURSIVE NETS')
('x(t)', 'part of', 'RECURRENT AND RECURSIVE NETS')"
10.2,9,"('sequence modeling', 'recurrent networks', 'directed graphical models', 'cross-entropy', 'feedforward network', 'mean squared error', 'predictive log-likelihood training objective', 'conditional distribution', 'joint distribution', 'probabilistic predictions')","('sequence modeling', 'instance of', 'recurrent networks')
('directed graphical models', 'subclass of', 'recurrent networks')
('cross-entropy', 'instance of', 'recurrent networks')
('feedforward network', 'subclass of', 'recurrent networks')
('mean squared error', 'instance of', 'recurrent networks')
('predictive log-likelihood training objective', 'instance of', 'recurrent networks')
('conditional distribution', 'instance of', 'recurrent networks')
('joint distribution', 'instance of', 'recurrent networks')
('probabilistic predictions', 'instance of', 'recurrent networks')"
10.2,10,"('fully connected graphical model', 'sequence', 'conditional distribution', 'parametrization', 'RNN', 'state variable')","('fully connected graphical model', 'instance of', 'sequence')
('conditional distribution', 'based on', 'sequence')
('parametrization', 'based on', 'RNN')
('RNN', 'instance of', 'state variable')"
10.2,11,"('RNN', 'graphical model', 'complete graph', 'hidden units', 'parametrization', 'joint distribution', 'sequence length', 'long-term relationships')","('RNN', 'subclass of', 'graphical model')
('complete graph', 'instance of', 'graphical model')
('hidden units', 'part of', 'RNN')
('parametrization', 'based on', 'RNN')
('joint distribution', 'based on', 'RNN')
('sequence length', 'instance of', 'RNN')
('long-term relationships', 'use', 'RNN')"
10.2,12,"('SEQUENCE MODELING', 'RECURRENT AND RECURSIVE NETS', 'parameter sharing', 'conditional probability distribution', 
'stationary', 'learners', 'graphical model', 'Bernoulli output', 'sigmoid unit', 'cross-entropy loss', 'integer',
'recurrent update')","('SEQUENTIAL MODELING', 'instance of', 'RECURRENT AND RECURSIVE NETS'),
('parameter sharing', 'subclass of', 'RECURRENT AND RECURSIVE NETS'),
('conditional probability distribution', 'part of', 'RECURRENT AND RECURSIVE NETS'),
('stationary', 'based on', 'RECURRENT AND RECURSIVE NETS'),
('learners', 'facet of', 'RECURRENT AND RECURSIVE NETS'),
('graphical model', 'subclass of', 'RECURRENT AND RECURSIVE NETS'),
('Bernoulli output', 'based on', 'RECURRENT AND RECURSIVE NETS'),
('sigmoid unit', 'use', 'RECURRENT AND RECURSIVE NETS'),
('cross-entropy loss', 'use', 'RECURRENT AND RECURSIVE NETS'),
('integer', 'subclass of', 'RECURRENT AND RECURSIVE NETS'),
('recurrent update', 'based on', 'RECURRENT AND RECURSIVE NETS')"
10.2,13,"('SEQUENCE MODELING', 'RECURRENT AND RECURSIVE NETS', 'RNNs', 'graphical model', 'conditional distribution', 'inputs', 
'weight matrix R', 'hidden units')","('SEQUENTIAL MODELING', 'instance of', 'RECURRENT AND RECURSIVE NETS'),
('RNNs', 'subclass of', 'RECURRENT AND RECURSIVE NETS'),
('graphical model', 'subclass of', 'RECURRENT AND RECURSIVE NETS'),
('conditional distribution', 'part of', 'RECURRENT AND RECURSIVE NETS'),
('inputs', 'subject of', 'RECURRENT AND RECURSIVE NETS'),
('weight matrix R', 'based on', 'RECURRENT AND RECURSIVE NETS'),
('hidden units', 'part of', 'RECURRENT AND RECURSIVE NETS')"
10.2,14,"('sequence modeling', 'recurrent nets', 'recursive nets', 'RNN', 'conditional model', 'fixed-length vector', 'distribution over sequences', 'image captioning', 'single image', 'sequence of words', 'observed output sequence', 'target', 'vector', 'conditional distribution', 'conditional independence assumption', 'connections', 'hidden unit', 'probability distributions')","('sequence modeling', 'instance of', 'recurrent nets')
('sequence modeling', 'instance of', 'recursive nets')
('conditional model', 'instance of', 'RNN')
('fixed-length vector', 'instance of', 'distribution over sequences')
('image captioning', 'instance of', 'conditional model')
('single image', 'instance of', 'sequence of words')
('observed output sequence', 'instance of', 'target')
('vector', 'instance of', 'distribution over sequences')
('conditional distribution', 'instance of', 'probability distributions')"
10.2,15,"('sequence modeling', 'recurrent nets', 'recursive nets', 'conditional recurrent neural network', 'variable-length sequence', 'distribution over sequences', 'previous output', 'current state', 'arbitrary distribution', 'sequences of y', 'sequences of x', 'conditional independence assumption')","('sequence modeling', 'instance of', 'recurrent nets')
('sequence modeling', 'instance of', 'recursive nets')
('conditional recurrent neural network', 'subclass of', 'recurrent nets')
('variable-length sequence', 'instance of', 'distribution over sequences')
('previous output', 'instance of', 'current state')
('arbitrary distribution', 'instance of', 'distribution over sequences')
('sequences of y', 'instance of', 'distribution over sequences')
('sequences of x', 'instance of', 'distribution over sequences')
('conditional independence assumption', 'instance of', 'conditional independence assumption')"
10.3,0,"('SEQUENCE MODELING', 'RECURRENT AND RECURSIVE NETS', 'SECTION 10.4', 'Figure 10.11', 'Bidirectional RNNs')","('SEQUENCE MODELING', 'instance of', 'RECURRENT AND RECURSIVE NETS')"
10.3,1,"('Schuster and Paliwal, 1997', 'Graves, 2012', 'Graves et al., 2008', 'Graves and Schmidhuber, 2009', 'Graves and Schmidhuber, 2005', 'Graves et al., 2013', 'Baldi et al., 1999', 'Visin et al., 2015', 'Kalchbrenner et al., 2015')","('Graves, 2012', 'author of', 'Schuster and Paliwal, 1997'),
('Graves et al., 2008', 'author of', 'Graves and Schmidhuber, 2009'),
('Graves and Schmidhuber, 2009', 'author of', 'Graves and Schmidhuber, 2005'),
('Graves et al., 2013', 'author of', 'Graves and Schmidhuber, 2005'),
('Graves et al., 2013', 'author of', 'Graves et al., 2008'),
('Baldi et al., 1999', 'author of', 'Schuster and Paliwal, 1997'),
('Visin et al., 2015', 'author of', 'Graves et al., 2013'),
('Kalchbrenner et al., 2015', 'author of', 'Graves et al., 2013')"
10.4,0,"('Encoder-Decoder Sequence-to-Sequence Architec- tures', 'figure 10.5', 'figure 10.9', 'figures 10.3, 10.4, 10.10 and 10.11', 'Encoder', 'Decoder')","('Encoder-Decoder Sequence-to-Sequence Architec- tures', 'part of', 'figure 10.5'),
('Encoder-Decoder Sequence-to-Sequence Architec- tures', 'part of', 'figure 10.9'),
('Encoder-Decoder Sequence-to-Sequence Architec- tures', 'part of', 'figure 10.3'),
('Encoder-Decoder Sequence-to-Sequence Architec- tures', 'part of', 'figure 10.4'),
('Encoder-Decoder Sequence-to-Sequence Architec- tures', 'part of', 'figure 10.10'),
('Encoder-Decoder Sequence-to-Sequence Architec- tures', 'part of', 'figure 10.11'),
('Encoder', 'part of', 'Encoder-Decoder Sequence-to-Sequence Architec- tures'),
('Decoder', 'part of', 'Encoder-Decoder Sequence-to-Sequence Architec- tures')"
10.4,1,"('Cho et al., 2014a', 'Sutskever et al., 2014', 'encoder-decoder or sequence-to-sequence architecture', 'figure 10.12', 'Bahdanau et al., 2015')","('Cho et al., 2014a', 'author of', 'encoder-decoder or sequence-to-sequence architecture'),
('Sutskever et al., 2014', 'author of', 'encoder-decoder or sequence-to-sequence architecture'),
('Bahdanau et al., 2015', 'author of', 'encoder-decoder or sequence-to-sequence architecture'),
('encoder-decoder or sequence-to-sequence architecture', 'part of', 'figure 10.12')"
10.5,0,"('Graves et al., 2013', 'Pascanu et al., 2014a', 'Schmidhuber, 1992', 'El Hihi and Bengio, 1996', 'Jaeger, 2007a')","('Graves et al., 2013', 'author of', 'Pascanu et al., 2014a'),
('Graves et al., 2013', 'author of', 'El Hihi and Bengio, 1996'),
('Graves et al., 2013', 'author of', 'Jaeger, 2007a'),
('Graves et al., 2013', 'based on', 'Schmidhuber, 1992')"
10.5,1,"('sequence modeling', 'recurrent neural network', 'deep', 'groups', 'hierarchically', 'computation', 'MLP', 'input-to-hidden', 'hidden-to-hidden', 'hidden-to-output', 'path-lengthening effect', 'skip connections')","('sequence modeling', 'instance of', 'recurrent neural network')
('recurrent neural network', 'part of', 'deep')
('deep', 'part of', 'groups')
('groups', 'part of', 'hierarchically')
('hierarchically', 'based on', 'computation')
('computation', 'instance of', 'MLP')
('MLP', 'part of', 'input-to-hidden')
('MLP', 'part of', 'hidden-to-hidden')
('MLP', 'part of', 'hidden-to-output')
('path-lengthening effect', 'subclass of', 'skip connections')"
10.6,0,"('skip connections', 'hidden-to-hidden path', 'figure 10.13c', 'recursive network', 'computational graph', 'variable-size sequence', 'fixed-size representation', 'weight matrices U, V, W', 'supervised learning', 'target y', 'deep tree', 'recursive neural networks')","('skip connections', 'part of', 'hidden-to-hidden path')
('hidden-to-hidden path', 'part of', 'figure 10.13c')
('figure 10.13c', 'part of', 'recursive network')
('recursive network', 'part of', 'computational graph')
('variable-size sequence', 'part of', 'computational graph')
('fixed-size representation', 'part of', 'computational graph')
('weight matrices U, V, W', 'part of', 'computational graph')
('supervised learning', 'part of', 'target y')
('target y', 'part of', 'computational graph')
('deep tree', 'part of', 'recursive neural networks')"
10.7,0,"('recursive networks', 'data structures', 'neural nets', 'natural language processing', 'computer vision', 'long-term dependencies', 'tree structure', 'parse tree', 'learner', 'recursive net idea', 'variants', 'affine transformation', 'monotone nonlinearity', 'tensor operations', 'bilinear forms', 'relationships between concepts', 'continuous vectors', 'The Challenge of Long-Term Dependencies', 'gradients', 'optimization', 'stability', 'memories', 'Jacobians', 'parameters', 'treatment', 'Hochreiter', 'Doya', 'Bengio')","('recursive networks', 'subclass of', 'data structures')
('recursive networks', 'subclass of', 'neural nets')
('recursive networks', 'subclass of', 'natural language processing')
('recursive networks', 'subclass of', 'computer vision')
('recursive networks', 'subclass of', 'long-term dependencies')
('recursive networks', 'subclass of', 'tree structure')
('recursive networks', 'subclass of', 'parse tree')
('recursive networks', 'subclass of', 'learner')
('recursive networks', 'subclass of', 'recursive net idea')
('recursive networks', 'subclass of', 'variants')
('recursive networks', 'subclass of', 'affine transformation')
('recursive networks', 'subclass of', 'monotone nonlinearity')
('recursive networks', 'subclass of', 'tensor operations')
('recursive networks', 'subclass of', 'bilinear forms')
('relationships between concepts', 'part of', 'continuous vectors')
('continuous vectors', 'part of', 'recursive networks')
('The Challenge of Long-Term Dependencies', 'part of', 'recursive networks')
('gradients', 'part of', 'optimization')
('optimization', 'part of', 'recursive networks')
('stability', 'part of', 'recursive networks')
('memories', 'part of', 'recursive networks')
('Jacobians', 'part of', 'recursive networks')
('parameters', 'part of', 'recursive networks')
('treatment', 'part of', 'recursive networks')
('Hochreiter', 'part of', 'recursive networks')
('Doya', 'part of', 'recursive networks')
('Bengio', 'part of', 'recursive networks')"
10.7,1,"('sequence modeling', 'recurrent nets', 'recursive nets', 'linear-tanh layer', 'hidden state', 'function', 'transition function', 'recurrent networks', 'matrix multiplication', 'recurrence relation', 'nonlinear activation function', 'power method', 'eigendecomposition')","('sequence modeling', 'instance of', 'recurrent nets')
('sequence modeling', 'instance of', 'recursive nets')
('sequence modeling', 'instance of', 'linear-tanh layer')
('sequence modeling', 'facet of', 'hidden state')
('sequence modeling', 'based on', 'function')
('sequence modeling', 'based on', 'transition function')
('sequence modeling', 'based on', 'recurrent networks')
('recurrent nets', 'based on', 'matrix multiplication')
('recurrent nets', 'based on', 'recurrence relation')
('recurrent nets', 'based on', 'nonlinear activation function')
('nonlinear activation function', 'based on', 'power method')
('nonlinear activation function', 'based on', 'eigendecomposition')"
10.7,2,"('recurrent networks', 'scalar case', 'non-recurrent network', 'vanishing and exploding gradient problem', 'long term dependencies', 'parameter space', 'gradients', 'robust', 'learning long-term dependencies', 'dynamical systems')","('recurrent networks', 'instance of', 'scalar case')
('recurrent networks', 'facet of', 'non-recurrent network')
('recurrent networks', 'based on', 'vanishing and exploding gradient problem')
('recurrent networks', 'based on', 'long term dependencies')
('recurrent networks', 'facet of', 'parameter space')
('recurrent networks', 'facet of', 'gradients')
('recurrent networks', 'facet of', 'robust')
('recurrent networks', 'based on', 'learning long-term dependencies')
('recurrent networks', 'instance of', 'dynamical systems')"
10.8,0,"('echo state networks', 'reservoir computing', 'liquid state machines', 'recurrent hidden units', 'output weights', 'spiking neurons', 'kernel machines', 'fixed-length vector', 'linear predictor', 'training criterion', 'dynamical system', 'eigenvalues', 'spectral radius')","('echo state networks', 'based on', 'reservoir computing')
('echo state networks', 'based on', 'liquid state machines')
('echo state networks', 'based on', 'recurrent hidden units')
('echo state networks', 'based on', 'output weights')
('echo state networks', 'based on', 'spiking neurons')
('echo state networks', 'based on', 'kernel machines')
('echo state networks', 'based on', 'fixed-length vector')
('echo state networks', 'based on', 'linear predictor')
('echo state networks', 'based on', 'training criterion')
('echo state networks', 'based on', 'dynamical system')
('echo state networks', 'based on', 'eigenvalues')
('echo state networks', 'based on', 'spectral radius')"
10.8,1,"('spectral radius', 'back-propagation', 'gradient vector', 'eigenvector', 'eigenvalue', 'nonlinearity', 'derivative', 'explosion', 'echo state networks', 'linear map', 'contractive', 'precision', 'Jacobian matrix', 'complex-valued eigenvalues', 'oscillatory')","('spectral radius', 'based on', 'back-propagation')
('spectral radius', 'facet of', 'gradient vector')
('spectral radius', 'facet of', 'eigenvector')
('spectral radius', 'facet of', 'eigenvalue')
('spectral radius', 'based on', 'nonlinearity')
('spectral radius', 'based on', 'derivative')
('spectral radius', 'based on', 'explosion')
('spectral radius', 'instance of', 'echo state networks')
('spectral radius', 'based on', 'linear map')
('spectral radius', 'based on', 'contractive')
('spectral radius', 'facet of', 'precision')
('spectral radius', 'based on', 'Jacobian matrix')
('spectral radius', 'facet of', 'complex-valued eigenvalues')
('spectral radius', 'facet of', 'oscillatory')"
10.9,0,"('squashing nonlinearity', 'tanh', 'bounded dynamics', 'echo state networks', 'spectral radius', 'saturating nonlinearities', 'fully trainable recurrent network', 'back-propagation through time', 'long-term dependencies', 'leaky units', 'multiple time scales', 'skip connections', 'time constants')","('squashing nonlinearity', 'instance of', 'tanh')
('squashing nonlinearity', 'facet of', 'bounded dynamics')
('squashing nonlinearity', 'facet of', 'echo state networks')
('spectral radius', 'based on', 'saturating nonlinearities')
('spectral radius', 'facet of', 'fully trainable recurrent network')
('spectral radius', 'based on', 'back-propagation through time')
('spectral radius', 'facet of', 'long-term dependencies')
('spectral radius', 'based on', 'leaky units')
('spectral radius', 'based on', 'multiple time scales')
('spectral radius', 'based on', 'skip connections')
('spectral radius', 'facet of', 'time constants')"
10.9,1,"('sequence modeling', 'recurrent nets', 'recursive nets', 'time scales', 'skip connections', 'variables', 'direct connections', 'distant past', 'present', 'delay', 'feedforward neural networks', 'ordinary recurrent network', 'unit', 'time steps', 'long...dencies', 'leaky units', 'spectrum', 'different time scales', 'paths', 'product of derivatives', 'linear self-connections', 'running average', 'information about the past', 'hidden units', 'access values', 'past', 'real-valued alpha', 'skip length', 'echo state networks')","[('sequence modeling', 'instance of', 'recurrent nets'),
 ('sequence modeling', 'instance of', 'recursive nets'),
 ('sequence modeling', 'instance of', 'time scales'),
 ('sequence modeling', 'instance of', 'skip connections'),
 ('sequence modeling', 'instance of', 'variables'),
 ('sequence modeling', 'instance of', 'direct connections'),
 ('sequence modeling', 'instance of', 'distant past'),
 ('sequence modeling', 'instance of', 'present'),
 ('sequence modeling', 'instance of', 'delay'),
 ('sequence modeling', 'instance of', 'feedforward neural networks'),
 ('sequence modeling', 'instance of', 'ordinary recurrent network'),
 ('sequence modeling', 'instance of', 'unit'),
 ('sequence modeling', 'instance of', 'time steps'),
 ('sequence modeling', 'instance of', 'long-term dependencies'),
 ('sequence modeling', 'instance of', 'leaky units'),
 ('sequence modeling', 'instance of', 'spectrum'),
 ('sequence modeling', 'instance of', 'different time scales'),
 ('sequence modeling', 'instance of', 'paths'),
 ('sequence modeling', 'instance of', 'product of derivatives'),
 ('sequence modeling', 'instance of', 'linear self-connections'),
 ('sequence modeling', 'instance of', 'running average'),
 ('sequence modeling', 'instance of', 'information about the past'),
 ('sequence modeling', 'instance of', 'hidden units'),
 ('sequence modeling', 'instance of', 'access values'),
 ('sequence modeling', 'instance of', 'past'),
 ('sequence modeling', 'instance of', 'real-valued alpha'),
 ('sequence modeling', 'instance of', 'skip length'),
 ('sequence modeling', 'instance of', 'echo state networks')]"
10.10,0,"('sequence modeling', 'recurrent nets', 'leaky units', 'time constants', 'long-term dependencies', 'skip connections', 'RNN', 'time scales', 'recurrent units', 'fixed time scales', 'explicit and discrete updates', 'frequency', 'gated RNNs', 'long short-term memory', 'gated recurrent unit', 'connection weights')","('sequence modeling', 'instance of', 'recurrent nets')
('leaky units', 'instance of', 'recurrent nets')
('time constants', 'instance of', 'leaky units')
('long-term dependencies', 'instance of', 'recurrent nets')
('skip connections', 'instance of', 'recurrent nets')
('RNN', 'instance of', 'recurrent nets')
('time scales', 'instance of', 'leaky units')
('recurrent units', 'instance of', 'leaky units')
('fixed time scales', 'instance of', 'leaky units')
('explicit and discrete updates', 'instance of', 'leaky units')
('frequency', 'instance of', 'leaky units')
('gated RNNs', 'instance of', 'recurrent nets')
('long short-term memory', 'instance of', 'gated RNNs')
('gated recurrent unit', 'instance of', 'gated RNNs')
('connection weights', 'instance of', 'gated RNNs')"
10.10,1,"('LSTM', 'recurrent network', 'cell', 'hidden units', 'input feature', 'sigmoidal input gate', 'state unit', 'linear self-loop', 'forget gate', 'output gate', 'gating units', 'squashing nonlinearity', 'black square', 'leaky units', 'neural network')","('LSTM', 'instance of', 'recurrent network')
('cell', 'instance of', 'recurrent network')
('hidden units', 'instance of', 'cell')
('input feature', 'instance of', 'cell')
('sigmoidal input gate', 'instance of', 'cell')
('state unit', 'instance of', 'cell')
('linear self-loop', 'instance of', 'cell')
('forget gate', 'instance of', 'cell')
('output gate', 'instance of', 'cell')
('gating units', 'instance of', 'cell')
('squashing nonlinearity', 'instance of', 'cell')
('black square', 'instance of', 'recurrent network')
('leaky units', 'instance of', 'recurrent network')
('neural network', 'instance of', 'recurrent network')"
10.10,2,"('LSTM', 'long short-term memory', 'self-loops', 'gradient', 'hidden unit', 'time scale of integration', 'input sequence', 'parameters', 'unconstrained handwriting recognition', 'speech recognition', 'handwriting generation', 'machine translation', 'image captioning', 'parsing', 'LSTM cells', 'internal recurrence', 'outer recurrence', 'gating units', 'state unit', 'forget gate unit', 'sigmoid unit', 'input vector', 'hidden layer vector', 'biases', 'input weights', 'recurrent weights')","('LSTM', 'instance of', 'long short-term memory')
('self-loops', 'instance of', 'gradient')
('hidden unit', 'instance of', 'gradient')
('time scale of integration', 'instance of', 'gradient')
('input sequence', 'instance of', 'parameters')
('parameters', 'instance of', 'LSTM')
('unconstrained handwriting recognition', 'instance of', 'LSTM')
('speech recognition', 'instance of', 'LSTM')
('handwriting generation', 'instance of', 'LSTM')
('machine translation', 'instance of', 'LSTM')
('image captioning', 'instance of', 'LSTM')
('parsing', 'instance of', 'LSTM')
('LSTM cells', 'instance of', 'LSTM')
('internal recurrence', 'instance of', 'LSTM')
('outer recurrence', 'instance of', 'LSTM')
('gating units', 'instance of', 'LSTM')
('state unit', 'instance of', 'LSTM')
('forget gate unit', 'instance of', 'LSTM')
('sigmoid unit', 'instance of', 'LSTM')
('input vector', 'instance of', 'LSTM')
('hidden layer vector', 'instance of', 'LSTM')
('biases', 'instance of', 'LSTM')
('input weights', 'instance of', 'LSTM')
('recurrent weights', 'instance of', 'LSTM')"
10.10,3,"('SEQUENCE MODELING', 'RECURRENT', 'RECURSIVE NETS', 'LSTM', 'LSTM networks', 'long-term dependencies', 'simple recurrent architectures', 'sequence processing tasks', 'challenging sequence processing tasks', 'state-of-the-art performance', 'Graves', 'Graves et al.', 'Sutskever et al.', 'Other Gated RNNs')","('RECURRENT', 'subclass of', 'SEQUENCE MODELING')
('RECURSIVE NETS', 'subclass of', 'RECURRENT')
('LSTM', 'subclass of', 'RECURRENT')
('LSTM networks', 'instance of', 'LSTM')
('long-term dependencies', 'part of', 'LSTM')
('simple recurrent architectures', 'facet of', 'LSTM')
('sequence processing tasks', 'based on', 'LSTM')
('challenging sequence processing tasks', 'based on', 'LSTM')
('state-of-the-art performance', 'based on', 'LSTM')
('Graves', 'instance of', 'LSTM')
('Graves et al.', 'instance of', 'LSTM')
('Sutskever et al.', 'instance of', 'LSTM')
('Other Gated RNNs', 'subclass of', 'RECURRENT')"
10.10,4,"('sequence modeling', 'gated RNNs', 'GRUs', 'LSTM', 'update gate', 'reset gate', 'state unit', 'target state', 'leaky integrator', 'forget gate', 'global gate', 'local gate', 'architectural variants', 'bias')","('sequence modeling', 'instance of', 'sequence modeling')
('gated RNNs', 'instance of', 'gated RNNs')
('GRUs', 'instance of', 'GRUs')
('LSTM', 'instance of', 'LSTM')
('update gate', 'instance of', 'update gate')
('reset gate', 'instance of', 'reset gate')
('state unit', 'instance of', 'state unit')
('target state', 'instance of', 'target state')
('leaky integrator', 'instance of', 'leaky integrator')
('forget gate', 'instance of', 'forget gate')
('global gate', 'instance of', 'global gate')
('local gate', 'instance of', 'local gate')
('architectural variants', 'instance of', 'architectural variants')
('bias', 'instance of', 'bias')"
10.11,0,"('sequence modeling', 'recurrent', 'recursive nets', 'optimization', 'long-term dependencies', 'vanishing gradient problems', 'exploding gradient problems', 'RNNs', 'second derivatives', 'first derivatives', 'second-order optimization algorithms', 'inverse Hessian', 'computational cost', 'minibatch', 'saddle points', 'Nesterov momentum', 'careful initialization', 'SGD', 'LSTMs', 'nonlinear functions', 'magnitude', 'objective function', 'parameter gradient', 'gradient descent', 'parameter update', 'solution', 'steepest descent', 'infinitesimal region', 'cost function', 'learning rates')","('sequence modeling', 'instance of', 'recurrent')
('recurrent', 'subclass of', 'recursive nets')
('optimization', 'instance of', 'second-order optimization algorithms')
('long-term dependencies', 'instance of', 'vanishing gradient problems')
('vanishing gradient problems', 'subject of', 'RNNs')
('exploding gradient problems', 'subject of', 'RNNs')
('RNNs', 'subclass of', 'LSTMs')
('LSTMs', 'subclass of', 'RNNs')
('second derivatives', 'instance of', 'inverse Hessian')
('first derivatives', 'instance of', 'gradient descent')
('second-order optimization algorithms', 'use', 'inverse Hessian')
('computational cost', 'instance of', 'minibatch')
('minibatch', 'use', 'SGD')
('saddle points', 'instance of', 'steepest descent')
('Nesterov momentum', 'use', 'SGD')
('careful initialization', 'use', 'SGD')
('SGD', 'use', 'parameter update')
('nonlinear functions', 'instance of', 'magnitude')
('objective function', 'instance of', 'cost function')
('parameter gradient', 'instance of', 'gradient descent')
('gradient descent', 'use', 'parameter update')
('steepest descent', 'subclass of', 'gradient descent')
('cost function', 'subject of', 'learning rates')"
10.11,1,"('sequence modeling', 'recurrent', 'recursive nets', 'landscape', 'learning rate', 'curved part', 'gradient clipping', 'ravine', 'weight matrix', 'time steps', 'cliff', 'gradient descent', 'parameters', 'solution', 'step size', 'clipped gradient', 'minibatch', 'element-wise', 'norm g', 'parameter update')","('sequence modeling', 'instance of', 'recurrent')
('recurrent', 'subclass of', 'recursive nets')
('landscape', 'instance of', 'curved part')
('learning rate', 'instance of', 'step size')
('curved part', 'subject of', 'gradient descent')
('gradient clipping', 'instance of', 'clipped gradient')
('ravine', 'instance of', 'cliff')
('weight matrix', 'instance of', 'parameters')
('time steps', 'instance of', 'parameters')
('cliff', 'subclass of', 'gradient descent')
('parameters', 'subject of', 'solution')
('solution', 'instance of', 'parameter update')
('step size', 'subclass of', 'parameter update')
('clipped gradient', 'instance of', 'parameter update')
('minibatch', 'instance of', 'parameter update')
('element-wise', 'subclass of', 'parameter update')
('norm g', 'subject of', 'parameter update')"
10.11,2,"('sequence modeling', 'recurrent', 'recursive nets', 'norm threshold', 'update parameters', 'parameter update', 'true gradient', 'clipping', 'explosion', 'random step', 'Inf', 'Nan', 'averaging', 'minibatch gradient descent', 'stochastic gradient descent', 'bias', 'element-wise clipping', 'back-propagated gradient', 'hidden units', 'regularizing', 'information flow', 'LSTMs', 'self-loops', 'gating mechanisms')","('sequence modeling', 'instance of', 'recurrent')
('recurrent', 'subclass of', 'recursive nets')
('norm threshold', 'instance of', 'clipping')
('update parameters', 'instance of', 'parameter update')
('parameter update', 'instance of', 'true gradient')
('true gradient', 'instance of', 'explosion')
('clipping', 'instance of', 'random step')
('explosion', 'instance of', 'Inf')
('random step', 'subclass of', 'Nan')
('Inf', 'subclass of', 'random step')
('Nan', 'subclass of', 'random step')
('averaging', 'instance of', 'parameter update')
('minibatch gradient descent', 'subclass of', 'stochastic gradient descent')
('stochastic gradient descent', 'use', 'parameter update')
('bias', 'instance of', 'element-wise clipping')
('element-wise clipping', 'instance of', 'clipping')
('back-propagated gradient', 'instance of', 'parameter update')
('hidden units', 'instance of', 'regularizing')
('regularizing', 'instance of', 'information flow')
('information flow', 'subject of', 'LSTMs')
('LSTMs', 'subclass of', 'recursive nets')
('self-loops', 'instance of', 'gating mechanisms')"
10.12,0,"('sequence modeling', 'recurrent', 'recursive nets', 'magnitude', 'loss function', 'regularizer', 'back-propagated vectors', 'approximation', 'gradient explosion', 'span', 'dependencies', 'RNN', 'dynamics', 'knowledge', 'learning', 'deep architectures', 'implicit knowledge', 'explicit knowledge', 'verbalize', 'commonsense knowledge', 'specific facts', 'neural networks', 'memorize facts', 'stochastic gradient descent', 'presentations')","('sequence modeling', 'instance of', 'recurrent')
('recurrent', 'subclass of', 'recursive nets')
('magnitude', 'instance of', 'loss function')
('loss function', 'instance of', 'regularizer')
('regularizer', 'subject of', 'back-propagated vectors')
('back-propagated vectors', 'instance of', 'approximation')
('approximation', 'instance of', 'gradient explosion')
('span', 'instance of', 'dependencies')
('dependencies', 'instance of', 'RNN')
('RNN', 'instance of', 'dynamics')
('knowledge', 'instance of', 'learning')
('learning', 'instance of', 'deep architectures')
('deep architectures', 'instance of', 'implicit knowledge')
('implicit knowledge', 'instance of', 'explicit knowledge')
('explicit knowledge', 'instance of', 'verbalize')
('commonsense knowledge', 'instance of', 'specific facts')
('specific facts', 'instance of', 'memorize facts')
('neural networks', 'instance of', 'specific facts')
('memorize facts', 'use', 'stochastic gradient descent')
('stochastic gradient descent', 'instance of', 'presentations')"
10.12,1,"('memory cells', 'reading mechanism', 'writing mechanism', 'task network', 'explicit memory', 'neural Turing machine', 'representation', 'task network', 'recurrent net', 'memory', 'facts', 'control', 'reading addresses', 'writing addresses')","('memory cells', 'instance of', 'recurrent net')
('reading mechanism', 'instance of', 'control')
('writing mechanism', 'instance of', 'control')
('task network', 'instance of', 'representation')
('explicit memory', 'instance of', 'neural Turing machine')
('neural Turing machine', 'instance of', 'representation')
('representation', 'subject of', 'task network')
('task network', 'instance of', 'recurrent net')
('recurrent net', 'instance of', 'memory')
('memory', 'instance of', 'facts')
('facts', 'instance of', 'control')
('control', 'instance of', 'reading addresses')
('reading addresses', 'instance of', 'writing addresses')
('writing addresses', 'subject of', 'memory')"
10.12,2,"('neural networks', 'working memory system', 'information', 'memory components', 'systems', 'facts', 'neural networks', 'memory networks', 'memory cells', 'addressing mechanism', 'neural Turing machine', 'content-based soft attention mechanism', 'algorithmic mechanisms', 'memory cells', 'LSTMs', 'GRUs', 'functions', 'integer addresses', 'NTMs', 'softmax function', 'access to the memory', 'gradient descent', 'memory addresses')","('neural networks', 'subclass of', 'working memory system')
('working memory system', 'part of', 'information')
('memory components', 'part of', 'systems')
('neural networks', 'instance of', 'facts')
('memory networks', 'instance of', 'neural networks')
('memory cells', 'part of', 'addressing mechanism')
('neural Turing machine', 'instance of', 'memory networks')
('content-based soft attention mechanism', 'instance of', 'algorithmic mechanisms')
('memory cells', 'part of', 'LSTMs')
('LSTMs', 'instance of', 'neural networks')
('GRUs', 'instance of', 'neural networks')
('functions', 'part of', 'integer addresses')
('NTMs', 'instance of', 'neural networks')
('softmax function', 'instance of', 'functions')
('access to the memory', 'part of', 'memory addresses')
('gradient descent', 'use', 'neural networks')"
10.12,3,"('LSTM', 'GRU', 'memory cell', 'vector-valued memory cells', 'content-based addressing', 'location-based addressing', 'explicit memory', 'task neural network', 'RNN', 'LSTM RNN', 'information', 'gradients', 'back-propagation', 'weighted averages', 'memory addressing coefficients', 'probabilities', 'stochastic architectures', 'discrete decisions', 'optimization algorithms', 'deterministic algorithms', 'soft decisions')","('LSTM', 'subclass of', 'RNN')
('GRU', 'subclass of', 'RNN')
('memory cell', 'part of', 'RNN')
('vector-valued memory cells', 'instance of', 'memory cell')
('content-based addressing', 'instance of', 'memory cell')
('location-based addressing', 'instance of', 'memory cell')
('explicit memory', 'part of', 'memory cell')
('task neural network', 'instance of', 'RNN')
('RNN', 'instance of', 'neural networks')
('LSTM RNN', 'instance of', 'RNN')
('information', 'part of', 'memory cell')
('gradients', 'part of', 'back-propagation')
('back-propagation', 'use', 'optimization algorithms')
('weighted averages', 'part of', 'optimization algorithms')
('memory addressing coefficients', 'part of', 'probabilities')
('probabilities', 'part of', 'stochastic architectures')
('discrete decisions', 'subclass of', 'stochastic architectures')
('optimization algorithms', 'part of', 'deterministic algorithms')
('deterministic algorithms', 'instance of', 'optimization algorithms')
('soft decisions', 'part of', 'stochastic architectures')"
10.12,4,"('attention mechanism', 'machine translation', 'handwriting generation', 'Graves', 'recurrent neural networks', 'deep learning', 'sequential data', 'real-world tasks')","('attention mechanism', 'part of', 'machine translation')
('attention mechanism', 'part of', 'handwriting generation')
('Graves', 'instance of', 'recurrent neural networks')
('recurrent neural networks', 'subset of', 'deep learning')
('sequential data', 'part of', 'real-world tasks')"
10.12,5,"('deep learning techniques', 'good knowledge', 'algorithms', 'principles', 'machine learning practitioner', 'choose an algorithm', 'monitor and respond to feedback', 'improve a machine learning system', 'gather more data', 'model capacity', 'regularizing features', 'optimization', 'approximate inference', 'debug', 'software implementation', 'machine learning models', 'training algorithms', 'objective functions', 'important ingredient', 'machine learning expert', 'wide variety', 'different kinds of math', 'correct application of a commonplace algorithm', 'obscure algorithm', 'methodology', 'recommendations', 'practical design process', 'error metric', 'target value', 'working end-to-end pipeline')","('deep learning techniques', 'subset of', 'machine learning practitioner')
('good knowledge', 'important for', 'machine learning practitioner')
('algorithms', 'part of', 'deep learning techniques')
('principles', 'part of', 'deep learning techniques')
('machine learning practitioner', 'use', 'algorithms')
('machine learning practitioner', 'perform', 'monitor and respond to feedback')
('machine learning practitioner', 'apply', 'improve a machine learning system')
('machine learning practitioner', 'use', 'gather more data')
('model capacity', 'part of', 'machine learning models')
('regularizing features', 'part of', 'machine learning models')
('optimization', 'part of', 'training algorithms')
('approximate inference', 'part of', 'training algorithms')
('debug', 'part of', 'software implementation')
('machine learning models', 'part of', 'machine learning expert')
('training algorithms', 'part of', 'machine learning expert')
('objective functions', 'part of', 'machine learning expert')
('important ingredient', 'part of', 'machine learning expert')
('machine learning expert', 'require', 'wide variety')
('different kinds of math', 'part of', 'machine learning expert')
('correct application of a commonplace algorithm', 'part of', 'methodology')
('obscure algorithm', 'part of', 'methodology')
('recommendations', 'part of', 'methodology')
('practical design process', 'part of', 'methodology')
('error metric', 'part of', 'practical design process')
('target value', 'part of', 'practical design process')
('working end-to-end pipeline', 'part of', 'practical design process')"
11.1,0,"('Practical Methodology', 'performance metrics', 'instrumentation', 'overfitting', 'underfitting', 'data', 'software', 'Street View', 'address number transcription system', 'Google Maps', 'convolutional network', 'design methodology', 'error metric', 'performance', 'Bayes error', 'training data', 'real-world product', 'service', 'data collection', 'scientific question', 'algorithm', 'benchmark')","('Practical Methodology', 'performance metrics', 'instrumentation')
('overfitting', 'based on', 'data')
('underfitting', 'based on', 'data')
('data', 'part of', 'software')
('Street View', 'instance of', 'address number transcription system')
('Google Maps', 'instance of', 'service')
('convolutional network', 'subclass of', 'algorithm')
('design methodology', 'instance of', 'methodology')
('error metric', 'subclass of', 'performance metrics')
('performance', 'use', 'performance metrics')
('Bayes error', 'instance of', 'error metric')
('training data', 'part of', 'data')
('real-world product', 'instance of', 'product')
('service', 'use', 'software')
('data collection', 'part of', 'methodology')
('algorithm', 'part of', 'software')
('benchmark', 'based on', 'data')"
11.1,1,"('academic setting', 'error rate', 'benchmark results', 'real-world setting', 'application', 'safe', 'cost-effective', 'consumers', 'design decisions', 'performance metric', 'choice of metric', 'accuracy', 'error rate', 'spam detection system', 'legitimate message', 'spam message', 'total cost', 'binary classifier', 'rare event', 'medical test', 'accuracy', 'precision', 'recall', 'PR curve', 'score', 'feedforward')","('academic setting', 'part of', 'application')
('error rate', 'instance of', 'performance metric')
('benchmark results', 'instance of', 'performance metric')
('real-world setting', 'part of', 'application')
('application', 'based on', 'design decisions')
('safe', 'subclass of', 'cost-effective')
('cost-effective', 'subclass of', 'performance metric')
('consumers', 'instance of', 'application')
('design decisions', 'part of', 'application')
('performance metric', 'instance of', 'choice of metric')
('choice of metric', 'based on', 'accuracy')
('accuracy', 'instance of', 'performance metric')
('error rate', 'subclass of', 'performance metric')
('spam detection system', 'use', 'binary classifier')
('legitimate message', 'subject of', 'spam detection system')
('spam message', 'subject of', 'spam detection system')
('total cost', 'instance of', 'performance metric')
('binary classifier', 'instance of', 'rare event')
('rare event', 'part of', 'medical test')
('medical test', 'instance of', 'performance metric')
('accuracy', 'subclass of', 'performance metric')
('precision', 'subclass of', 'performance metric')
('recall', 'subclass of', 'performance metric')
('PR curve', 'part of', 'score')
('score', 'subclass of', 'performance metric')
('feedforward', 'based on', 'accuracy')"
11.1,2,"('network', 'disease', 'probability', 'threshold', 'precision', 'recall', 'F-score', 'area under PR curve', 'machine learning system', 'decision', 'human operator', 'Street View transcription system', 'photograph', 'address number', 'map', 'transcription', 'coverage', 'accuracy', 'click-through rates', 'user satisfaction surveys', 'performance metric')","('network', 'part of', 'machine learning system')
('disease', 'instance of', 'network')
('probability', 'part of', 'network')
('threshold', 'part of', 'network')
('precision', 'instance of', 'performance metric')
('recall', 'instance of', 'performance metric')
('F-score', 'subclass of', 'performance metric')
('area under PR curve', 'instance of', 'performance metric')
('machine learning system', 'based on', 'decision')
('decision', 'part of', 'machine learning system')
('human operator', 'subclass of', 'decision')
('Street View transcription system', 'instance of', 'machine learning system')
('photograph', 'part of', 'Street View transcription system')
('address number', 'part of', 'Street View transcription system')
('map', 'based on', 'photograph')
('transcription', 'part of', 'Street View transcription system')
('coverage', 'based on', 'transcription')
('accuracy', 'instance of', 'performance metric')
('click-through rates', 'instance of', 'performance metric')
('user satisfaction surveys', 'instance of', 'performance metric')
('performance metric', 'part of', 'machine learning system')"
11.2,0,"('default baseline models', 'algorithms', 'linear regression', 'deep learning', 'supervised learning', 'feedforward network', 'fully connected layers', 'convolutional network', 'piecewise linear unit', 'ReLUs', 'Leaky ReLUs', 'PreLUs', 'maxout', 'gated recurrent net', 'LSTM', 'GRU', 'optimization algorithm', 'SGD with momentum', 'learning rate decay', 'Adam', 'batch normalization', 'regularization', 'early stopping', 'dropout')","('default baseline models', 'part of', 'algorithms')
('algorithms', 'part of', 'linear regression')
('algorithms', 'part of', 'deep learning')
('linear regression', 'subclass of', 'supervised learning')
('deep learning', 'instance of', 'supervised learning')
('feedforward network', 'subclass of', 'deep learning')
('fully connected layers', 'part of', 'feedforward network')
('convolutional network', 'part of', 'deep learning')
('piecewise linear unit', 'instance of', 'full connected layers')
('ReLUs', 'subclass of', 'piecewise linear unit')
('Leaky ReLUs', 'subclass of', 'ReLUs')
('PreLUs', 'subclass of', 'ReLUs')
('maxout', 'subclass of', 'piecewise linear unit')
('gated recurrent net', 'subclass of', 'recurrent network')
('LSTM', 'subclass of', 'recurrent network')
('GRU', 'subclass of', 'recurrent network')
('optimization algorithm', 'part of', 'deep learning')
('SGD with momentum', 'subclass of', 'optimization algorithm')
('learning rate decay', 'subclass of', 'optimization algorithm')
('Adam', 'subclass of', 'optimization algorithm')
('batch normalization', 'part of', 'deep learning')
('regularization', 'part of', 'deep learning')
('early stopping', 'part of', 'regularization')
('dropout', 'part of', 'regularization')"
11.3,0,"('Practical Methodology', 'convolutional network', 'ImageNet', 'unsupervised learning', 'natural language processing', 'unsupervised word embeddings', 'computer vision', 'semi-supervised setting', 'labeled examples', 'end-to-end baseline', 'unsuper...","('Practical Methodology', 'based on', 'unsupervised learning'), 
('convolutional network', 'use', 'ImageNet'), 
('unsupervised learning', 'facet of', 'natural language processing'), 
('unsupervised word embeddings', 'part of', 'computer vision'), 
('semi-supervised setting', 'based on', 'labeled examples'), 
('end-to-end baseline', 'subject of', 'computer vision'), 
('unsupervised learning', 'subclass of', 'deep learning')"
11.4,0,"('Practical Methodology', 'object recognition', 'medical applications', 'model', 'regularization', 'hyperparameters', 'weight decay coefficients', 'dropout', 'generalization error')","('Practical Methodology', 'based on', 'object recognition'),
('object recognition', 'part of', 'medical applications'),
('model', 'use', 'object recognition'),
('regularization', 'part of', 'model'),
('hyperparameters', 'part of', 'model'),
('weight decay coefficients', 'part of', 'regularization'),
('dropout', 'part of', 'regularization'),
('generalization error', 'based on', 'dropout')"
11.4,1,"('Practical Methodology', 'hyperparameters', 'memory', 'runtime', 'effective capacity', 'learning algorithm', 'representational capacity', 'cost function', 'model', 'hidden units', 'underfitting', 'overfitting')","('Practical Methodology', 'based on', 'hyperparameters'),
('memory', 'part of', 'runtime'),
('runtime', 'facet of', 'learning algorithm'),
('effective capacity', 'facet of', 'learning algorithm'),
('learning algorithm', 'part of', 'model'),
('representational capacity', 'part of', 'model'),
('cost function', 'part of', 'learning algorithm'),
('model', 'part of', 'learning algorithm'),
('hidden units', 'part of', 'model'),
('underfitting', 'based on', 'model'),
('overfitting', 'based on', 'model')"
11.4,2,"('PRACTICAL METHODOLOGY', 'hidden units', 'hyperparameters', 'weight decay coefficient', 'learning algorithm', 'linear pieces', 'maxout unit', 'preprocessing step', 'learning rate', 'optimization problem', 'gradient descent', 'training error', 'quadratic case', 'convex loss function', 'test error', 'model capacity', 'regularization', 'network', 'hidden units', 'computational costs')","('PRACTICAL METHODOLOGY', 'convex loss function', 'weight decay coefficient')
('PRACTICAL METHODOLOGY', 'learning algorithm', 'gradient descent')
('PRACTICAL METHODOLOGY', 'preprocessing step', 'optimization problem')
('PRACTICAL METHODOLOGY', 'learning rate', 'optimization problem')
('PRACTICAL METHODOLOGY', 'regularization', 'optimization problem')
('PRACTICAL METHODOLOGY', 'model capacity', 'optimization problem')
('PRACTICAL METHODOLOGY', 'network', 'optimization problem')
('PRACTICAL METHODOLOGY', 'hidden units', 'maxout unit')
('PRACTICAL METHODOLOGY', 'hidden units', 'network')
('PRACTICAL METHODOLOGY', 'computational costs', 'network')"
11.4,3,"('PRACTICAL METHODOLOGY', 'learning rate', 'training error', 'generalization error', 'regularization hyperparameters', 'model capacity', 'dropout', 'weight decay', 'test set', 'hyperparameters', 'training data', 'model capacity', 'training set size', 'computational cost', 'training', 'inference')","('PRACTICAL METHODOLOGY', 'learning rate', 'training error')
('PRACTICAL METHODOLOGY', 'learning rate', 'generalization error')
('PRACTICAL METHODOLOGY', 'learning rate', 'regularization hyperparameters')
('PRACTICAL METHODOLOGY', 'model capacity', 'dropout')
('PRACTICAL METHODOLOGY', 'model capacity', 'weight decay')
('PRACTICAL METHODOLOGY', 'test set', 'hyperparameters')
('PRACTICAL METHODOLOGY', 'training data', 'model capacity')
('PRACTICAL METHODOLOGY', 'training data', 'training set size')
('PRACTICAL METHODOLOGY', 'computational cost', 'training')
('PRACTICAL METHODOLOGY', 'computational cost', 'inference')"
11.4,4,"('PRACTICAL METHODOLOGY', 'hidden units', 'model capacity', 'learning rate', 'optimization failure', 'convolution kernel width', 'parameter storage', 'runtime', 'output dimension', 'implicit zero padding', 'weight decay coefficient', 'dropout rate', 'representation size')","('PRACTICAL METHODOLOGY', 'hidden units', 'model capacity')
('PRACTICAL METHODOLOGY', 'learning rate', 'optimization failure')
('PRACTICAL METHODOLOGY', 'convolution kernel width', 'parameter storage')
('PRACTICAL METHODOLOGY', 'runtime', 'output dimension')
('PRACTICAL METHODOLOGY', 'implicit zero padding', 'convolution kernel width')
('PRACTICAL METHODOLOGY', 'weight decay coefficient', 'optimization failure')
('PRACTICAL METHODOLOGY', 'dropout rate', 'model capacity')"
11.4,5,"('PRACTICAL METHODOLOGY', 'hyperparameters', 'learning algorithm', 'logistic regression', 'SVMs', 'neural networks', 'hyperparameter tuning', 'validation error', 'automated algorithms', 'optimization', 'objective function', 'constraints', 'hyperparameter optimization algorithms', 'grid search')","('PRACTICAL METHODOLOGY', 'hyperparameters', 'learning algorithm')
('PRACTICAL METHODOLOGY', 'hyperparameters', 'logistic regression')
('PRACTICAL METHODOLOGY', 'hyperparameters', 'SVMs')
('PRACTICAL METHODOLOGY', 'hyperparameters', 'neural networks')
('PRACTICAL METHODOLOGY', 'hyperparameter tuning', 'validation error')
('PRACTICAL METHODOLOGY', 'hyperparameter tuning', 'automated algorithms')
('PRACTICAL METHODOLOGY', 'hyperparameter tuning', 'optimization')
('PRACTICAL METHODOLOGY', 'hyperparameter tuning', 'objective function')
('PRACTICAL METHODOLOGY', 'hyperparameter tuning', 'constraints')
('PRACTICAL METHODOLOGY', 'hyperparameter optimization algorithms', 'hyperparameter tuning')
('PRACTICAL METHODOLOGY', 'hyperparameter optimization algorithms', 'grid search')"
11.4,6,"('grid search', 'random search', 'hyperparameters', 'training', 'validation set error', 'computation', 'influential hyperparameters', 'non-influential hyperparameters', 'probability distribution', 'uniform distribution', 'log-uniform distribution')","('grid search', 'hyperparameters', 'training')
('grid search', 'hyperparameters', 'validation set error')
('random search', 'hyperparameters', 'training')
('random search', 'hyperparameters', 'validation set error')
('hyperparameters', 'computation', 'training')
('hyperparameters', 'computation', 'validation set error')
('hyperparameters', 'influential hyperparameters', 'training')
('hyperparameters', 'influential hyperparameters', 'validation set error')
('hyperparameters', 'non-influential hyperparameters', 'training')
('hyperparameters', 'non-influential hyperparameters', 'validation set error')
('hyperparameters', 'probability distribution', 'uniform distribution')
('hyperparameters', 'probability distribution', 'log-uniform distribution')"
11.4,7,"('Practical Methodology', 'hyperparameters', 'grid search', 'logarithmic scale', 'learning rate', 'number of hidden units', 'random search', 'Bernoulli', 'multinoulli', 'uniform distribution')","('Practical Methodology', 'instance of', 'hyperparameters')
('hyperparameters', 'part of', 'Practical Methodology')
('hyperparameters', 'subject of', 'grid search')
('grid search', 'based on', 'hyperparameters')
('grid search', 'part of', 'Practical Methodology')
('logarithmic scale', 'based on', 'learning rate')
('learning rate', 'part of', 'Practical Methodology')
('number of hidden units', 'based on', 'hyperparameters')
('number of hidden units', 'part of', 'Practical Methodology')
('random search', 'based on', 'hyperparameters')
('random search', 'part of', 'Practical Methodology')
('Bernoulli', 'subclass of', 'multinoulli')
('multinoulli', 'subclass of', 'uniform distribution')
('uniform distribution', 'subclass of', 'Practical Methodology')"
11.4,8,"('hyperparameters', 'grid search', 'random search', 'Bergstra and Bengio', 'validation set error', 'model-based hyperparameter optimization', 'optimization', 'Bayesian regression model')","('hyperparameters', 'subject of', 'grid search')
('grid search', 'based on', 'hyperparameters')
('hyperparameters', 'subject of', 'random search')
('random search', 'based on', 'hyperparameters')
('Bergstra and Bengio', 'use', 'grid search')
('validation set error', 'subject of', 'model-based hyperparameter optimization')
('model-based hyperparameter optimization', 'based on', 'validation set error')
('optimization', 'part of', 'model-based hyperparameter optimization')
('Bayesian regression model', 'use', 'model-based hyperparameter optimization')"
11.5,0,"('Spearmint', 'TPE', 'SMAC', 'Bayesian hyperparameter optimization', 'Spearmint', 'TPE', 'SMAC', 'Bayesian hyperparameter optimization', 'hyperparameter optimization algorithms', 'Swersky et al.', 'debugging strategies', 'machine learning systems')","('Spearmint', 'use', 'TPE')
('TPE', 'part of', 'hyperparameter optimization algorithms')
('TPE', 'use', 'SMAC')
('SMAC', 'part of', 'hyperparameter optimization algorithms')
('SMAC', 'use', 'Bayesian hyperparameter optimization')
('Bayesian hyperparameter optimization', 'part of', 'hyperparameter optimization algorithms')
('Spearmint', 'based on', 'hyperparameter optimization algorithms')
('TPE', 'based on', 'hyperparameter optimization algorithms')
('SMAC', 'based on', 'hyperparameter optimization algorithms')
('Bayesian hyperparameter optimization', 'based on', 'hyperparameter optimization algorithms')
('hyperparameter optimization algorithms', 'use', 'Swersky et al.')
('debugging strategies', 'part of', 'machine learning systems')
('machine learning systems', 'based on', 'debugging strategies')"
11.5,1,"('neural network', 'classification task', 'test error', 'machine learning models', 'debugging strategies', 'visualize the model', 'evaluate bugs', 'visualize the worst mistakes')","('neural network', 'part of', 'machine learning models')
('classification task', 'based on', 'machine learning models')
('test error', 'subject of', 'machine learning models')
('machine learning models', 'part of', 'debugging strategies')
('visualize the model', 'based on', 'machine learning models')
('evaluate bugs', 'subject of', 'debugging strategies')
('debugging strategies', 'part of', 'machine learning models')
('visualize the worst mistakes', 'based on', 'debugging strategies')"
11.5,2,"('Practical Methodology', 'Street View', 'address number detection system', 'transcription network', 'train and test error', 'underfitting', 'software defect', 'classification dataset', 'biases', 'autoencoder', 'generative model', 'back-propagated derivatives', 'numerical derivatives')","('Practical Methodology', 'instance of', 'Street View'), ('Street View', 'use', 'address number detection system'), ('transcription network', 'instance of', 'train and test error'), ('train and test error', 'subclass of', 'underfitting'), ('software defect', 'instance of', 'classification dataset'), ('biases', 'subclass of', 'autoencoder'), ('generative model', 'subclass of', 'autoencoder'), ('back-propagated derivatives', 'subclass of', 'numerical derivatives')"
11.5,3,"('Practical Methodology', 'finite differences', 'automatic differentiation', 'centered difference', 'perturbation size', 'gradient', 'Jacobian', 'vector-valued function', 'back-propagate', 'finite precision numerical computations', 'random projections', 'complex numbers', 'complex-valued case')","('finite differences', 'instance of', 'Practical Methodology'), ('automatic differentiation', 'use', 'finite differences'), ('centered difference', 'instance of', 'finite differences'), ('perturbation size', 'instance of', 'centered difference'), ('gradient', 'subclass of', 'Jacobian'), ('vector-valued function', 'instance of', 'Jacobian'), ('back-propagate', 'instance of', 'vector-valued function'), ('finite precision numerical computations', 'subclass of', 'random projections'), ('complex numbers', 'subclass of', 'random projections'), ('complex-valued case', 'subclass of', 'complex numbers')"
11.6,0,"('neural network activations', 'pre-activation value', 'hidden units', 'saturate', 'rectifiers', 'tanh units', 'propagated gradients', 'magnitude of parameter gradients', 'parameter updates', 'minibatch', 'deep learning algorithms', 'guarantee', 'approximate inference algorithms', 'optimization problems', 'objective function', 'subset of variables', 'convergence', 'rounding error', 'tolerance parameter', 'Multi-Digit Number Recognition', 'Street View transcription system', 'data collection', 'dataset curation', 'machine learning techniques', 'house')","('hidden units', 'instance of', 'neural network activations'), ('saturate', 'based on', 'rectifiers'), ('tanh units', 'based on', 'rectifiers'), ('propagated gradients', 'instance of', 'hidden units'), ('magnitude of parameter gradients', 'subclass of', 'propagated gradients'), ('parameter updates', 'based on', 'propagated gradients'), ('minibatch', 'instance of', 'parameter updates'), ('deep learning algorithms', 'subclass of', 'minibatch'), ('guarantee', 'based on', 'approximate inference algorithms'), ('optimization problems', 'subclass of', 'objective function'), ('subset of variables', 'instance of', 'tolerance parameter'), ('convergence', 'based on', 'rounding error'), ('Multi-Digit Number Recognition', 'use', 'Street View transcription system'), ('data collection', 'instance of', 'Street View transcription system'), ('dataset curation', 'instance of', 'data collection'), ('machine learning techniques', 'instance of', 'house')"
11.6,1,"('performance metrics', 'accuracy', 'coverage', 'convolutional network', 'rectified linear units', 'output layer', 'softmax units', 'classification', 'baseline system', 'input x', 'output sequence', 'probability', 'threshold', 'specialized output layer', 'cost function', 'log-likelihood', 'example rejection mechanism', 'underfitting', 'overfitting', 'train and test set performance', 'labeled examples')","('accuracy', 'instance of', 'performance metrics'), ('coverage', 'instance of', 'performance metrics'), ('convolutional network', 'use', 'rectified linear units'), ('rectified linear units', 'instance of', 'output layer'), ('softmax units', 'instance of', 'output layer'), ('classification', 'subclass of', 'softmax units'), ('baseline system', 'instance of', 'classification'), ('input x', 'instance of', 'baseline system'), ('output sequence', 'instance of', 'probability'), ('threshold', 'instance of', 'specialized output layer'), ('cost function', 'instance of', 'log-likelihood'), ('example rejection mechanism', 'instance of', 'underfitting'), ('overfitting', 'subclass of', 'underfitting'), ('train and test set performance', 'instance of', 'labeled examples')"
11.6,2,"('worst errors', 'training set transcriptions', 'confidence', 'cropping operation', 'address number detection system', 'crop region', 'hyperparameters', 'underfitting', 'dataset', 'transcription project')","('worst errors', 'instance of', 'training set transcriptions'), ('confidence', 'instance of', 'worst errors'), ('cropping operation', 'instance of', 'address number detection system'), ('crop region', 'subclass of', 'cropping operation'), ('hyperparameters', 'instance of', 'underfitting'), ('dataset', 'instance of', 'transcription project')"
12.1,0,"('deep learning', 'computer vision', 'speech recognition', 'natural language processing', 'neural network implementations', 'AI applications', 'vision tasks', 'language tasks', 'connectionism', 'neurons')","('deep learning', 'instance of', 'neural network implementations')
('computer vision', 'part of', 'AI applications')
('speech recognition', 'part of', 'AI applications')
('natural language processing', 'part of', 'AI applications')
('neural network implementations', 'subclass of', 'connectionism')
('neurons', 'use', 'connectionism')"
12.1,1,"('neural networks', 'CPU', 'GPU', 'graphics processing units', 'graphics processing hardware', 'video gaming systems', 'matrix multiplication', 'division')","('neural networks', 'instance of', 'CPU')
('neural networks', 'instance of', 'GPU')
('graphics processing units', 'part of', 'graphics processing hardware')
('video gaming systems', 'instance of', 'graphics processing hardware')
('matrix multiplication', 'based on', 'division')"
12.1,2,"('neural network algorithms', 'graphics cards', 'GPUs', 'memory bandwidth', 'neurons', 'GPU hardware', 'scientific computing', 'fully connected neural network', 'supervised convolutional networks', 'GP-GPUs', 'NVIDIA', 'CUDA programming language')","('neural network algorithms', 'based on', 'graphics cards')
('graphics cards', 'instance of', 'GPUs')
('GPUs', 'based on', 'memory bandwidth')
('neurons', 'instance of', 'GPU hardware')
('fully connected neural network', 'instance of', 'neural network algorithms')
('supervised convolutional networks', 'instance of', 'neural network algorithms')
('GP-GPUs', 'subclass of', 'GPUs')
('NVIDIA', 'instance of', 'GPUs')
('CUDA programming language', 'use', 'GPUs')"
12.1,3,"('GP-GPUs', 'deep learning researchers', 'writing efficient code', 'GPU code', 'coalesced reads or writes', 'memory operations', 'warps', 'branching', 'high performance operations', 'Pylearn2', 'Theano', 'cuda-convnet', 'TensorFlow', 'Torch')","('GP-GPUs', 'used by', 'deep learning researchers')
('writing efficient code', 'based on', 'GPU code')
('coalesced reads or writes', 'part of', 'memory operations')
('warps', 'part of', 'GPU code')
('branching', 'based on', 'GPU code')
('high performance operations', 'part of', 'GPU code')
('Pylearn2', 'instance of', 'deep learning researchers')
('Theano', 'instance of', 'deep learning researchers')
('cuda-convnet', 'instance of', 'deep learning researchers')
('TensorFlow', 'instance of', 'deep learning researchers')
('Torch', 'instance of', 'deep learning researchers')"
12.1,4,"('Large-Scale Distributed Implementations', 'data parallelism', 'model parallelism', 'asynchronous stochastic gradient descent', 'multi-machine implementation', 'parameter server', 'Distributed asynchronous gradient descent', 'Model Compression')","('Large-Scale Distributed Implementations', 'instance of', 'data parallelism')
('Large-Scale Distributed Implementations', 'instance of', 'model parallelism')
('asynchronous stochastic gradient descent', 'instance of', 'Large-Scale Distributed Implementations')
('multi-machine implementation', 'instance of', 'Large-Scale Distributed Implementations')
('parameter server', 'instance of', 'Large-Scale Distributed Implementations')
('Distributed asynchronous gradient descent', 'instance of', 'Large-Scale Distributed Implementations')
('Model Compression', 'instance of', 'Large-Scale Distributed Implementations')"
12.1,5,"('Model Compression', 'dynamic structure', 'ensemble models', 'conditional computation')","('Model Compression', 'instance of', 'dynamic structure')
('Model Compression', 'instance of', 'ensemble models')
('Model Compression', 'instance of', 'conditional computation')"
12.1,6,"('dynamic structure', 'cascade of classifiers', 'boosted decision trees', 'hard attention', 'machine learning model')","('dynamic structure', 'instance of', 'cascade of classifiers')
('dynamic structure', 'instance of', 'boosted decision trees')
('dynamic structure', 'instance of', 'hard attention')
('dynamic structure', 'instance of', 'machine learning model')"
12.1,7,"('mixture of experts', 'hard mixture of experts', 'combinatorial gaters', 'dynamic routing', 'attention mechanisms')","('mixture of experts', 'instance of', 'hard mixture of experts')
('hard mixture of experts', 'instance of', 'combinatorial gaters')
('dynamic routing', 'instance of', 'hard mixture of experts')
('attention mechanisms', 'instance of', 'hard mixture of experts')"
12.1,8,"('specialized hardware implementations', 'ASIC', 'FPGA', 'binary representations', 'analog implementations', 'hybrid implementations')","('specialized hardware implementations', 'instance of', 'ASIC')
('specialized hardware implementations', 'instance of', 'FPGA')
('binary representations', 'instance of', 'specialized hardware implementations')
('analog implementations', 'instance of', 'specialized hardware implementations')
('hybrid implementations', 'instance of', 'specialized hardware implementations')"
12.2,0,"('deep learning', 'machine learning', 'computer science', 'mathematics')","('deep learning', 'based on', 'machine learning')
('machine learning', 'part of', 'computer science')
('mathematics', 'part of', 'computer science')"
12.2,1,"('computer vision', 'deep learning', 'image restoration', 'image synthesis', 'ensemble approach')","('image restoration', 'based on', 'computer vision')
('image synthesis', 'based on', 'computer vision')
('ensemble approach', 'based on', 'deep learning')"
12.2,2,"('contrast normalization', 'deep learning', 'image preprocessing')","('contrast normalization', 'part of', 'deep learning')
('image preprocessing', 'based on', 'deep learning')"
12.2,3,"('GCN', 'L2 norm', 'sphering', 'preprocessing')","('GCN', 'based on', 'L2 norm')
('sphering', 'based on', 'preprocessing')"
12.2,4,"('GCN', 'PCA', 'whitening', 'local contrast normalization')","('GCN', 'based on', 'PCA')
('whitening', 'based on', 'PCA')
('local contrast normalization', 'based on', 'preprocessing')"
12.2,5,"('GCN', 'LCN', 'Sermanet et al.', 'network')","('GCN', 'subclass of', 'network')
('LCN', 'subclass of', 'network')
('Sermanet et al.', 'instance of', 'network')"
12.3,0,"('dataset augmentation', 'dataset', 'class', 'object recognition', 'transformations', 'geometric operations', 'computer vision applications', 'random perturbation', 'nonlinear geometric distortions', 'speech recognition', 'acoustic signal', 'natural language utterance', 'acoustic input vectors', 'hand-designed features', 'deep learning systems', 'target output sequence', 'automatic speech recognition', 'conditional distribution', 'hidden Markov models', 'Gaussian mixture models', 'acoustic features', 'phonemes')","('dataset augmentation', 'subclass of', 'dataset')
('dataset', 'instance of', 'class')
('object recognition', 'instance of', 'computer vision applications')
('transformations', 'instance of', 'geometric operations')
('random perturbation', 'instance of', 'transformations')
('nonlinear geometric distortions', 'instance of', 'transformations')
('speech recognition', 'instance of', 'computer vision applications')
('acoustic signal', 'instance of', 'speech recognition')
('natural language utterance', 'instance of', 'acoustic signal')
('acoustic input vectors', 'instance of', 'acoustic signal')
('hand-designed features', 'instance of', 'acoustic signal')
('deep learning systems', 'instance of', 'acoustic signal')
('target output sequence', 'instance of', 'automatic speech recognition')
('automatic speech recognition', 'instance of', 'speech recognition')
('conditional distribution', 'instance of', 'hidden Markov models')
('hidden Markov models', 'instance of', 'automatic speech recognition')
('Gaussian mixture models', 'instance of', 'hidden Markov models')
('acoustic features', 'instance of', 'acoustic input vectors')
('phonemes', 'instance of', 'target output sequence')"
12.3,1,"('neural networks', 'ASR', 'GMM-HMM systems', 'TIMIT corpus', 'phoneme recognition', 'MNIST', 'unsupervised learning', 'restricted Boltzmann machines', 'deep feedforward networks', 'spectral acoustic representations', 'HMM states', 'recognition rate', 'phoneme error rate', 'speaker-adaptive features', 'large-vocabulary speech recognition', 'sequences of words', 'deep networks')","('neural networks', 'instance of', 'ASR')
('ASR', 'instance of', 'GMM-HMM systems')
('GMM-HMM systems', 'instance of', 'ASR')
('TIMIT corpus', 'instance of', 'phoneme recognition')
('phoneme recognition', 'instance of', 'ASR')
('MNIST', 'instance of', 'unsupervised learning')
('unsupervised learning', 'instance of', 'restricted Boltzmann machines')
('restricted Boltzmann machines', 'instance of', 'deep feedforward networks')
('deep feedforward networks', 'instance of', 'neural networks')
('spectral acoustic representations', 'instance of', 'ASR')
('HMM states', 'instance of', 'ASR')
('recognition rate', 'instance of', 'ASR')
('phoneme error rate', 'instance of', 'ASR')
('speaker-adaptive features', 'instance of', 'ASR')
('large-vocabulary speech recognition', 'instance of', 'ASR')
('sequences of words', 'instance of', 'large-vocabulary speech recognition')
('deep networks', 'instance of', 'neural networks')"
12.3,2,"('rectified linear units', 'dropout', 'mobile phones', 'labeled datasets', 'unsupervised pretraining', 'word error rate', 'GMM-HMM technology', 'convolutional networks', 'time-delay neural networks', 'spectrogram', 'two-dimensional convolutional models', 'end-to-end deep learning speech recognition systems', 'HMM', 'deep LSTM RNN', 'MAP inference', 'CTC framework', 'deep RNN', 'state variables', 'phoneme error rate', 'acoustic-level information', 'phonetic-level information')","('rectified linear units', 'instance of', 'dropout')
('dropout', 'instance of', 'neural networks')
('mobile phones', 'instance of', 'labeled datasets')
('labeled datasets', 'instance of', 'unsupervised pretraining')
('unsupervised pretraining', 'instance of', 'neural networks')
('word error rate', 'instance of', 'ASR')
('GMM-HMM technology', 'instance of', 'ASR')
('convolutional networks', 'instance of', 'neural networks')
('time-delay neural networks', 'instance of', 'neural networks')
('spectrogram', 'instance of', 'acoustic-level information')
('two-dimensional convolutional models', 'instance of', 'convolutional networks')
('end-to-end deep learning speech recognition systems', 'instance of', 'neural networks')
('HMM', 'instance of', 'GMM-HMM technology')
('deep LSTM RNN', 'instance of', 'neural networks')
('MAP inference', 'instance of', 'GMM-HMM technology')
('CTC framework', 'instance of', 'end-to-end deep learning speech recognition systems')
('deep RNN', 'instance of', 'neural networks')
('state variables', 'instance of', 'deep RNN')
('phoneme error rate', 'instance of', 'ASR')
('acoustic-level information', 'instance of', 'ASR')
('phonetic-level information', 'instance of', 'ASR')"
12.4,0,"('Natural Language Processing', 'NLP', 'machine translation', 'language models', 'neural network techniques', 'sequential data', 'words', 'bytes', 'language model', '-grams', 'n-grams', 'tokens', 'conditional probability', 'probability distribution')","('Natural Language Processing', 'instance of', 'NLP')
('NLP', 'instance of', 'machine translation')
('machine translation', 'instance of', 'NLP')
('language models', 'instance of', 'NLP')
('neural network techniques', 'instance of', 'NLP')
('sequential data', 'instance of', 'NLP')
('words', 'instance of', 'language model')
('bytes', 'instance of', 'language model')
('language model', 'instance of', '-grams')
('-grams', 'instance of', 'n-grams')
('n-grams', 'instance of', 'language model')
('tokens', 'instance of', 'sequential data')
('conditional probability', 'instance of', 'probability distribution')
('probability distribution', 'instance of', 'language model')"
12.4,1,"('chain rule of probability', 'probability distribution', 'n-gram models', 'statistical language modeling', 'unigram', 'bigram', 'trigram', 'marginal probability', 'conditional distribution', 'maximum likelihood', 'test set counts', 'catastrophic outcomes', 'smoothing techniques')","('chain rule of probability', 'based on', 'probability distribution')
('n-gram models', 'based on', 'statistical language modeling')
('unigram', 'part of', 'n-gram models')
('bigram', 'part of', 'n-gram models')
('trigram', 'part of', 'n-gram models')
('marginal probability', 'based on', 'conditional distribution')
('maximum likelihood', 'based on', 'conditional distribution')
('test set counts', 'based on', 'catastrophic outcomes')"
12.4,2,"('Bayesian inference', 'Dirichlet prior', 'mixture model', 'back-off methods', 'curse of dimensionality', 'nearest-neighbor lookup', 'local non-parametric predictor', 'k-nearest neighbors', 'language model', 'class-based language models', 'word categories', 'clustering algorithm', 'composite models')","('Bayesian inference', 'based on', 'Dirichlet prior')
('mixture model', 'based on', 'back-off methods')
('nearest-neighbor lookup', 'part of', 'local non-parametric predictor')
('k-nearest neighbors', 'part of', 'local non-parametric predictor')
('language model', 'based on', 'class-based language models')
('word categories', 'part of', 'class-based language models')
('clustering algorithm', 'based on', 'composite models')"
12.4,3,"('Neural Language Models', 'language model', 'curse of dimensionality problem', 
'distributed representation', 'words', 'class-based n-gram models', 
'similar words', 'contexts', 'statistical strength', 'attributes', 
'generalization', 'training sentence', 'exponentially large number of semantically related sentences', 
'word embeddings', 'raw symbols', 'feature space', 'Euclidean distance', 
'embedding space', 'words with similar meanings', 'word embedding space', 
'Neural networks', 'hidden layer', 'convolutional network', 
'image embedding', 'NLP practitioners', 'natural language processing')","('Neural Language Models', 'language model', 'curse of dimensionality problem')
('words', 'language model', 'class-based n-gram models')
('similar words', 'language model', 'contexts')
('attributes', 'language model', 'statistical strength')
('training sentence', 'language model', 'exponentially large number of semantically related sentences')
('word embeddings', 'language model', 'feature space')
('raw symbols', 'language model', 'Euclidean distance')
('words with similar meanings', 'language model', 'word embedding space')
('Neural networks', 'hidden layer', 'language model')
('convolutional network', 'hidden layer', 'language model')
('image embedding', 'hidden layer', 'language model')
('NLP practitioners', 'convolutional network', 'natural language processing')"
12.4,4,"('neural machine translation model', 'word embeddings', 'Bahdanau et al. (2015)', 'linear component', 'softmax function', 'vocabularies', 'V', 'affine transformation', 'hidden representation', 'output space', 'weight matrix', 'memory cost', 'computational cost', 'training time', 'test time', 'likelihood', 'gradient', 'probabilities')","('neural machine translation model', 'word embeddings', 'Bahdanau et al. (2015)')
('linear component', 'word embeddings', 'softmax function')
('vocabularies', 'softmax function', 'V')
('affine transformation', 'softmax function', 'hidden representation')
('output space', 'affine transformation', 'weight matrix')
('memory cost', 'affine transformation', 'hidden representation')
('computational cost', 'affine transformation', 'hidden representation')
('training time', 'affine transformation', 'hidden representation')
('test time', 'affine transformation', 'hidden representation')
('likelihood', 'softmax function', 'probabilities')
('gradient', 'softmax function', 'probabilities')"
12.4,5,"('loss functions', 'gradient', 'Vincent et al. (2015)', 'cross-entropy loss', 'softmax output layer', 'top hidden layer', 'output probabilities', 'learned weights', 'learned biases', 'affine-softmax output layer', 'computations', 'neural language models', 'vocabulary size', 'neural net', 'n-gram model', 'shortlist', 'tail list', 'context', 'sigmoid output unit', 'probability distribution', 'generational advantage')","('loss functions', 'gradient', 'Vincent et al. (2015)')
('cross-entropy loss', 'softmax output layer', 'top hidden layer')
('output probabilities', 'softmax output layer', 'learned weights')
('output probabilities', 'softmax output layer', 'learned biases')
('affine-softmax output layer', 'softmax output layer', 'learned weights')
('affine-softmax output layer', 'softmax output layer', 'learned biases')
('computations', 'affine-softmax output layer', 'neural language models')
('vocabulary size', 'affine-softmax output layer', 'neural language models')
('neural net', 'top hidden layer', 'n-gram model')
('shortlist', 'top hidden layer', 'tail list')
('context', 'top hidden layer', 'sigmoid output unit')
('probability distribution', 'sigmoid output unit', 'generational advantage')"
12.4,6,"('computational burden', 'high-dimensional output layers', 'large vocabulary sets', 'hierarchical softmax', 'neural language models', 'categories of words', 'categories of categories of words', 'nested categories', 'tree', 'balanced tree', 'conditional probabilities', 'logistic regression model', 'context', 'supervised learning', 'cross-entropy loss', 'log-likelihood', 'gradients', 'hidden layer activations', 'optimize the tree structure', 'information theory')","('computational burden', 'high-dimensional output layers', 'hierarchical softmax')
('large vocabulary sets', 'hierarchical softmax', 'neural language models')
('categories of words', 'neural language models', 'categories of categories of words')
('categories of categories of words', 'neural language models', 'nested categories')
('tree', 'nested categories', 'balanced tree')
('conditional probabilities', 'balanced tree', 'logistic regression model')
('context', 'neural language models', 'supervised learning')
('cross-entropy loss', 'supervised learning', 'log-likelihood')
('gradients', 'logistic regression model', 'hidden layer activations')
('optimize the tree structure', 'balanced tree', 'information theory')"
12.4,7,"('hierarchy of word categories', 'leaves', 'internal nodes', 'binary decisions', 'super-class', 'classes', 'chain rule for conditional probabilities', 'conditional probabilities')","('hierarchy of word categories', 'leaves', 'internal nodes')
('binary decisions', 'internal nodes', 'super-class')
('binary decisions', 'internal nodes', 'classes')
('chain rule for conditional probabilities', 'internal nodes', 'conditional probabilities')
('conditional probabilities', 'internal nodes', 'chain rule for conditional probabilities')"
12.4,8,"('neural language model', 'word', 'vocabulary', 'hierarchical softmax', 'hierarchy')","('neural language model', 'word', 'vocabulary')
('hierarchical softmax', 'part of', 'vocabulary')
('hierarchy', 'subclass of', 'vocabulary')"
12.4,9,"('pre-softmax activations', 'proposal distribution', 'importance sampling', 'biased importance sampling')","('pre-softmax activations', 'instance of', 'proposal distribution')
('importance sampling', 'instance of', 'biased importance sampling')"
12.4,10,"('unigram distribution', 'bigram distribution', 'importance sampling', 'sparse output layers', 'bag of words', 'ranking loss')","('unigram distribution', 'instance of', 'importance sampling')
('bigram distribution', 'instance of', 'importance sampling')
('sparse output layers', 'instance of', 'importance sampling')
('bag of words', 'instance of', 'importance sampling')
('ranking loss', 'instance of', 'importance sampling')"
12.4,11,"('n-grams model', 'hash tables', 'trees', 'embedding layers', 'tiled convolutional networks', 'ensemble learning', 'maximum entropy model')","('n-grams model', 'instance of', 'hash tables')
('trees', 'instance of', 'hash tables')
('embedding layers', 'instance of', 'hash tables')
('tiled convolutional networks', 'instance of', 'hash tables')
('ensemble learning', 'instance of', 'hash tables')
('maximum entropy model', 'instance of', 'hash tables')"
12.4,12,"('neural network', 'language model', 'machine translation', 'translation system', 'n-gram model', 'maximum entropy language model', 'conditional distribution', 'statistical machine translation', 'MLP')","('neural network', 'instance of', 'language model')
('machine translation', 'instance of', 'translation system')
('n-gram model', 'instance of', 'language model')
('maximum entropy language model', 'instance of', 'language model')
('conditional distribution', 'instance of', 'statistical machine translation')
('MLP', 'instance of', 'neural network')"
12.4,13,"('output object', 'encoder-decoder architecture', 'surface representation', 
'semantic representation', 'encoder', 'source object', 'French sentence', 
'image', 'decoder', 'hidden representations', 'meaning of sentences',
'systems', 'machine translation', 'caption generation', 'MLP-based approach',
'sequences', 'fixed length', 'translation', 'model', 'RNN', 'conditional distribution',
'summary', 'context', 'list of vectors', 'vector', 'tensor', 'convolutional network',
'target language', 'encoder-decoder framework', 'entire source sentence',
'individual words', 'phrases', 'representation')","('output object', 'instance of', 'encoder-decoder architecture')
('surface representation', 'instance of', 'representation')
('semantic representation', 'instance of', 'representation')
('encoder', 'instance of', 'MLP-based approach')
('source object', 'instance of', 'French sentence')
('French sentence', 'part of', 'source object')
('image', 'instance of', 'caption generation')
('decoder', 'instance of', 'MLP-based approach')
('hidden representations', 'instance of', 'representation')
('meaning of sentences', 'instance of', 'representation')
('systems', 'instance of', 'machine translation')
('machine translation', 'instance of', 'translation')
('caption generation', 'instance of', 'MLP-based approach')
('MLP-based approach', 'instance of', 'model')
('sequences', 'instance of', 'fixed length')
('fixed length', 'instance of', 'representation')
('translation', 'instance of', 'machine translation')
('model', 'instance of', 'RNN')
('RNN', 'instance of', 'MLP-based approach')
('conditional distribution', 'instance of', 'representation')
('summary', 'instance of', 'representation')
('context', 'instance of', 'representation')
('list of vectors', 'instance of', 'representation')
('vector', 'instance of', 'representation')
('tensor', 'instance of', 'representation')
('convolutional network', 'instance of', 'MLP-based approach')
('target language', 'instance of', 'machine translation')
('encoder-decoder framework', 'instance of', 'encoder-decoder architecture')
('entire source sentence', 'part of', 'source object')
('individual words', 'part of', 'source object')
('phrases', 'part of', 'source object')
('representation', 'subclass of', 'representation')"
12.4,14,"('representation', 'sentences', 'meaning', 'source language', 'target language', 
'convolutions', 'RNNs', 'scoring proposed translations', 'generating translated sentences', 
'larger vocabularies', 'attention mechanism', 'aligning pieces of data', 'context vector', 
'feature vectors', 'weights', 'interval', 'softmax function', 'relevance scores', 
'model', 'computationally', 'gradient descent', 'fixed-size representation', 'semantic details', 
'long sentence', 'RNN', 'efficient approach', 'whole sentence', 'paragraph', 'context', 'gist')","('representation', 'instance of', 'meaning')
('sentences', 'instance of', 'representation')
('meaning', 'part of', 'sentences')
('source language', 'instance of', 'larger vocabularies')
('target language', 'instance of', 'larger vocabularies')
('convolutions', 'instance of', 'MLP-based approach')
('RNNs', 'instance of', 'MLP-based approach')
('scoring proposed translations', 'instance of', 'model')
('generating translated sentences', 'instance of', 'model')
('larger vocabularies', 'subclass of', 'representation')
('attention mechanism', 'instance of', 'MLP-based approach')
('aligning pieces of data', 'instance of', 'representation')
('context vector', 'instance of', 'representation')
('feature vectors', 'instance of', 'representation')
('weights', 'instance of', 'representation')
('interval', 'instance of', 'representation')
('softmax function', 'instance of', 'representation')
('relevance scores', 'instance of', 'representation')
('model', 'instance of', 'MLP-based approach')
('computationally', 'instance of', 'model')
('gradient descent', 'instance of', 'model')
('fixed-size representation', 'instance of', 'representation')
('semantic details', 'instance of', 'meaning')
('long sentence', 'instance of', 'sentences')
('RNN', 'instance of', 'MLP-based approach')
('efficient approach', 'instance of', 'MLP-based approach')
('whole sentence', 'part of', 'long sentence')
('paragraph', 'part of', 'long sentence')
('context', 'instance of', 'representation')
('gist', 'instance of', 'representation')"
12.4,15,"('Bahdanau et al.', 'sequence to sequence model', 'feature vectors', 'attention mechanism', 'memory', 'translation matrix', 'word embeddings', 'cross-lingual alignment')","('Bahdanau et al.', 'based on', 'sequence to sequence model')
('sequence to sequence model', 'use', 'feature vectors')
('sequence to sequence model', 'based on', 'attention mechanism')
('attention mechanism', 'use', 'memory')
('attention mechanism', 'use', 'translation matrix')
('translation matrix', 'use', 'word embeddings')
('word embeddings', 'based on', 'cross-lingual alignment')"
12.4,16,"('neural network', 'embedding', 'SVD', 'natural language processing', 'NLP', 'neural language models', 'character-based models', 'word-based models', 'Unicode characters', 'parsing', 'part-of-speech tagging', 'semantic role labeling', 'chunking', 'multi-task learning architecture', 'word embeddings', 't-SNE dimensionality reduction algorithm')","('neural network', 'instance of', 'embedding')
('embedding', 'based on', 'SVD')
('natural language processing', 'instance of', 'NLP')
('neural language models', 'part of', 'NLP')
('character-based models', 'part of', 'NLP')
('word-based models', 'part of', 'NLP')
('parsing', 'based on', 'NLP')
('part-of-speech tagging', 'based on', 'NLP')
('semantic role labeling', 'based on', 'NLP')
('chunking', 'based on', 'NLP')
('multi-task learning architecture', 'instance of', 'neural network')
('word embeddings', 'based on', 'NLP')
('t-SNE dimensionality reduction algorithm', 'use', 'word embeddings')"
12.5,0,"('deep learning', 'recommender systems', 'machine learning', 'online advertising', 'item recommendations', 'Amazon', 'eBay', 'social network news feeds', 'movies', 'jokes', 'expert advice', 'video games', 'dating services', 'supervised learning', 'regression problem', 'probabilistic classification problem')","('deep learning', 'part of', 'machine learning')
('recommender systems', 'based on', 'machine learning')
('online advertising', 'part of', 'machine learning')
('item recommendations', 'part of', 'recommender systems')
('Amazon', 'use', 'recommender systems')
('eBay', 'use', 'recommender systems')
('social network news feeds', 'part of', 'recommender systems')
('movies', 'part of', 'item recommendations')
('jokes', 'part of', 'item recommendations')
('expert advice', 'part of', 'item recommendations')
('video games', 'part of', 'item recommendations')
('dating services', 'part of', 'recommender systems')
('supervised learning', 'part of', 'machine learning')
('regression problem', 'based on', 'supervised learning')
('probabilistic classification problem', 'based on', 'supervised learning')"
12.5,1,"('collaborative filtering', 'non-parametric approaches', 'nearest-neighbor methods', 'parametric methods', 'learning a distributed representation', 'bilinear prediction', 'state-of-the-art systems', 'user embedding', 'item embedding', 'R matrix', 'user embeddings', 'item embeddings', 'user ID', 'item ID', 'squared error', 'predicted ratings', 'actual ratings', 'singular value decomposition', 'lower rank matrices', 'missing entries', 'gradient-based optimization', 'Netflix prize', 'recommender systems', 'ensemble models')","('collaborative filtering', 'instance of', 'recommender systems')
('non-parametric approaches', 'instance of', 'recommender systems')
('nearest-neighbor methods', 'instance of', 'recommender systems')
('parametric methods', 'instance of', 'recommender systems')
('learning a distributed representation', 'instance of', 'recommender systems')
('bilinear prediction', 'instance of', 'recommender systems')
('state-of-the-art systems', 'instance of', 'recommender systems')
('user embedding', 'instance of', 'recommender systems')
('item embedding', 'instance of', 'recommender systems')
('R matrix', 'instance of', 'recommender systems')
('user embeddings', 'instance of', 'recommender systems')
('item embeddings', 'instance of', 'recommender systems')
('user ID', 'instance of', 'recommender systems')
('item ID', 'instance of', 'recommender systems')
('squared error', 'instance of', 'recommender systems')
('predicted ratings', 'instance of', 'recommender systems')
('actual ratings', 'instance of', 'recommender systems')
('singular value decomposition', 'instance of', 'recommender systems')
('lower rank matrices', 'instance of', 'recommender systems')
('missing entries', 'instance of', 'recommender systems')
('gradient-based optimization', 'instance of', 'recommender systems')
('Netflix prize', 'instance of', 'recommender systems')"
12.5,2,"('collaborative filtering systems', 'RBM undirected probabilistic model', 'ensemble of methods', 'neural networks community', 'factorizing the ratings matrix', 'cold-start recommendations', 'content-based recommender systems', 'user profile information', 'embedding', 'deep learning architecture', 'convolutional networks', 'acoustic features', 'reinforcement learning', 'contextual bandits', 'recommendation system', 'preferences of users', 'ad auctions')","('collaborative filtering systems', 'instance of', 'recommendation system')
('RBM undirected probabilistic model', 'instance of', 'recommendation system')
('ensemble of methods', 'instance of', 'recommendation system')
('neural networks community', 'instance of', 'recommendation system')
('factorizing the ratings matrix', 'instance of', 'recommendation system')
('cold-start recommendations', 'instance of', 'recommendation system')
('content-based recommender systems', 'instance of', 'recommendation system')
('user profile information', 'instance of', 'recommendation system')
('embedding', 'instance of', 'recommendation system')
('deep learning architecture', 'instance of', 'recommendation system')
('convolutional networks', 'instance of', 'recommendation system')
('acoustic features', 'instance of', 'recommendation system')
('reinforcement learning', 'instance of', 'recommendation system')
('contextual bandits', 'instance of', 'recommendation system')
('preferences of users', 'instance of', 'recommendation system')
('ad auctions', 'instance of', 'recommendation system')"
12.5,3,"('reinforcement learning', 'reward', 'contextual bandits', 'input variable', 'policy', 'exploration', 'exploitation', 'data distribution', 'tradeoff', 'learner', 'bandits literature')","('reinforcement learning', 'instance of', 'learner')
('reward', 'instance of', 'learner')
('contextual bandits', 'instance of', 'learner')
('input variable', 'instance of', 'learner')
('policy', 'instance of', 'learner')
('exploration', 'instance of', 'learner')
('exploitation', 'instance of', 'learner')
('data distribution', 'instance of', 'learner')
('tradeoff', 'instance of', 'learner')
('bandits literature', 'instance of', 'learner')"
12.5,4,"('exploration', 'exploitation', 'supervised learning', 'reinforcement learning', 'knowledge representation', 'reasoning', 'question answering', 'deep learning', 'language modeling', 'machine translation', 'natural language processing', 'embeddings', 'symbols', 'words', 'semantic knowledge', 'research frontier', 'phrases', 'relations', 'search engines', 'machine learning', 'distributed representations', 'binary relation')","('exploration', 'instance of', 'exploration')
('exploitation', 'instance of', 'exploitation')
('supervised learning', 'instance of', 'supervised learning')
('reinforcement learning', 'instance of', 'reinforcement learning')
('knowledge representation', 'instance of', 'knowledge representation')
('reasoning', 'instance of', 'reasoning')
('question answering', 'instance of', 'question answering')
('deep learning', 'instance of', 'deep learning')
('language modeling', 'instance of', 'language modeling')
('machine translation', 'instance of', 'machine translation')
('natural language processing', 'instance of', 'natural language processing')
('embeddings', 'instance of', 'embeddings')
('symbols', 'instance of', 'symbols')
('words', 'instance of', 'words')
('semantic knowledge', 'instance of', 'semantic knowledge')
('research frontier', 'instance of', 'research frontier')
('phrases', 'instance of', 'phrases')
('relations', 'instance of', 'relations')
('search engines', 'instance of', 'search engines')
('machine learning', 'instance of', 'machine learning')
('distributed representations', 'instance of', 'distributed representations')
('binary relation', 'instance of', 'binary relation')"
12.5,5,"('is less than', 'is_a_type_of', 'has_fur', 'neural networks', 'training data', 'unstructured natural language', 'structured databases', 'relational database', 'knowledge base', 'Freebase', 'OpenCyc', 'WordNet', 'Wikibase', 'GeneOntology', 'triplet', 'training example', 'training objective', 'joint distribution')","('is less than', 'instance of', 'is less than')
('is_a_type_of', 'instance of', 'is_a_type_of')
('has_fur', 'instance of', 'has_fur')
('neural networks', 'instance of', 'neural networks')
('training data', 'instance of', 'training data')
('unstructured natural language', 'instance of', 'unstructured natural language')
('structured databases', 'instance of', 'structured databases')
('relational database', 'instance of', 'relational database')
('knowledge base', 'instance of', 'knowledge base')
('Freebase', 'instance of', 'Freebase')
('OpenCyc', 'instance of', 'OpenCyc')
('WordNet', 'instance of', 'WordNet')
('Wikibase', 'instance of', 'Wikibase')
('GeneOntology', 'instance of', 'GeneOntology')
('triplet', 'instance of', 'triplet')
('training example', 'instance of', 'training example')
('training objective', 'instance of', 'training objective')
('joint distribution', 'instance of', 'joint distribution')"
12.5,6,"('neural language models', 'entities', 'relations', 'embedding vector', 'knowledge bases', 'natural language sentences', 'relational databases', 'parametrization', 'linear relational embeddings', 'link prediction', 'knowledge graph', 'true relations', 'positive examples', 'new facts', 'performance evaluation', 'metrics', 'held-out set', 'true positive facts', 'interesting examples', 'precision at 10% metric')","('neural language models', 'instance of', 'neural language models')
('entities', 'instance of', 'entities')
('relations', 'instance of', 'relations')
('embedding vector', 'instance of', 'embedding vector')
('knowledge bases', 'instance of', 'knowledge bases')
('natural language sentences', 'instance of', 'natural language sentences')
('relational databases', 'instance of', 'relational databases')
('parametrization', 'instance of', 'parametrization')
('linear relational embeddings', 'instance of', 'linear relational embeddings')
('link prediction', 'instance of', 'link prediction')
('knowledge graph', 'instance of', 'knowledge graph')
('true relations', 'instance of', 'true relations')
('positive examples', 'instance of', 'positive examples')
('new facts', 'instance of', 'new facts')
('performance evaluation', 'instance of', 'performance evaluation')
('metrics', 'instance of', 'metrics')
('held-out set', 'instance of', 'held-out set')
('true positive facts', 'instance of', 'true positive facts')
('interesting examples', 'instance of', 'interesting examples')
('precision at 10% metric', 'instance of', 'precision at 10% metric')"
12.5,7,"('knowledge bases', 'distributed representations', 'word-sense disambiguation', 'question answering system', 'memory networks', 'GRU recurrent nets', 'deep learning')","('knowledge bases', 'instance of', 'distributed representations')
('distributed representations', 'facet of', 'word-sense disambiguation')
('word-sense disambiguation', 'facet of', 'question answering system')
('question answering system', 'instance of', 'memory networks')
('memory networks', 'subclass of', 'GRU recurrent nets')
('GRU recurrent nets', 'subclass of', 'deep learning')"
12.5,8,"('deep learning research',)","('deep learning research', 'instance of', 'deep learning')"
12.5,9,"('supervised learning problems', 'unsupervised learning', 'semi-supervised learning', 'high dimensionality', 'statistical challenge', 'computational challenge', 'probabilistic models', 'intractable inference')","('supervised learning problems', 'facet of', 'statistical challenge')
('unsupervised learning', 'facet of', 'statistical challenge')
('semi-supervised learning', 'facet of', 'statistical challenge')
('high dimensionality', 'facet of', 'computational challenge')
('statistical challenge', 'facet of', 'probabilistic models')
('computational challenge', 'facet of', 'intractable inference')"
12.5,10,"('conditional probabilities', 'normalization constant', 'partition function', 'probabilistic models', 'learning', 'gradient', 'Monte Carlo Markov chain (MCMC) methods', 'approximation', 'generative models', 'researcher', 'artificial intelligence')","('conditional probabilities', 'instance of', 'probabilistic models')
('normalization constant', 'facet of', 'partition function')
('partition function', 'facet of', 'probabilistic models')
('probabilistic models', 'facet of', 'learning')
('learning', 'facet of', 'gradient')
('gradient', 'instance of', 'Monte Carlo Markov chain (MCMC) methods')
('Monte Carlo Markov chain (MCMC) methods', 'facet of', 'approximation')
('approximation', 'facet of', 'generative models')
('generative models', 'instance of', 'researcher')
('researcher', 'instance of', 'artificial intelligence')"
12.5,11,"('deep learning', 'probabilistic model', 'input', 'probabilistic inference', 'latent variables', 'representation learning', 'deep feedforward', 'recurrent networks', 'probabilistic models', 'linear factor models', 'mixture models', 'deep probabilistic models', 'generative models', 'explanatory factors', 'joint distribution', 'data generation process', 'sample', 'factorial distribution')","('deep learning', 'instance of', 'probabilistic model')
('probabilistic model', 'based on', 'input')
('probabilistic inference', 'based on', 'probabilistic model')
('latent variables', 'part of', 'probabilistic model')
('representation learning', 'part of', 'probabilistic model')
('deep feedforward', 'subclass of', 'probabilistic model')
('recurrent networks', 'subclass of', 'probabilistic model')
('probabilistic models', 'subclass of', 'probabilistic model')
('linear factor models', 'subclass of', 'probabilistic model')
('mixture models', 'subclass of', 'probabilistic model')
('deep probabilistic models', 'subclass of', 'probabilistic model')
('generative models', 'subclass of', 'probabilistic model')
('explanatory factors', 'part of', 'probabilistic model')
('joint distribution', 'part of', 'probabilistic model')
('data generation process', 'based on', 'joint distribution')
('sample', 'based on', 'probabilistic model')
('factorial distribution', 'based on', 'mixture models')"
13.1,0,"('linear factor model', 'Probabilistic PCA', 'Factor Analysis', 'prior over latent variables', 'observed variables', 'unit variance Gaussian', 'per-variable variances', 'covariance matrix', 'multivariate normal random variable')","('linear factor model', 'subclass of', 'Factor Analysis')
('Probabilistic PCA', 'subclass of', 'Factor Analysis')
('Factor Analysis', 'based on', 'linear factor model')
('Factor Analysis', 'based on', 'Probabilistic PCA')
('Factor Analysis', 'part of', 'prior over latent variables')
('observed variables', 'based on', 'prior over latent variables')
('observed variables', 'subclass of', 'unit variance Gaussian')
('unit variance Gaussian', 'based on', 'per-variable variances')
('covariance matrix', 'based on', 'per-variable variances')
('multivariate normal random variable', 'subclass of', 'multivariate normal random variable')"
13.2,0,"('conditional variances', 'covariance of x', 'probalistic PCA', 'PCA', 'iterative EM algorithm', 'latent variables', 'residual reconstruction error', 'orthogonal projection', 'independent component analysis', 'representation learning algorithms', 'linear factors', 'underlying signals', 'generative models', 'prior distribution')","('conditional variances', 'part of', 'probalistic PCA')
('covariance of x', 'based on', 'covariance of x')
('probalistic PCA', 'based on', 'PCA')
('PCA', 'based on', 'iterative EM algorithm')
('iterative EM algorithm', 'part of', 'latent variables')
('latent variables', 'part of', 'iterative EM algorithm')
('residual reconstruction error', 'based on', 'orthogonal projection')
('orthogonal projection', 'based on', 'independent component analysis')
('independent component analysis', 'based on', 'representation learning algorithms')
('representation learning algorithms', 'based on', 'linear factors')
('linear factors', 'subclass of', 'underlying signals')
('underlying signals', 'based on', 'generative models')
('generative models', 'based on', 'prior distribution')"
13.2,1,"('nonlinear change of variables', 'maximum likelihood', 'independent factors', 'low-level signals', 'moment in time', 'sensor\'s observation', 'original signals', 'volume changes', 'microphones', 'neuroscience', 'electroencephalography', 'electrical signals', 'brain regions', 'deterministic decoder', 'maximum likelihood criterion', 'non-Gaussian distribution', 'orthogonal constraint', 'sparse features')","('nonlinear change of variables', 'subclass of', 'maximum likelihood')
('independent factors', 'subclass of', 'low-level signals')
('moment in time', 'part of', 'sensor\'s observation')
('sensor\'s observation', 'subclass of', 'original signals')
('volume changes', 'based on', 'sensor\'s observation')
('microphones', 'based on', 'sensor\'s observation')
('neuroscience', 'part of', 'electroencephalography')
('electroencephalography', 'based on', 'electrical signals')
('brain regions', 'part of', 'neuroscience')
('deterministic decoder', 'based on', 'maximum likelihood criterion')
('maximum likelihood criterion', 'based on', 'maximum likelihood')
('non-Gaussian distribution', 'based on', 'maximum likelihood criterion')
('orthogonal constraint', 'based on', 'sparse features')"
13.3,0,"('ICA variants', 'sample kurtosis', 'nonlinear autoencoders', 'nonlinear generative model', 'ensemble learning', 'nonlinear independent components estimation', 'NICE', 'invertible transformations', 'Jacobian', 'groups of features', 'independent subspace analysis', 'topographic ICA', 'Gabor filters', 'translation invariance', 'slow feature analysis')","('ICA variants', 'based on', 'nonlinear independent components estimation')
('sample kurtosis', 'part of', 'ICA variants')
('nonlinear autoencoders', 'subclass of', 'nonlinear generative model')
('nonlinear generative model', 'based on', 'ensemble learning')
('ensemble learning', 'based on', 'nonlinear independent components estimation')
('nonlinear independent components estimation', 'based on', 'NICE')
('NICE', 'based on', 'invertible transformations')
('invertible transformations', 'based on', 'Jacobian')
('groups of features', 'part of', 'independent subspace analysis')
('independent subspace analysis', 'based on', 'topographic ICA')
('topographic ICA', 'based on', 'Gabor filters')
('Gabor filters', 'subclass of', 'translation invariance')
('translation invariance', 'based on', 'slow feature analysis')"
13.3,1,"('linear factor models', 'slow feature analysis', 'slowness principle', 'computer vision', 'pixel values', 'zebra', 'regularize', 'gradient descent', 'cost function', 'hyperparameter', 'time sequence', 'examples', 'feature extractor', 'loss function', 'mean squared difference', 'generative model', 'linear map', 'input space', 'feature space', 'prior', 'distribution', 'SFA algorithm', 'linear transformation', 'optimization problem', 'constraints')","('linear factor models', 'instance of', 'slow feature analysis')
('slow feature analysis', 'based on', 'slowness principle')
('computer vision', 'instance of', 'pixel values')
('zebra', 'instance of', 'computer vision')
('regularize', 'use', 'gradient descent')
('cost function', 'instance of', 'hyperparameter')
('time sequence', 'instance of', 'examples')
('feature extractor', 'instance of', 'loss function')
('loss function', 'based on', 'mean squared difference')
('generative model', 'instance of', 'linear map')
('linear map', 'based on', 'input space')
('feature space', 'instance of', 'prior')
('distribution', 'based on', 'prior')
('SFA algorithm', 'based on', 'prior')
('linear transformation', 'instance of', 'optimization problem')
('optimization problem', 'based on', 'constraints')"
13.3,2,"('Linear Factor Models', 'PCA', 'SFA', 'V1 cortex', 'rat brains')","('Linear Factor Models', 'subclass of', 'PCA')
('Linear Factor Models', 'subclass of', 'SFA')
('V1 cortex', 'part of', 'rat brains')"
13.4,0,"('linear factor models', 'learning algorithms', 'cost function', 'pixel values', 'features', 'model', 'object recognition', 'pose estimation', 'slowness principle', 'applications', 'performance', 'prior', 'time step', 'position', 'velocity', 'sparse coding', 'unsupervised feature learning', 'feature extraction mechanism', 'decoder', 'reconstructions', 'linear factors', 'Gaussian noise', 'isotropic precision', 'distribution', 'sparsity penalty coefficient', 'Laplace prior', 'Student-t prior')","('linear factor models', 'instance of', 'learning algorithms')
('learning algorithms', 'part of', 'linear factor models')
('linear factor models', 'based on', 'cost function')
('pixel values', 'part of', 'features')
('features', 'facet of', 'model')
('object recognition', 'use', 'model')
('pose estimation', 'use', 'model')
('slowness principle', 'part of', 'applications')
('applications', 'facet of', 'performance')
('model', 'based on', 'prior')
('time step', 'part of', 'position')
('position', 'part of', 'velocity')
('sparse coding', 'use', 'feature extraction mechanism')
('unsupervised feature learning', 'use', 'feature extraction mechanism')
('feature extraction mechanism', 'facet of', 'decoder')
('decoder', 'based on', 'reconstructions')
('linear factors', 'part of', 'reconstructions')
('Gaussian noise', 'instance of', 'distribution')
('distribution', 'based on', 'isotropic precision')
('sparsity penalty coefficient', 'part of', 'Laplace prior')
('Laplace prior', 'part of', 'Student-t prior')"
13.4,1,"('sparse coding', 'maximum likelihood', 'data encoding', 'decoder training', 'parametric encoder function', 'optimization algorithm', 'optimization problem', 'L1 norm', 'model training', 'hyperparameter', 'parameter learning', 'generative model', 'feature extractor')","('sparse coding', 'based on', 'maximum likelihood')
('data encoding', 'part of', 'sparse coding')
('decoder training', 'part of', 'sparse coding')
('parametric encoder function', 'facet of', 'sparse coding')
('optimization algorithm', 'part of', 'optimization problem')
('optimization problem', 'based on', 'sparse coding')
('L1 norm', 'part of', 'optimization algorithm')
('model training', 'part of', 'sparse coding')
('hyperparameter', 'part of', 'parameter learning')
('parameter learning', 'facet of', 'sparse coding')
('generative model', 'facet of', 'sparse coding')
('feature extractor', 'part of', 'sparse coding')"
13.4,2,"('spike and slab sparse coding model', 'prior', 'parametric encoder', 'reconstruction error', 'log-prior', 'generalization error', 'optimization procedure', 'decoder weights', 'feature extractor', 'classifier', 'object recognition tasks', 'linear-sigmoid autoencoder', 'label', 'non-parametric encoder', 'iterative algorithm', 'parametric autoencoder', 'back-propagate', 'unsupervised criterion', 'supervised criterion', 'approximate derivatives', 'linear factor models', 'samples', 'factorial prior', 'deeper models')","('spike and slab sparse coding model', 'based on', 'prior')
('parametric encoder', 'part of', 'spike and slab sparse coding model')
('reconstruction error', 'part of', 'spike and slab sparse coding model')
('log-prior', 'facet of', 'spike and slab sparse coding model')
('generalization error', 'part of', 'spike and slab sparse coding model')
('optimization procedure', 'part of', 'spike and slab sparse coding model')
('decoder weights', 'part of', 'spike and slab sparse coding model')
('feature extractor', 'part of', 'spike and slab sparse coding model')
('classifier', 'part of', 'object recognition tasks')
('object recognition tasks', 'facet of', 'spike and slab sparse coding model')
('linear-sigmoid autoencoder', 'part of', 'spike and slab sparse coding model')
('label', 'part of', 'object recognition tasks')
('non-parametric encoder', 'part of', 'spike and slab sparse coding model')
('iterative algorithm', 'part of', 'spike and slab sparse coding model')
('parametric autoencoder', 'part of', 'spike and slab sparse coding model')
('back-propagate', 'part of', 'spike and slab sparse coding model')
('unsupervised criterion', 'part of', 'spike and slab sparse coding model')
('supervised criterion', 'part of', 'spike and slab sparse coding model')
('approximate derivatives', 'part of', 'spike and slab sparse coding model')
('linear factor models', 'part of', 'spike and slab sparse coding model')
('samples', 'part of', 'linear factor models')
('factorial prior', 'part of', 'spike and slab sparse coding model')
('deeper models', 'part of', 'spike and slab sparse coding model')"
13.5,0,"('spike and slab sparse coding model', 'MNIST dataset', 'samples', 'weights', 'model fit', 'weight vectors', 'penstrokes', 'digits', 'features', 'factorial prior', 'generative models', 'latent codes', 'manifold interpretation', 'PCA', 'factor analysis', 'manifold', 'Gaussian distribution', 'narrow', 'flat', 'elongated', 'linear manifold', 'linear autoencoder', 'matrices', 'reconstruction', 'encoder')","('spike and slab sparse coding model', 'use', 'MNIST dataset')
('samples', 'based on', 'weights')
('weights', 'facet of', 'model fit')
('model fit', 'based on', 'weight vectors')
('weight vectors', 'part of', 'spike and slab sparse coding model')
('penstrokes', 'part of', 'digits')
('digits', 'part of', 'MNIST dataset')
('features', 'part of', 'spike and slab sparse coding model')
('factorial prior', 'part of', 'generative models')
('generative models', 'based on', 'latent codes')
('latent codes', 'facet of', 'manifold interpretation')
('manifold interpretation', 'based on', 'PCA')
('PCA', 'based on', 'factor analysis')
('factor analysis', 'facet of', 'manifold')
('manifold', 'facet of', 'spike and slab sparse coding model')
('Gaussian distribution', 'based on', 'manifold')
('narrow', 'facet of', 'manifold')
('flat', 'facet of', 'manifold')
('elongated', 'facet of', 'manifold')
('linear manifold', 'part of', 'manifold')
('linear autoencoder', 'part of', 'spike and slab sparse coding model')
('matrices', 'part of', 'linear autoencoder')
('reconstruction', 'based on', 'matrices')
('encoder', 'part of', 'linear autoencoder')"
13.5,1,"('low-dimensional representation', 'autoencoder', 'reconstruction', 'variance', 'manifold plane', 'orthogonal', 'signal', 'noise', 'reconstruction error', 'covariance matrix', 'principal eigenvectors', 'eigenvalues', 'variance', 'orthonormal basis', 'PCA')","('low-dimensional representation', 'part of', 'autoencoder')
('autoencoder', 'based on', 'reconstruction')
('reconstruction', 'part of', 'autoencoder')
('variance', 'part of', 'manifold plane')
('manifold plane', 'facet of', 'orthogonal')
('signal', 'part of', 'reconstruction')
('noise', 'part of', 'reconstruction')
('reconstruction error', 'facet of', 'reconstruction')
('covariance matrix', 'part of', 'principal eigenvectors')
('principal eigenvectors', 'part of', 'eigenvalues')
('eigenvalues', 'part of', 'variance')
('variance', 'part of', 'orthonormal basis')
('orthonormal basis', 'part of', 'PCA')"
13.5,2,"('linear factor models', 'representation of data', 'autoencoder networks', 'deep probabilistic models')","('linear factor models', 'instance of', 'representation of data')
('autoencoder networks', 'subclass of', 'deep probabilistic models')"
13.5,3,"('autoencoders', 'neural network', 'hidden layer', 'code', 'encoder', 'decoder', 'reconstruction', 'input', 'architecture', 'training data', 'model', 'dimensionality reduction', 'feature learning', 'latent variable models', 'generative modeling', 'feedforward networks', 'minibatch gradient descent', 'back-propagation', 'recirculation', 'learning algorithm')","('autoencoders', 'instance of', 'neural network')
('hidden layer', 'part of', 'neural network')
('code', 'part of', 'autoencoders')
('encoder', 'part of', 'autoencoders')
('decoder', 'part of', 'autoencoders')
('reconstruction', 'part of', 'autoencoders')
('input', 'based on', 'neural network')
('architecture', 'based on', 'neural network')
('training data', 'based on', 'neural network')
('model', 'based on', 'neural network')
('dimensionality reduction', 'use', 'autoencoders')
('feature learning', 'use', 'autoencoders')
('latent variable models', 'use', 'autoencoders')
('generative modeling', 'use', 'autoencoders')
('feedforward networks', 'subclass of', 'neural network')
('minibatch gradient descent', 'use', 'neural network')
('back-propagation', 'use', 'neural network')
('recirculation', 'use', 'neural network')
('learning algorithm', 'use', 'neural network')"
14.1,0,"('input copying task', 'useful features', 'undercomplete autoencoder', 'code dimension', 'learning process', 'loss function', 'mean squared error', 'principal subspace', 'nonlinear encoder functions', 'nonlinear decoder functions', 'nonlinear generalization of PCA')","('input copying task', 'instance of', 'useful features')
('undercomplete autoencoder', 'subclass of', 'useful features')
('code dimension', 'part of', 'undercomplete autoencoder')
('learning process', 'part of', 'undercomplete autoencoder')
('loss function', 'part of', 'undercomplete autoencoder')
('mean squared error', 'part of', 'loss function')
('principal subspace', 'part of', 'undercomplete autoencoder')
('nonlinear encoder functions', 'part of', 'undercomplete autoencoder')
('nonlinear decoder functions', 'part of', 'undercomplete autoencoder')
('nonlinear generalization of PCA', 'use', 'undercomplete autoencoder')"
14.2,0,"('regularized autoencoders', 'hidden code', 'capacity', 'linear encoder', 'linear decoder', 'data distribution', 'model capacity', 'architecture', 'code dimension', 'complexity of distribution', 'loss function', 'sparsity of the representation', 'smallness of the derivative of the representation', 'robustness to noise', 'missing inputs', 'generative model', 'latent variables', 'inference procedure', 'Helmholtz machine', 'variational autoencoder')","('regularized autoencoders', 'subclass of', 'hidden code')
('capacity', 'part of', 'regularized autoencoders')
('linear encoder', 'part of', 'regularized autoencoders')
('linear decoder', 'part of', 'regularized autoencoders')
('data distribution', 'based on', 'regularized autoencoders')
('model capacity', 'based on', 'regularized autoencoders')
('architecture', 'based on', 'regularized autoencoders')
('code dimension', 'part of', 'regularized autoencoders')
('complexity of distribution', 'part of', 'regularized autoencoders')
('loss function', 'part of', 'regularized autoencoders')
('sparsity of the representation', 'part of', 'regularized autoencoders')
('smallness of the derivative of the representation', 'part of', 'regularized autoencoders')
('robustness to noise', 'part of', 'regularized autoencoders')
('missing inputs', 'part of', 'regularized autoencoders')
('generative model', 'use', 'regularized autoencoders')
('latent variables', 'part of', 'generative model')
('inference procedure', 'part of', 'generative model')
('Helmholtz machine', 'subclass of', 'generative model')
('variational autoencoder', 'subclass of', 'generative model')"
14.2,1,"('sparse autoencoders', 'sparsity penalty', 'regularizer', 'unsupervised learning objective', 'supervised learning objective', 'feedforward network', 'MAP approximation', 'Bayesian inference', 'maximum likelihood', 'log-likelihood', 'log-prior', 'data preferences')","('sparse autoencoders', 'subclass of', 'autoencoders')
('sparsity penalty', 'part of', 'sparse autoencoders')
('regularizer', 'part of', 'sparse autoencoders')
('unsupervised learning objective', 'part of', 'sparse autoencoders')
('supervised learning objective', 'part of', 'sparse autoencoders')
('feedforward network', 'subclass of', 'sparse autoencoders')
('MAP approximation', 'part of', 'sparse autoencoders')
('Bayesian inference', 'part of', 'sparse autoencoders')
('maximum likelihood', 'part of', 'sparse autoencoders')
('log-likelihood', 'part of', 'maximum likelihood')
('log-prior', 'part of', 'maximum likelihood')
('data preferences', 'based on', 'sparse autoencoders')"
14.2,2,"('autoencoder', 'generative model', 'latent variables', 'visible variables', 'joint distribution', 'prior distribution', 'log-likelihood', 'sparse coding', 'parametric encoder', 'sparsity-inducing', 'Laplace prior', 'absolute value sparsity penalty', 'hyperparameter', 'Student-t prior', 'regularization term')","('autoencoder', 'instance of', 'generative model')
('autoencoder', 'relation', 'latent variables')
('autoencoder', 'relation', 'visible variables')
('generative model', 'relation', 'joint distribution')
('joint distribution', 'relation', 'prior distribution')
('sparse coding', 'relation', 'parametric encoder')
('parametric encoder', 'relation', 'sparsity-inducing')
('sparsity-inducing', 'relation', 'Laplace prior')
('sparsity-inducing', 'relation', 'absolute value sparsity penalty')
('hyperparameter', 'instance of', 'regularization term')
('regularization term', 'relation', 'Student-t prior')"
14.2,3,"('autoencoder', 'sparse autoencoder', 'sparsity penalty', 'logZ', 'maximum likelihood', 'undirected probabilistic model', 'reconstruction error', 'prior', 'rectified linear units', 'code layer', 'absolute value penalty', 'denoising autoencoder', 'cost function', 'loss function', 'L2 norm', 'corruption', 'denoising training', 'structure of p(x)')","('autoencoder', 'instance of', 'sparse autoencoder')
('code layer', 'part of', 'autoencoder')
('sparsity penalty', 'part of', 'sparse autoencoder')
('logZ', 'subject of', 'maximum likelihood')
('maximum likelihood', 'based on', 'undirected probabilistic model')
('reconstruction error', 'use', 'sparse autoencoder')
('prior', 'subject of', 'sparse autoencoder')
('rectified linear units', 'use', 'autoencoder')
('absolute value penalty', 'use', 'sparse autoencoder')
('denoising autoencoder', 'subclass of', 'autoencoder')
('cost function', 'use', 'autoencoder')
('loss function', 'use', 'autoencoder')
('L2 norm', 'based on', 'cost function')
('corruption', 'part of', 'denoising autoencoder')
('denoising training', 'based on', 'denoising autoencoder')
('structure of p(x)', 'part of', 'undirected probabilistic model')"
14.3,0,"('autoencoder', 'reconstruction error', 'overcomplete', 'high-capacity models', 'identity function', 'denoising autoencoders', 'regularizing', 'penalty', 'sparse autoencoders', 'contractive autoencoder', 'layer size', 'depth', 'feedforward network', 'universal approximator theorem', 'hidden layer')","('autoencoder', 'use', 'reconstruction error')
('overcomplete', 'part of', 'autoencoder')
('high-capacity models', 'based on', 'autoencoder')
('identity function', 'use', 'autoencoder')
('denoising autoencoders', 'subclass of', 'autoencoder')
('regularizing', 'use', 'penalty')
('penalty', 'part of', 'sparse autoencoders')
('sparse autoencoders', 'subclass of', 'autoencoder')
('contractive autoencoder', 'subclass of', 'autoencoder')
('layer size', 'facet of', 'autoencoder')
('depth', 'facet of', 'autoencoder')
('feedforward network', 'subclass of', 'autoencoder')
('universal approximator theorem', 'based on', 'feedforward network')
('hidden layer', 'part of', 'feedforward network')"
14.4,0,"('AUTOENCODERS', 'feedforward networks', 'deep autoencoder', 'shallow autoencoder', 'linear autoencoders', 'Stochastic Encoders and Decoders', 'loss functions', 'output unit types', 'input distribution', 'conditional distribution', 'mean squared error criterion', 'Gaussian distribution', 'Bernoulli distribution', 'softmax distribution')","('AUTOENCODERS', 'part of', 'feedforward networks'),
('deep autoencoder', 'subclass of', 'autoencoder'),
('shallow autoencoder', 'subclass of', 'autoencoder'),
('linear autoencoders', 'subclass of', 'autoencoder'),
('Stochastic Encoders and Decoders', 'subclass of', 'autoencoder'),
('loss functions', 'use', 'autoencoders'),
('output unit types', 'use', 'autoencoders'),
('input distribution', 'use', 'autoencoders'),
('conditional distribution', 'use', 'autoencoders'),
('mean squared error criterion', 'use', 'loss functions'),
('Gaussian distribution', 'subclass of', 'input distribution'),
('Bernoulli distribution', 'subclass of', 'input distribution'),
('softmax distribution', 'subclass of', 'output unit types')"
14.5,0,"('AUTOENCODERS', 'feedforward networks', 'stochastic autoencoder', 'encoding function', 'latent variable model', 'encoder model', 'decoder model', 'denoising autoencoder', 'corruption process')","('AUTOENCODERS', 'instance of', 'feedforward networks')
('stochastic autoencoder', 'instance of', 'latent variable model')
('stochastic autoencoder', 'instance of', 'encoder model')
('stochastic autoencoder', 'instance of', 'decoder model')
('denoising autoencoder', 'instance of', 'latent variable model')
('denoising autoencoder', 'instance of', 'encoder model')
('denoising autoencoder', 'instance of', 'decoder model')
('corruption process', 'instance of', 'denoising autoencoder')"
14.5,1,"('AUTOENCODERS', 'denoising autoencoder', 'computational graph', 'cost function', 'reconstruction distribution', 'corruption process', 'feedforward network', 'gradient-based approximate minimization', 'stochastic gradient descent', 'expectation')","('AUTOENCODERS', 'instance of', 'denoising autoencoder')
('AUTOENCODERS', 'instance of', 'computational graph')
('AUTOENCODERS', 'instance of', 'cost function')
('AUTOENCODERS', 'instance of', 'reconstruction distribution')
('denoising autoencoder', 'instance of', 'corruption process')
('denoising autoencoder', 'instance of', 'computation graph')
('denoising autoencoder', 'instance of', 'cost function')
('denoising autoencoder', 'instance of', 'reconstruction distribution')
('denoising autoencoder', 'instance of', 'feedforward network')
('denoising autoencoder', 'instance of', 'gradient-based approximate minimization')
('denoising autoencoder', 'instance of', 'stochastic gradient descent')
('denoising autoencoder', 'instance of', 'expectation')"
14.5,2,"('denoising autoencoder', 'corrupted data point', 'original data point', 'training examples', 'low-dimensional manifold', 'corruption process', 'squared errors', 'reconstruction', 'vector field', 'score')","('denoising autoencoder', 'instance of', 'corrupted data point')
('denoising autoencoder', 'instance of', 'original data point')
('denoising autoencoder', 'instance of', 'training examples')
('denoising autoencoder', 'instance of', 'low-dimensional manifold')
('denoising autoencoder', 'instance of', 'corruption process')
('denoising autoencoder', 'instance of', 'squared errors')
('denoising autoencoder', 'instance of', 'reconstruction')
('denoising autoencoder', 'instance of', 'vector field')
('denoising autoencoder', 'instance of', 'score')"
14.5,3,"('Score matching', 'maximum likelihood', 'probability distributions', 'data distribution', 'gradient field', 'Denoising Autoencoders', 'conditional Gaussian', 'reconstruction cost', 'undirected probabilistic model', 'RBM', 'score matching', 'consistent estimator', 'regularization term', 'contractive penalty', 'contrastive divergence', 'encoder-decoder architecture')","('Score matching', 'instance of', 'maximum likelihood')
('probability distributions', 'instance of', 'data distribution')
('Denoising Autoencoders', 'instance of', 'gradient field')
('Denoising Autoencoders', 'instance of', 'reconstruction cost')
('Denoising Autoencoders', 'instance of', 'undirected probabilistic model')
('Denoising Autoencoders', 'instance of', 'RBM')
('Denoising Autoencoders', 'instance of', 'score matching')
('Denoising Autoencoders', 'instance of', 'consistent estimator')
('Denoising Autoencoders', 'instance of', 'regularization term')
('Denoising Autoencoders', 'instance of', 'contractive penalty')
('Denoising Autoencoders', 'instance of', 'contrastive divergence')
('Denoising Autoencoders', 'instance of', 'encoder-decoder architecture')"
14.5,4,"('AUTOENCODERS', 'squared error criterion', 'corruption', 'denoising autoencoder', '1-D curved manifold', '2-D space', 'reconstructionminusinput vector', 'implicitly estimated probability distribution', 'vector field', 'estimated density function', 'data manifolds', 'local maxima', 'local minima', 'norm of reconstruction error', 'probability', 'autoencoder', 'reconstructions', 'arrows', 'reconstruction becomes more accurate', 'reproduction', 'Alain', 'Bengio')","('AUTOENCODERS', 'squared error criterion', 'corruption')
('AUTOENCODERS', 'denoising autoencoder', 'reconstructionminusinput vector')
('AUTOENCODERS', 'implicitly estimated probability distribution', 'vector field')
('AUTOENCODERS', 'estimated density function', 'data manifolds')
('AUTOENCODERS', 'local maxima', 'local minima')
('AUTOENCODERS', 'norm of reconstruction error', 'probability')
('AUTOENCODERS', 'autoencoder', 'reconstructions')
('AUTOENCODERS', 'reconstruction becomes more accurate', 'reproduction')
('Alain', 'instance of', 'Bengio')"
14.6,0,"('MLPs', 'denoising', 'LeCun', 'Gallinari', 'Behnke', 'denoising autoencoders', 'MLPs trained to denoise', 'learn a good internal representation', 'Vincent et al.', 'unsupervised network', 'supervised network', 'sparse autoencoders', 'sparse coding', 'contractive autoencoders', 'regularized autoencoders', 'DAEs', 'Inayoshi', 'Kurita', 'reconstruction error', 'injected noise', 'linear encoder', 'learning manifolds', 'machine learning algorithms', 'low-dimensional manifold')","('MLPs', 'denoising', 'denoising autoencoders')
('MLPs', 'denoising autoencoders', 'MLPs trained to denoise')
('MLPs', 'learn a good internal representation', 'Vincent et al.')
('MLPs', 'sparse autoencoders', 'sparse coding')
('MLPs', 'contractive autoencoders', 'regularized autoencoders')
('MLPs', 'DAEs', 'Inayoshi')
('MLPs', 'DAEs', 'Kurita')
('MLPs', 'reconstruction error', 'injected noise')
('MLPs', 'learning manifolds', 'machine learning algorithms')
('MLPs', 'learning manifolds', 'low-dimensional manifold')"
14.6,1,"('manifold', 'tangent planes', 'autoencoder training procedures', 'representation', 'decoder', 'data generating distribution', 'constraint', 'regularization penalty', 'architectural constraint', 'reconstruction cost', 'hidden representation', 'variations', 'low-dimensional manifold', 'coordinate system', 'encoder', 'input space', 'representation space', 'mapping', 'one-dimensional example', 'reconstruction function', 'perturbations', 'manifold structure', 'manifold learning', 'approaches', 'data points')","('manifold', 'tangent planes', 'autoencoder training procedures')
('manifold', 'representation', 'decoder')
('manifold', 'data generating distribution', 'constraint')
('manifold', 'regularization penalty', 'architectural constraint')
('manifold', 'reconstruction cost', 'hidden representation')
('manifold', 'variations', 'low-dimensional manifold')
('manifold', 'coordinate system', 'encoder')
('manifold', 'input space', 'representation space')
('manifold', 'mapping', 'one-dimensional example')
('manifold', 'reconstruction function', 'perturbations')
('manifold', 'manifold structure', 'manifold learning')
('manifold', 'approaches', 'data points')"
14.6,2,"('tangent hyperplane', 'one-dimensional manifold', '784-dimensional space', 'MNIST image', '784 pixels', 'vertical translation', 'coordinate', 'curved path', 'image space', 'manifold', 'points', 'visualization', 'PCA', 'n-dimensional manifold', 'tangent plane', 'surface', 'oriented', 'parallel', 'possible to move', 'remaining', 'single tangent line', 'example tangent line', 'gray pixels', 'white pixels', 'black pixels')","('tangent hyperplane', 'one-dimensional manifold', '784-dimensional space')
('tangent hyperplane', 'MNIST image', '784 pixels')
('tangent hyperplane', 'vertical translation', 'coordinate')
('tangent hyperplane', 'curved path', 'image space')
('tangent hyperplane', 'manifold', 'points')
('tangent hyperplane', 'visualization', 'PCA')
('tangent hyperplane', 'n-dimensional manifold', 'tangent plane')
('tangent hyperplane', 'surface', 'oriented')
('tangent hyperplane', 'possible to move', 'remaining')
('tangent hyperplane', 'single tangent line', 'example tangent line')
('tangent hyperplane', 'gray pixels', 'white pixels')
('tangent hyperplane', 'gray pixels', 'black pixels')"
14.6,3,"('autoencoder', 'reconstruction function', 'perturbations', 'manifold structure', 'data points', '0-dimensional manifolds', 'identity function', 'optimal reconstruction function', 'reconstruction direction vector', 'denoising autoencoder', 'contractive autoencoder', 'embedding', 'low-dimensional vector', 'ambient space', 'non-parametric manifold learning algorithms', 'nearest-neighbor graph', 'training example', 'edges', 'near neighbors', 'Schölkopf', 'Roweis', 'Saul', 'Tenenbaum', 'Brand', 'Belkin')","('autoencoder', 'reconstruction function', 'perturbations')
('autoencoder', 'manifold structure', 'data points')
('autoencoder', '0-dimensional manifolds', 'identity function')
('autoencoder', '0-dimensional manifolds', 'optimal reconstruction function')
('autoencoder', 'reconstruction direction vector', 'denoising autoencoder')
('autoencoder', 'reconstruction direction vector', 'contractive autoencoder')
('autoencoder', 'embedding', 'low-dimensional vector')
('autoencoder', 'embedding', 'ambient space')
('autoencoder', 'non-parametric manifold learning algorithms', 'nearest-neighbor graph')
('autoencoder', 'training example', 'edges')
('autoencoder', 'training example', 'near neighbors')
('autoencoder', 'Schölkopf', 'Roweis')
('autoencoder', 'Schölkopf', 'Saul')
('autoencoder', 'Schölkopf', 'Tenenbaum')
('autoencoder', 'Schölkopf', 'Brand')
('autoencoder', 'Schölkopf', 'Belkin')"
14.6,4,"('autoencoders', 'manifold learning', 'nearest neighbor graph', 'tangent plane', 'coordinate system', 'real-valued vector position', 'embedding', 'interpolation', 'QMUL Multiview Face Dataset', 'curvature', 'twists', 'nodes', 'variation directions', 'd...lles', 'linear Gaussian-like patches', 'pancakes', 'Gaussians', 'non-parametric approaches to manifold learning', 'Bengio and Monperrus', 'smooth manifolds', 'peaks', 'troughs', 'twists', 'training examples')","('autoencoders', 'instance of', 'manifold learning')
('manifold learning', 'instance of', 'nearest neighbor graph')
('nearest neighbor graph', 'based on', 'tangent plane')
('tangent plane', 'part of', 'coordinate system')
('real-valued vector position', 'instance of', 'embedding')
('embedding', 'based on', 'interpolation')
('QMUL Multiview Face Dataset', 'part of', 'embedding')
('curvature', 'instance of', 'twists')
('twists', 'subclass of', 'nodes')
('variation directions', 'instance of', 'embedding')
('embedding', 'use', 'variation directions')
('peaks', 'instance of', 'troughs')
('troughs', 'subclass of', 'twists')
('training examples', 'instance of', 'embedding')"
14.6,5,"('autoencoders', 'tangent planes', 'global coordinate system', 'density function', 'local patch', 'Euclidean coordinate system', 'locally flat Gaussian', 'pancake', 'variance', 'coordinate system', 'mixture of Gaussians', 'estimated density function', 'ma...-local neural-net based variant', 'variations', 'generalize', 'manifold', 'interpolating', 'complicated structure', 'capture', 'local interpolation', 'manifold structure', 'distributed representations', 'deep learning', 'manifold structure', 'image transformations')","('autoencoders', 'instance of', 'tangent planes')
('tangent planes', 'part of', 'global coordinate system')
('density function', 'instance of', 'local patch')
('local patch', 'based on', 'Euclidean coordinate system')
('Euclidean coordinate system', 'instance of', 'locally flat Gaussian')
('pancake', 'subclass of', 'variance')
('coordinate system', 'part of', 'mixture of Gaussians')
('mixture of Gaussians', 'instance of', 'estimated density function')
('manifold learning', 'instance of', 'local patch')
('local patch', 'use', 'manifold learning')
('density function', 'based on', 'local patch')
('density function', 'use', 'manifold learning')
('manifold learning', 'part of', 'local patch')
('mixture of Gaussians', 'part of', 'local patch')
('manifold learning', 'part of', 'density function')
('local patch', 'part of', 'manifold learning')
('mixture of Gaussians', 'part of', 'density function')
('density function', 'part of', 'mixture of Gaussians')
('non-local neural-net based variant', 'subclass of', 'variations')
('variations', 'part of', 'manifold')
('manifold', 'instance of', 'interpolating')
('manifold', 'part of', 'complicated structure')
('local interpolation', 'instance of', 'manifold structure')
('manifold structure', 'part of', 'local interpolation')
('distributed representations', 'instance of', 'deep learning')
('manifold structure', 'part of', 'distributed representations')
('image transformations', 'subclass of', 'manifold structure')"
14.7,0,"('contractive autoencoders', 'regularizer', 'code', 'derivatives', 'encoder function', 'penalty', 'Frobenius norm', 'Jacobian matrix', 'partial derivatives', 'denoising autoencoder', 'reconstruction function', 'Gaussian input noise', 'feature extraction function', 'pretrain features', 'classifier', 'classification accuracy', 'score matching', 'CAE warps space', 'input neighborhood', 'output neighborhood', 'perturbations', 'data manifolds', 'sigmoidal units', 'binary code', 'hypercube', 'linear operator')","('contractive autoencoders', 'instance of', 'regularizer')
('code', 'instance of', 'derivatives')
('encoder function', 'use', 'partial derivatives')
('regularizer', 'based on', 'penalty')
('code', 'instance of', 'Jacobian matrix')
('denoising autoencoder', 'subclass of', 'reconstruction function')
('reconstruction function', 'based on', 'Gaussian input noise')
('feature extraction function', 'instance of', 'encoder function')
('pretrain features', 'part of', 'feature extraction function')
('classifier', 'part of', 'feature extraction function')
('classification accuracy', 'instance of', 'score matching')
('score matching', 'based on', 'CAE warps space')
('input neighborhood', 'based on', 'data manifolds')
('output neighborhood', 'based on', 'data manifolds')
('perturbations', 'use', 'input neighborhood')
('data manifolds', 'based on', 'sigmoidal units')
('binary code', 'subclass of', 'code')
('code', 'instance of', 'hypercube')
('linear operator', 'instance of', 'code')"
14.7,1,"('autoencoders', 'CAE', 'reconstruction error', 'contractive penalty', 'manifold structure', 'variation', 'tangent directions', 'images', 'pose', 'singular vectors', 'input image', 'regularization criterion', 'hidden layer autoencoder', 'deep autoencoder', 'Jacob...","('autoencoders', 'instance of', 'CAE')
('reconstruction error', 'instance of', 'CAE')
('contractive penalty', 'instance of', 'CAE')
('manifold structure', 'instance of', 'CAE')
('variation', 'instance of', 'CAE')
('tangent directions', 'instance of', 'CAE')
('images', 'instance of', 'CAE')
('pose', 'instance of', 'CAE')
('singular vectors', 'instance of', 'CAE')
('input image', 'instance of', 'CAE')
('regularization criterion', 'instance of', 'CAE')
('hidden layer autoencoder', 'instance of', 'CAE')
('deep autoencoder', 'instance of', 'CAE')
('Jacob', 'instance of', 'CAE')
('matrixes', 'instance of', 'CAE')"
14.8,0,"('AUTOENCODERS', 'PCA', 'CAE', 'CIFAR-10 dataset', 'Jacob', 'parameter sharing', 'Rifai et al.', 'sparse coding', 'parametric autoencoders', 'object recognition', 'unsupervised feature learning', 'audio')","('AUTOENCODERS', 'instance of', 'CAE')
('PCA', 'instance of', 'CAE')
('CAE', 'subclass of', 'AUTOENCODERS')
('CIFAR-10 dataset', 'instance of', 'CAE')
('Jacob', 'subject of', 'CAE')
('parameter sharing', 'instance of', 'CAE')
('Rifai et al.', 'instance of', 'CAE')
('sparse coding', 'instance of', 'CAE')
('parametric autoencoders', 'instance of', 'CAE')
('object recognition', 'instance of', 'CAE')
('unsupervised feature learning', 'instance of', 'CAE')
('audio', 'instance of', 'CAE')"
14.9,0,"('optimization algorithm', 'sparse coding', 'model parameters', 'gradient descent', 'training procedure', 'approximate inference', 'probabilistic model', 'log-likelihood', 'dimensionality reduction', 'information retrieval', 'RBMs', 'PCA', 'classification')","('optimization algorithm', 'instance of', 'sparse coding')
('sparse coding', 'part of', 'model parameters')
('gradient descent', 'instance of', 'sparse coding')
('training procedure', 'instance of', 'sparse coding')
('approximate inference', 'instance of', 'sparse coding')
('probabilistic model', 'subclass of', 'sparse coding')
('log-likelihood', 'instance of', 'sparse coding')
('dimensionality reduction', 'instance of', 'sparse coding')
('information retrieval', 'instance of', 'sparse coding')
('RBMs', 'subclass of', 'sparse coding')
('PCA', 'instance of', 'sparse coding')
('classification', 'instance of', 'sparse coding')"
14.9,1,"('dimensionality reduction', 'information retrieval', 'database entries', 'hash table', 'binary code', 'semantic hashing', 'textual input', 'images', 'encoding function', 'sigmoids', 'additive noise', 'saturation', 'hashing function', 'loss optimization', 'nearby examples')","('dimensionality reduction', 'instance of', 'information retrieval')
('information retrieval', 'instance of', 'database entries')
('hash table', 'instance of', 'information retrieval')
('binary code', 'instance of', 'information retrieval')
('semantic hashing', 'instance of', 'information retrieval')
('textual input', 'instance of', 'information retrieval')
('images', 'instance of', 'information retrieval')
('encoding function', 'instance of', 'information retrieval')
('sigmoids', 'instance of', 'information retrieval')
('additive noise', 'instance of', 'information retrieval')
('saturation', 'instance of', 'information retrieval')
('hashing function', 'instance of', 'information retrieval')
('loss optimization', 'instance of', 'information retrieval')
('nearby examples', 'instance of', 'information retrieval')"
14.9,2,"('representation learning', 'deep architectures', 'learning algorithms', 'statistical strength', 'unsupervised tasks', 'supervised tasks', 'multiple modalities', 'transfer learning', 'distributed representations', 'causes of observed data', 'information processing tasks', 'Roman numeral representation', 'Arabic numeral representation', 'runtime complexity', 'sorted list of numbers', 'linked list', 'red-black tree')","('representation learning', 'instance of', 'deep architectures')
('deep architectures', 'instance of', 'learning algorithms')
('learning algorithms', 'instance of', 'statistical strength')
('unsupervised tasks', 'subclass of', 'representation learning')
('supervised tasks', 'instance of', 'representation learning')
('multiple modalities', 'instance of', 'representation learning')
('transfer learning', 'instance of', 'representation learning')
('distributed representations', 'instance of', 'representation learning')
('causes of observed data', 'instance of', 'representation learning')
('information processing tasks', 'instance of', 'representation learning')
('Roman numeral representation', 'instance of', 'representation learning')
('Arabic numeral representation', 'instance of', 'representation learning')
('runtime complexity', 'instance of', 'sorted list of numbers')
('sorted list of numbers', 'subclass of', 'linked list')
('linked list', 'subclass of', 'red-black tree')"
14.9,3,"('representation learning', 'feedforward networks', 'supervised learning', 'linear classifier', 'softmax regression classifier', 'hidden layer', 'classification task', 'last hidden layer', 'nearest neighbor classifier', 'penultimate layer', 'supervised training', 'intermediate features', 'unsupervised learning', 'deep learning algorithms', 'training objective', 'density estimation', 'representation vector', 'supervised networks', 'unlabeled training data', 'labeled training data', 'semi-supervised learning', 'overfitting problem')","('feedforward networks', 'instance of', 'representation learning'),
('supervised learning', 'instance of', 'representation learning'),
('linear classifier', 'instance of', 'supervised learning'),
('softmax regression classifier', 'instance of', 'supervised learning'),
('hidden layer', 'instance of', 'feedforward networks'),
('classification task', 'instance of', 'supervised learning'),
('last hidden layer', 'instance of', 'feedforward networks'),
('nearest neighbor classifier', 'instance of', 'supervised learning'),
('penultimate layer', 'instance of', 'feedforward networks'),
('supervised training', 'instance of', 'supervised learning'),
('intermediate features', 'instance of', 'feedforward networks'),
('unsupervised learning', 'instance of', 'representation learning'),
('deep learning algorithms', 'instance of', 'representation learning'),
('training objective', 'instance of', 'supervised learning'),
('density estimation', 'instance of', 'unsupervised learning'),
('representation vector', 'instance of', 'representation learning'),
('supervised networks', 'instance of', 'representation learning'),
('unlabeled training data', 'instance of', 'unsupervised learning'),
('labeled training data', 'instance of', 'supervised learning'),
('semi-supervised learning', 'instance of', 'supervised learning'),
('overfitting problem', 'instance of', 'supervised learning')"
15.1,0,"('unsupervised learning', 'pretraining', 'deep neural networks', 'convolution', 'recurrence', 'representation learning algorithm', 'RBM', 'autoencoder', 'sparse coding model', 'latent representations', 'greedy learning procedure', 'Neocognitron', 'deep learning renaissance', 'fully connected architectures', 'good initialization', 'feasi ible', 'greedy algorithm')","('pretraining', 'instance of', 'unsupervised learning'),
('deep neural networks', 'instance of', 'unsupervised learning'),
('convolution', 'instance of', 'unsupervised learning'),
('recurrence', 'instance of', 'unsupervised learning'),
('representation learning algorithm', 'instance of', 'unsupervised learning'),
('RBM', 'instance of', 'unsupervised learning'),
('autoencoder', 'instance of', 'unsupervised learning'),
('sparse coding model', 'instance of', 'unsupervised learning'),
('latent representations', 'instance of', 'unsupervised learning'),
('greedy learning procedure', 'instance of', 'unsupervised learning'),
('Neocognitron', 'instance of', 'unsupervised learning'),
('deep learning renaissance', 'instance of', 'unsupervised learning'),
('fully connected architectures', 'instance of', 'unsupervised learning'),
('good initialization', 'instance of', 'unsupervised learning'),
('greedy algorithm', 'instance of', 'unsupervised learning')"
15.1,1,"('greedy layer-wise pretraining', 'independent pieces', 'layers of the network', 'unsupervised representation learning algorithm', 'regularizer', 'parameter initialization', 'pretraining phase', 'supervised learning phase', 'unsupervised learning algorithm', 'deep autoencoders', 'probabilistic models', 'deep belief networks', 'deep Boltzmann machines', 'generative models', 'supervised pretraining')","('greedy layer-wise pretraining', 'instance of', 'unsupervised learning algorithm'),
('independent pieces', 'instance of', 'unsupervised learning algorithm'),
('layers of the network', 'instance of', 'unsupervised learning algorithm'),
('unsupervised representation learning algorithm', 'instance of', 'unsupervised learning algorithm'),
('regularizer', 'instance of', 'unsupervised learning algorithm'),
('parameter initialization', 'instance of', 'unsupervised learning algorithm'),
('pretraining phase', 'instance of', 'unsupervised learning algorithm'),
('supervised learning phase', 'instance of', 'supervised learning algorithm'),
('unsupervised learning algorithm', 'subclass of', 'deep learning algorithms'),
('deep autoencoders', 'instance of', 'unsupervised learning algorithm'),
('probabilistic models', 'instance of', 'unsupervised learning algorithm'),
('deep belief networks', 'instance of', 'unsupervised learning algorithm'),
('deep Boltzmann machines', 'instance of', 'unsupervised learning algorithm'),
('generative models', 'instance of', 'unsupervised learning algorithm'),
('supervised pretraining', 'instance of', 'supervised learning algorithm')"
15.1,2,"('greedy layer-wise unsupervised pretraining protocol', 'unsupervised feature learning algorithm', 'encoder', 'feature function', 'raw input data', 'fine-tuning', 'learner', 'stages', 'identity function', 'chemical activity prediction', 'pretraining', 'machine learning models', 'unsupervised pretraining', 'semi-supervised learning', 'neural networks', 'autoencoder', 'generative model', 'discriminative RBM', 'ladder network', 'total objective')","('greedy layer-wise unsupervised pretraining protocol', 'instance of', 'unsupervised learning algorithm'),
('unsupervised feature learning algorithm', 'instance of', 'unsupervised learning algorithm'),
('encoder', 'instance of', 'unsupervised learning algorithm'),
('feature function', 'instance of', 'unsupervised learning algorithm'),
('raw input data', 'instance of', 'unsupervised learning algorithm'),
('fine-tuning', 'instance of', 'unsupervised learning algorithm'),
('learner', 'instance of', 'unsupervised learning algorithm'),
('stages', 'instance of', 'unsupervised learning algorithm'),
('identity function', 'instance of', 'unsupervised learning algorithm'),
('chemical activity prediction', 'instance of', 'supervised learning algorithm'),
('pretraining', 'instance of', 'unsupervised learning algorithm'),
('machine learning models', 'instance of', 'unsupervised learning algorithm'),
('unsupervised pretraining', 'instance of', 'unsupervised learning algorithm'),
('semi-supervised learning', 'instance of', 'supervised learning algorithm'),
('neural networks', 'instance of', 'unsupervised learning algorithm'),
('autoencoder', 'instance of', 'unsupervised learning algorithm'),
('generative model', 'instance of', 'unsupervised learning algorithm'),
('discriminative RBM', 'instance of', 'unsupervised learning algorithm'),
('ladder network', 'instance of', 'unsupervised learning algorithm'),
('total objective', 'instance of', 'unsupervised learning algorithm')"
15.1,3,"('initial parameters', 'deep neural network', 'regularizing effect', 'model', 'optimization', 'input distribution', 'mapping', 'machine learning algorithm', 'local minima', 'critical point', 'cost function', 'gradient', 'Hessian matrix', 'unsupervised learning', 'supervised learning', 'feature extractors', 'classifier', 'generative model', 'mathematical', 'theoretical level', 'predict', 'specific models', 'linear classifier')","('initial parameters', 'instance of', 'deep neural network'),
('deep neural network', 'instance of', 'unsupervised learning'),
('regularizing effect', 'instance of', 'unsupervised learning'),
('model', 'instance of', 'unsupervised learning'),
('optimization', 'instance of', 'unsupervised learning'),
('input distribution', 'instance of', 'unsupervised learning'),
('mapping', 'instance of', 'unsupervised learning'),
('machine learning algorithm', 'instance of', 'unsupervised learning'),
('local minima', 'instance of', 'unsupervised learning'),
('critical point', 'instance of', 'unsupervised learning'),
('cost function', 'instance of', 'unsupervised learning'),
('gradient', 'instance of', 'unsupervised learning'),
('Hessian matrix', 'instance of', 'unsupervised learning'),
('unsupervised learning', 'instance of', 'machine learning algorithm'),
('supervised learning', 'instance of', 'machine learning algorithm'),
('feature extractors', 'instance of', 'unsupervised learning'),
('classifier', 'instance of', 'supervised learning'),
('generative model', 'instance of', 'unsupervised learning'),
('mathematical', 'instance of', 'unsupervised learning'),
('theoretical level', 'instance of', 'unsupervised learning'),
('predict', 'instance of', 'supervised learning'),
('specific models', 'instance of', 'unsupervised learning'),
('linear classifier', 'instance of', 'supervised learning')"
15.1,4,"('representation learning', 'pretrained features', 'simultaneous supervised and unsupervised learning', 'output layer', 'unsupervised pretraining', 'word embeddings', 'one-hot vectors', 'learned word embeddings', 'processing words', 'processing images', 'semi-supervised learning', 'international transfer learning competitions', 'labeled examples', 'unsupervised learning', 'regularizers', 'weight decay', 'input distribution', 'classifiers')","('representation learning', 'instance of', 'pretrained features')
('pretrained features', 'subject of', 'simultaneous supervised and unsupervised learning')
('simultaneous supervised and unsupervised learning', 'subclass of', 'unsupervised learning')
('output layer', 'part of', 'simultaneous supervised and unsupervised learning')
('unsupervised pretraining', 'subclass of', 'unsupervised learning')
('word embeddings', 'instance of', 'pretrained features')
('one-hot vectors', 'instance of', 'pretrained features')
('learned word embeddings', 'subject of', 'pretrained features')
('processing words', 'part of', 'pretrained features')
('processing images', 'part of', 'pretrained features')
('semi-supervised learning', 'subclass of', 'unsupervised learning')
('international transfer learning competitions', 'instance of', 'pretrained features')
('labeled examples', 'subject of', 'semi-supervised learning')
('unsupervised learning', 'part of', 'simultaneous supervised and unsupervised learning')
('regularizers', 'subclass of', 'unsupervised learning')
('weight decay', 'instance of', 'regularizers')
('input distribution', 'part of', 'unsupervised learning')
('classifiers', 'part of', 'unsupervised learning')"
15.1,5,"('representation learning', 'pretrained features', 'simultaneous supervised and unsupervised learning', 'output layer', 'unsupervised pretraining', 'word embeddings', 'one-hot vectors', 'learned word embeddings', 'processing words', 'processing images', 'semi-supervised learning', 'international transfer learning competitions', 'labeled examples', 'unsupervised learning', 'regularizers', 'weight decay', 'input distribution', 'classifiers', 'neural networks', 'function space', 'random initializations', 'Isomap', 'linear projection', 'high-dimensional space', '2-D', 'Erhan et al. (2010)', 'time', 'pretraining-based estimator')","('representation learning', 'instance of', 'pretrained features')
('pretrained features', 'subject of', 'simultaneous supervised and unsupervised learning')
('simultaneous supervised and unsupervised learning', 'subclass of', 'unsupervised learning')
('output layer', 'part of', 'simultaneous supervised and unsupervised learning')
('unsupervised pretraining', 'subclass of', 'unsupervised learning')
('word embeddings', 'instance of', 'pretrained features')
('one-hot vectors', 'instance of', 'pretrained features')
('learned word embeddings', 'subject of', 'pretrained features')
('processing words', 'part of', 'pretrained features')
('processing images', 'part of', 'pretrained features')
('semi-supervised learning', 'subclass of', 'unsupervised learning')
('international transfer learning competitions', 'instance of', 'pretrained features')
('labeled examples', 'subject of', 'semi-supervised learning')
('unsupervised learning', 'part of', 'simultaneous supervised and unsupervised learning')
('regularizers', 'subclass of', 'unsupervised learning')
('weight decay', 'instance of', 'regularizers')
('input distribution', 'part of', 'unsupervised learning')
('classifiers', 'part of', 'unsupervised learning')
('neural networks', 'instance of', 'pretrained features')
('function space', 'instance of', 'pretrained features')
('random initializations', 'subclass of', 'pretrained features')
('Isomap', 'instance of', 'pretrained features')
('linear projection', 'instance of', 'pretrained features')
('high-dimensional space', 'part of', 'pretrained features')
('2-D', 'instance of', 'pretrained features')
('Erhan et al. (2010)', 'subject of', 'pretrained features')
('time', 'part of', 'pretrained features')
('pretraining-based estimator', 'instance of', 'pretrained features')"
15.1,6,"('representation learning', 'unsupervised pretraining', 'classification', 'optimization', 'regularizer', 'train reconstruction error', 'test reconstruction error', 'deep autoencoders', 'Hinton and Salakhutdinov (2006)', 'parameters', 'function space', 'gradient', 'early stopping', 'stochasticity', 'poor conditioning', 'Hessian', 'variance', 'overfitting', 'estimation process', 'risk', 'neural network parameters', 'very bad', 'mean and variance', 'deeper networks', 'rectified linear units', 'dropout', 'batch normalization', 'underlying causes', 'observed data', 'regularization strategies', 'hyperparameter')","('representation learning', 'subject of', 'unsupervised pretraining')
('unsupervised pretraining', 'part of', 'representation learning')
('classification', 'instance of', 'representation learning')
('optimization', 'subject of', 'representation learning')
('regularizer', 'subject of', 'representation learning')
('train reconstruction error', 'part of', 'unsupervised pretraining')
('test reconstruction error', 'part of', 'unsupervised pretraining')
('deep autoencoders', 'instance of', 'unsupervised pretraining')
('Hinton and Salakhutdinov (2006)', 'subject of', 'unsupervised pretraining')
('parameters', 'part of', 'representation learning')
('function space', 'part of', 'representation learning')
('gradient', 'part of', 'optimization')
('early stopping', 'subclass of', 'optimization')
('stochasticity', 'part of', 'optimization')
('poor conditioning', 'part of', 'optimization')
('Hessian', 'part of', 'optimization')
('variance', 'subclass of', 'optimization')
('overfitting', 'subclass of', 'risk')
('estimation process', 'part of', 'risk')
('risk', 'part of', 'representation learning')
('neural network parameters', 'subject of', 'representation learning')
('very bad', 'subclass of', 'risk')
('mean and variance', 'part of', 'representation learning')
('deeper networks', 'subclass of', 'representation learning')
('rectified linear units', 'part of', 'representation learning')
('dropout', 'part of', 'representation learning')
('batch normalization', 'part of', 'representation learning')
('underlying causes', 'part of', 'representation learning')
('observed data', 'part of', 'representation learning')
('regularization strategies', 'part of', 'representation learning')
('hyperparameter', 'part of', 'representation learning')"
15.1,7,"('representation learning', 'unsupervised pretraining', 'hyperparameters', 'regularization', 'supervised model', 'coefficient', 'unsupervised cost', 'pretrained parameters', 'validation set error', 'pretraining iterations', 'natural language processing', 'one-hot vectors', 'similarity information', 'unlabeled sets', 'corpus', 'good representation', 'fine-tune', 'supervised task', 'Collobert and Weston (2008b)', 'Turian et al. (2010)', 'Collobert et al. (2011a)', 'deep learning techniques', 'dropout', 'batch normalization', 'human-level performance', 'labeled datasets', 'CIFAR-10', 'MNIST', 'alternative splicing dataset', 'Bayesian methods', 'Srivastava (2013)', 'popularity', 'milestone', 'history', 'research')","('representation learning', 'subject of', 'unsupervised pretraining')
('unsupervised pretraining', 'part of', 'representation learning')
('hyperparameters', 'part of', 'representation learning')
('regularization', 'part of', 'representation learning')
('supervised model', 'part of', 'representation learning')
('coefficient', 'part of', 'regularization')
('unsupervised cost', 'part of', 'unsupervised pretraining')
('pretrained parameters', 'part of', 'unsupervised pretraining')
('validation set error', 'part of', 'unsupervised pretraining')
('pretraining iterations', 'part of', 'unsupervised pretraining')
('natural language processing', 'instance of', 'representation learning')
('one-hot vectors', 'instance of', 'representation learning')
('similarity information', 'instance of', 'unsupervised pretraining')
('unlabeled sets', 'part of', 'unsupervised pretraining')
('corpus', 'part of', 'unsupervised pretraining')
('good representation', 'part of', 'representation learning')
('fine-tune', 'part of', 'representation learning')
('supervised task', 'part of', 'representation learning')
('Collobert and Weston (2008b)', 'subject of', 'representation learning')
('Turian et al. (2010)', 'subject of', 'representation learning')
('Collobert et al. (2011a)', 'subject of', 'representation learning')
('deep learning techniques', 'subclass of', 'representation learning')
('dropout', 'part of', 'representation learning')
('batch normalization', 'part of', 'representation learning')
('human-level performance', 'part of', 'representation learning')
('labeled datasets', 'part of', 'representation learning')
('CIFAR-10', 'instance of', 'labeled datasets')
('MNIST', 'instance of', 'labeled datasets')
('alternative splicing dataset', 'instance of', 'labeled datasets')
('Bayesian methods', 'subclass of', 'representation learning')
('Srivastava (2013)', 'subject of', 'representation learning')
('popularity', 'part of', 'representation learning')
('milestone', 'part of', 'representation learning')
('history', 'part of', 'representation learning')
('research', 'part of', 'representation learning')"
15.2,0,"('representation learning', 'supervised pretraining', 'transfer learning', 'domain adaptation', 'distribution P', 'generalization', 'unsupervised learning task', 'supervised learning task', 'visual categories', 'low-level notions', 'geometric changes', 'lighting', 'multi-task learning', 'shared lower layers', 'task-dependent upper layers', 'semantics of the input', 'semantics of the output', 'speech recognition system', 'neural network', 'task-specific preprocessing')","('representation learning', 'part of', 'supervised pretraining')
('supervised pretraining', 'part of', 'transfer learning')
('transfer learning', 'part of', 'domain adaptation')
('domain adaptation', 'part of', 'representation learning')
('distribution P', 'part of', 'representation learning')
('generalization', 'part of', 'representation learning')
('unsupervised learning task', 'subject of', 'representation learning')
('supervised learning task', 'subject of', 'representation learning')
('visual categories', 'part of', 'representation learning')
('low-level notions', 'part of', 'representation learning')
('geometric changes', 'part of', 'representation learning')
('lighting', 'part of', 'representation learning')
('multi-task learning', 'part of', 'representation learning')
('shared lower layers', 'part of', 'multi-task learning')
('task-dependent upper layers', 'part of', 'multi-task learning')
('semantics of the input', 'part of', 'representation learning')
('semantics of the output', 'part of', 'representation learning')
('speech recognition system', 'part of', 'representation learning')
('neural network', 'part of', 'representation learning')
('task-specific preprocessing', 'part of', 'supervised learning task')"
15.2,1,"('representation learning', 'multi-task learning', 'transfer learning', 'sentiment analysis', 'domain adaptation', 'unsupervised pretraining', 'denoising autoencoders', 'concept drift', 'gradual changes in the data distribution')","('representation learning', 'instance of', 'multi-task learning')
('representation learning', 'instance of', 'transfer learning')
('representation learning', 'instance of', 'unsupervised pretraining')
('denoising autoencoders', 'instance of', 'unsupervised pretraining')
('sentiment analysis', 'instance of', 'domain adaptation')
('concept drift', 'instance of', 'gradual changes in the data distribution')"
15.2,2,"('multi-task learning', 'transfer learning', 'representation learning', 'unsupervised deep learning', 'linear classifier', 'one-shot learning', 'zero-shot learning')","('representation learning', 'instance of', 'multi-task learning')
('representation learning', 'instance of', 'transfer learning')
('unsupervised deep learning', 'instance of', 'representation learning')
('linear classifier', 'instance of', 'unsupervised deep learning')
('one-shot learning', 'instance of', 'unsupervised deep learning')
('zero-shot learning', 'instance of', 'unsupervised deep learning')"
15.2,3,"('representation learning', 'zero-data learning', 'zero-shot learning', 'unsupervised examples', 'word embedding', 'machine translation', 'transfer learning', 'multi-modal learning')","('word embedding', 'instance of', 'representation learning')
('machine translation', 'instance of', 'representation learning')
('transfer learning', 'instance of', 'representation learning')
('multi-modal learning', 'instance of', 'representation learning')"
15.2,4,"('CHAPTER 15', 'REPRESENTATION LEARNING', 'Transfer learning', 'zero-shot learning', 'encoder function', 'training set', 'representation function', 'similarity metric', 'bidirectional arrows', 'Labeled examples', 'one-way or two-way map', 'Zero-data learning', 'image-representations', 'feature vectors', 'Hrant Khachatrian')","('CHAPTER 15', 'based on', 'REPRESENTATION LEARNING')
('Transfer learning', 'based on', 'REPRESENTATION LEARNING')
('Transfer learning', 'part of', 'zero-shot learning')
('encoder function', 'based on', 'REPRESENTATION LEARNING')
('training set', 'based on', 'REPRESENTATION LEARNING')
('representation function', 'based on', 'REPRESENTATION LEARNING')
('similarity metric', 'based on', 'REPRESENTATION LEARNING')
('bidirectional arrows', 'based on', 'REPRESENTATION LEARNING')
('Labeled examples', 'based on', 'REPRESENTATION LEARNING')
('one-way or two-way map', 'based on', 'REPRESENTATION LEARNING')
('Zero-data learning', 'based on', 'REPRESENTATION LEARNING')
('image-representations', 'based on', 'REPRESENTATION LEARNING')
('feature vectors', 'based on', 'REPRESENTATION LEARNING')
('Hrant Khachatrian', 'based on', 'REPRESENTATION LEARNING')"
15.3,0,"('representation learning', 'parameters', 'representation', 'concept', 'generalize', 'semi-supervised learning', 'causal factors', 'ideal representation', 'features', 'feature space', 'deep learning', 'Chapelle et al.', 'unsupervised representation learning', 'AI tasks', 'isolate individual attributes', 'representation', 'underlying causes', 'unsupervised learning', 'p(x)', 'p(y x)', 'training set')","('representation learning', 'based on', 'parameters')
('representation learning', 'based on', 'representation')
('semi-supervised learning', 'part of', 'representation learning')
('causal factors', 'based on', 'representation learning')
('ideal representation', 'based on', 'representation learning')
('features', 'based on', 'representation learning')
('feature space', 'based on', 'representation learning')
('deep learning', 'based on', 'representation learning')
('unsupervised representation learning', 'based on', 'representation learning')
('AI tasks', 'based on', 'representation learning')
('isolate individual attributes', 'based on', 'representation learning')
('representation', 'instance of', 'underlying causes')
('unsupervised learning', 'based on', 'representation learning')
('training set', 'based on', 'representation learning')"
15.3,1,"('mixture components', 'density over x', 'explanatory factor', 'natural object classes', 'p(x)', 'unsupervised learning', 'labeled example', 'mixture component', 'separated', 'p(y x)', 'causal factors', 'unsupervised representation learning', 'generative process', 'directed graphical model', 'marginal probability', 'best possible model', 'generalization point of view')","('mixture components', 'based on', 'density over x')
('explanatory factor', 'based on', 'density over x')
('natural object classes', 'based on', 'density over x')
('p(x)', 'based on', 'density over x')
('unsupervised learning', 'based on', 'density over x')
('labeled example', 'based on', 'density over x')
('mixture component', 'based on', 'density over x')
('separated', 'based on', 'density over x')
('p(y x)', 'based on', 'density over x')
('causal factors', 'based on', 'density over x')
('unsupervised representation learning', 'based on', 'density over x')
('generative process', 'based on', 'density over x')
('directed graphical model', 'based on', 'density over x')
('marginal probability', 'based on', 'density over x')
('best possible model', 'based on', 'density over x')
('generalization point of view', 'based on', 'density over x')
('explanatory factor', 'part of', 'natural object classes')
('explanatory factor', 'part of', 'p(x)')
('explanatory factor', 'part of', 'unsupervised learning')
('explanatory factor', 'part of', 'causal factors')
('explanatory factor', 'part of', 'unsupervised representation learning')
('generative process', 'based on', 'mixture components')
('directed graphical model', 'part of', 'mixture components')
('marginal probability', 'based on', 'mixture components')
('generalization point of view', 'based on', 'mixture components')"
15.3,2,"('latent variable', 'ideal representation learning', 'predict y', 'Bayes’ rule', 'conditional distribution', 'research problem', 'unsupervised learner', 'generative factors', 'disentangle', 'performance', 'underlying causes', 'brute force solution', 'factors of variation', 'visual scene', 'psychological phenomenon', 'semi-supervised learning', 'supervised learning signal', 'larger representations', 'emerging strategy', 'autoencoders', 'generative models', 'mean squared error', 'pixels', 'small objects')","('latent variable', 'based on', 'ideal representation learning')
('predict y', 'based on', 'Bayes’ rule')
('conditional distribution', 'based on', 'Bayes’ rule')
('research problem', 'based on', 'Bayes’ rule')
('unsupervised learner', 'based on', 'Bayes’ rule')
('generative factors', 'based on', 'Bayes’ rule')
('disentangle', 'based on', 'Bayes’ rule')
('performance', 'based on', 'Bayes’ rule')
('underlying causes', 'based on', 'Bayes’ rule')
('brute force solution', 'based on', 'Bayes’ rule')
('factors of variation', 'based on', 'Bayes’ rule')
('visual scene', 'based on', 'Bayes’ rule')
('psychological phenomenon', 'based on', 'Bayes’ rule')
('semi-supervised learning', 'based on', 'Bayes’ rule')
('supervised learning signal', 'based on', 'Bayes’ rule')
('larger representations', 'based on', 'Bayes’ rule')
('emerging strategy', 'based on', 'Bayes’ rule')
('autoencoders', 'based on', 'Bayes’ rule')
('generative models', 'based on', 'Bayes’ rule')
('mean squared error', 'based on', 'Bayes’ rule')
('pixels', 'based on', 'Bayes’ rule')
('small objects', 'based on', 'Bayes’ rule')
('predict y', 'based on', 'conditional distribution')
('predict y', 'based on', 'research problem')
('predict y', 'based on', 'unsupervised learner')
('predict y', 'based on', 'generative factors')
('predict y', 'based on', 'disentangle')
('predict y', 'based on', 'performance')
('predict y', 'based on', 'underlying causes')
('predict y', 'based on', 'brute force solution')
('predict y', 'based on', 'factors of variation')
('predict y', 'based on', 'visual scene')
('predict y', 'based on', 'psychological phenomenon')
('predict y', 'based on', 'semi-supervised learning')
('predict y', 'based on', 'supervised learning signal')
('predict y', 'based on', 'larger representations')
('predict y', 'based on', 'emerging strategy')
('predict y', 'based on', 'autoencoders')
('predict y', 'based on', 'generative models')
('predict y', 'based on', 'mean squared error')
('predict y', 'based on', 'pixels')
('predict y', 'based on', 'small objects')"
15.3,3,"('autoencoder', 'mean squared error', 'ping pong ball', 'robotics task', 'underlying causal factors', 'salient', 'capacity', 'images', 'robot', 'baseballs', 'generative adversarial networks', 'generative model', 'feedforward classifier', 'structured pattern', 'generative adversarial network', 'human heads', 'ears', 'adversarial framework', 'mean squared error loss')","('autoencoder', 'based on', 'mean squared error')
('ping pong ball', 'based on', 'mean squared error')
('robotics task', 'based on', 'mean squared error')
('underlying causal factors', 'based on', 'mean squared error')
('salient', 'based on', 'mean squared error')
('capacity', 'based on', 'mean squared error')
('images', 'based on', 'mean squared error')
('robot', 'based on', 'mean squared error')
('baseballs', 'based on', 'mean squared error')
('generative adversarial networks', 'based on', 'mean squared error')
('generative model', 'based on', 'mean squared error')
('feedforward classifier', 'based on', 'mean squared error')
('structured pattern', 'based on', 'mean squared error')
('generative adversarial network', 'based on', 'mean squared error')
('human heads', 'based on', 'mean squared error')
('ears', 'based on', 'mean squared error')
('adversarial framework', 'based on', 'mean squared error')
('mean squared error loss', 'based on', 'mean squared error')
('underlying causal factors', 'part of', 'salient')
('underlying causal factors', 'part of', 'capacity')
('underlying causal factors', 'part of', 'structured pattern')"
15.3,4,"('representation learning', 'MSE', 'adversarial', 'predictive generative networks', 'salient', '3-D model', 'human head', 'viewing angle', 'ground truth', 'mean squared error', 'ears', 'brightness', 'skin', 'cost function', 'underlying causes', 'active area of research', 'figures', 'recognizable shape', 'consistent position', 'feedforward network', 'generative adversarial framework', 'example images', 'generative adversarial networks', 'factors', 'true generative process', 'Bayes’ rule', 'invariant', 'laws of the universe', 'marginal distribution', 'generalization', 'robustness', 'temporal non-stationarity', 'nature of the task')","('representation learning', 'instance of', 'MSE')
('adversarial', 'instance of', 'predictive generative networks')
('ground truth', 'instance of', 'mean squared error')
('ears', 'instance of', 'brightness')
('skin', 'instance of', 'brightness')
('cost function', 'instance of', 'underlying causes')
('active area of research', 'instance of', 'figures')
('recognizable shape', 'instance of', 'consistent position')
('feedforward network', 'instance of', 'generative adversarial framework')
('generative adversarial networks', 'instance of', 'generative adversarial framework')
('true generative process', 'instance of', 'generative adversarial framework')
('Bayes’ rule', 'instance of', 'invariant')
('laws of the universe', 'instance of', 'invariant')
('marginal distribution', 'instance of', 'generalization')
('robustness', 'instance of', 'generalization')
('temporal non-stationarity', 'instance of', 'nature of the task')"
15.4,0,"('distributed representation', 'concepts', 'neural networks', 'hidden units', 'probabilistic models', 'deep learning algorithms', 'underlying causal factors', 'representation space', 'configuration variable', 'symbolic representation', 'binary features', 'input space', 'symbol or category', 'dictionary', 'feature detectors', 'one-hot representation', 'non-distributed representations', 'clustering methods', 'k-means algorithm', 'k-nearest neighbors algorithm', 'templates', 'prototype examples')","('distributed representation', 'instance of', 'neural networks')
('hidden units', 'instance of', 'neural networks')
('probabilistic models', 'instance of', 'deep learning algorithms')
('underlying causal factors', 'instance of', 'representation space')
('configuration variable', 'instance of', 'representation space')
('symbolic representation', 'instance of', 'binary features')
('input space', 'instance of', 'symbol or category')
('dictionary', 'instance of', 'symbol or category')
('feature detectors', 'instance of', 'non-distributed representations')
('one-hot representation', 'instance of', 'non-distributed representations')
('clustering methods', 'instance of', 'k-means algorithm')
('k-nearest neighbors algorithm', 'instance of', 'k-means algorithm')
('templates', 'instance of', 'prototype examples')"
15.4,1,"('distributed representation', 'learning algorithm', 'input space', 'binary features', 'thresholding', 'linear transformation', 'decision boundary', 'half-planes', 'representation value', 'non-distributed representations', 'input dimensions', 'intersecting half-spaces', 'unique codes', 'nearest neighbor algorithm', 'exponentially many regions', 'feasible', 'linear classifier', 'class identities', 'deep linear-threshold network', 'VC dimension', 'regularizer', 'powerful representation layer', 'weak classifier layer', 'capacity constraint', 'linearly separable')","('distributed representation', 'instance of', 'learning algorithm')
('input space', 'instance of', 'binary features')
('thresholding', 'instance of', 'linear transformation')
('decision boundary', 'instance of', 'half-planes')
('representation value', 'instance of', 'non-distributed representations')
('input dimensions', 'instance of', 'intersecting half-spaces')
('unique codes', 'instance of', 'non-distributed representations')
('nearest neighbor algorithm', 'instance of', 'exponentially many regions')
('feasible', 'instance of', 'linear classifier')
('class identities', 'instance of', 'deep linear-threshold network')
('VC dimension', 'instance of', 'regularizer')
('powerful representation layer', 'instance of', 'weak classifier layer')
('capacity constraint', 'instance of', 'linearly separable')"
15.4,2,"('decision trees', 'Gaussian mixtures', 'mixtures of experts', 'kernel machines', 'Gaussian kernel', 'language models', 'n-grams', 'parameters', 'examples', 'generalization', 'shared attributes', 'neural language models', 'similarity space', 'statistical advantage', 'learning algorithm')","('decision trees', 'instance of', 'learning algorithm')
('Gaussian mixtures', 'instance of', 'mixtures of experts')
('kernel machines', 'instance of', 'learning algorithm')
('Gaussian kernel', 'instance of', 'kernel machines')
('language models', 'instance of', 'neural language models')
('n-grams', 'instance of', 'neural language models')
('parameters', 'instance of', 'examples')
('generalization', 'instance of', 'shared attributes')
('neural language models', 'instance of', 'learning algorithm')
('similarity space', 'instance of', 'statistical advantage')"
15.4,3,"('representation learning', 'nearest neighbor algorithm', 'learning algorithm', 'non-distributed representation', 'non-distributed algorithms', 'geometry', 'input space', 'regions', 'set of parameters', 'non-distributed approach', 'training set', 'optimization algorithm', 'output', 'local generalization', 'smoothness prior', 'complicated function', 'peaks', 'troughs', 'distributed representation')","('representation learning', 'instance of', 'learning algorithm')
('nearest neighbor algorithm', 'instance of', 'learning algorithm')
('non-distributed representation', 'instance of', 'representation learning')
('non-distributed algorithms', 'instance of', 'learning algorithm')
('geometry', 'instance of', 'mathematics')
('input space', 'instance of', 'mathematics')
('regions', 'instance of', 'geometry')
('set of parameters', 'instance of', 'mathematics')
('non-distributed approach', 'instance of', 'learning algorithm')
('training set', 'instance of', 'learning algorithm')
('optimization algorithm', 'instance of', 'learning algorithm')
('output', 'instance of', 'learning algorithm')
('local generalization', 'instance of', 'learning algorithm')
('smoothness prior', 'instance of', 'learning algorithm')
('complicated function', 'instance of', 'mathematics')
('peaks', 'instance of', 'mathematics')
('troughs', 'instance of', 'mathematics')
('distributed representation', 'instance of', 'representation learning')"
15.4,4,"('representation learning', 'compactly represented', 'parameters', 'non-distributed learning algorithms', 'smoothness assumption', 'target function', 'estimator', 'input', 'assumption', 'curse of dimensionality', 'distinguishable regions', 'category', 'symbol', 'decoder mapping', 'regularity', 'convolutional network', 'max-pooling', 'object recognition', 'distributed representation learning algorithm', 'binary features', 'thresholding linear functions', 'half-spaces', 'hyperplanes', 'intersection', 'number of regions', 'input size', 'number of hidden units', 'training examples')","('representation learning', 'instance of', 'learning algorithm')
('compactly represented', 'based on', 'representation learning')
('parameters', 'part of', 'representation learning')
('non-distributed learning algorithms', 'based on', 'representation learning')
('smoothness assumption', 'based on', 'representation learning')
('target function', 'based on', 'representation learning')
('estimator', 'based on', 'representation learning')
('input', 'part of', 'representation learning')
('assumption', 'based on', 'representation learning')
('curse of dimensionality', 'based on', 'representation learning')
('distinguishable regions', 'part of', 'representation learning')
('category', 'part of', 'representation learning')
('symbol', 'part of', 'representation learning')
('decoder mapping', 'part of', 'representation learning')
('regularity', 'based on', 'representation learning')
('convolutional network', 'based on', 'representation learning')
('max-pooling', 'based on', 'representation learning')
('object recognition', 'based on', 'representation learning')
('distributed representation learning algorithm', 'instance of', 'representation learning')
('binary features', 'part of', 'representation learning')
('thresholding linear functions', 'part of', 'representation learning')
('half-spaces', 'part of', 'representation learning')
('hyperplanes', 'part of', 'representation learning')
('intersection', 'based on', 'representation learning')
('number of regions', 'part of', 'representation learning')
('input size', 'part of', 'representation learning')
('number of hidden units', 'part of', 'representation learning')
('training examples', 'part of', 'representation learning')"
15.4,5,"('geometric argument', 'generalization power', 'distributed representation', 'linear-threshold features', 'parameters', 'input space', 'unique symbol', 'feature extractors', 'attributes', 'non-distributed setting', 'training examples', 'model', 'VC dimension', 'neural network', 'weights', 'prior belief', 'linear classifier', 'categories', 'linearly separable', 'causal factors', 'output', 'prior belief', 'logic', 'experimental validation', 'deep convolutional network', 'ImageNet dataset', 'Places benchmark dataset', 'interpretability', 'label', 'computer vision deep networks')","('geometric argument', 'based on', 'distributed representation')
('generalization power', 'based on', 'distributed representation')
('distributed representation', 'instance of', 'representation learning')
('linear-threshold features', 'part of', 'distributed representation')
('parameters', 'part of', 'distributed representation')
('input space', 'part of', 'mathematics')
('unique symbol', 'part of', 'distributed representation')
('feature extractors', 'part of', 'distributed representation')
('attributes', 'part of', 'distributed representation')
('non-distributed setting', 'based on', 'distributed representation')
('training examples', 'part of', 'distributed representation')
('model', 'part of', 'distributed representation')
('VC dimension', 'part of', 'distributed representation')
('neural network', 'instance of', 'distributed representation')
('weights', 'part of', 'distributed representation')
('prior belief', 'part of', 'distributed representation')
('linear classifier', 'part of', 'distributed representation')
('categories', 'part of', 'distributed representation')
('linearly separable', 'based on', 'distributed representation')
('causal factors', 'part of', 'distributed representation')
('output', 'part of', 'distributed representation')
('prior belief', 'based on', 'distributed representation')
('logic', 'instance of', 'mathematics')
('experimental validation', 'based on', 'distributed representation')
('deep convolutional network', 'based on', 'distributed representation')
('ImageNet dataset', 'part of', 'computer vision deep networks')
('Places benchmark dataset', 'part of', 'computer vision deep networks')
('interpretability', 'based on', 'distributed representation')
('label', 'part of', 'distributed representation')
('computer vision deep networks', 'instance of', 'distributed representation')"
15.4,6,"('generative model', 'distributed representation', 'gender', 'wearing glasses', 'concept', 'man with glasses', 'man without glasses', 'woman without glasses', 'woman with glasses', 'decoding', 'representation vectors', 'images', 'class', 'Radford et al.', 'common underlying factors of variation', 'representation space', 'learn features automatically', 'gradient descent', 'objective function', 'semantically interesting features', 'statistical separability', 'generalization')","('generative model', 'instance of', 'distributed representation')
('distributed representation', 'instance of', 'representation learning')
('gender', 'part of', 'distributed representation')
('wearing glasses', 'part of', 'distributed representation')
('concept', 'part of', 'distributed representation')
('man with glasses', 'part of', 'distributed representation')
('man without glasses', 'part of', 'distributed representation')
('woman without glasses', 'part of', 'distributed representation')
('woman with glasses', 'part of', 'distributed representation')
('decoding', 'based on', 'distributed representation')
('representation vectors', 'part of', 'distributed representation')
('images', 'part of', 'distributed representation')
('class', 'part of', 'distributed representation')
('Radford et al.', 'part of', 'distributed representation')
('common underlying factors of variation', 'based on', 'distributed representation')
('representation space', 'part of', 'distributed representation')
('learn features automatically', 'based on', 'distributed representation')
('gradient descent', 'based on', 'distributed representation')
('objective function', 'part of', 'distributed representation')
('semantically interesting features', 'part of', 'distributed representation')
('statistical separability', 'based on', 'distributed representation')
('generalization', 'based on', 'distributed representation')"
15.5,0,"('exponential gains', 'depth', 'multilayer perceptrons', 'universal approximators', 'model size', 'statistical efficiency', 'generative model', 'deep neural network', 'complicated relationship', 'abstract explanatory factors', 'pixels', 'AI tasks', 'distributed representations', 'higher level features', 'generative causes', 'nonlinearities', 'organizing computation', 'hierarchy', 'boost to statistical efficiency', 'saturating nonlinearities', 'Boolean gates', 'sum/products', 'RBF units', 'single hidden layer', 'expressive power', 'deep architectures', 'functions', 'input size', 'deterministic feedforward networks', 'structured probabilistic models', 'latent variables', 'restricted Boltzmann machines', 'deep belief networks', 'probability distributions')","('exponential gains', 'based on', 'depth')
('depth', 'part of', 'deep neural network')
('multilayer perceptrons', 'instance of', 'deep neural network')
('universal approximators', 'based on', 'multilayer perceptrons')
('model size', 'part of', 'deep neural network')
('statistical efficiency', 'based on', 'deep neural network')
('generative model', 'instance of', 'distributed representation')
('deep neural network', 'instance of', 'distributed representation')
('complicated relationship', 'based on', 'distributed representations')
('abstract explanatory factors', 'part of', 'distributed representations')
('pixels', 'part of', 'distributed representations')
('AI tasks', 'part of', 'distributed representations')
('distributed representations', 'instance of', 'representation learning')
('higher level features', 'part of', 'distributed representations')
('generative causes', 'part of', 'distributed representations')
('nonlinearities', 'part of', 'distributed representations')
('organizing computation', 'based on', 'distributed representations')
('hierarchy', 'based on', 'distributed representations')
('boost to statistical efficiency', 'based on', 'depth')
('saturating nonlinearities', 'part of', 'distributed representations')
('Boolean gates', 'part of', 'distributed representations')
('sum/products', 'part of', 'distributed representations')
('RBF units', 'part of', 'distributed representations')
('single hidden layer', 'part of', 'distributed representations')
('expressive power', 'part of', 'distributed representations')
('deep architectures', 'part of', 'distributed representations')
('functions', 'part of', 'distributed representations')
('input size', 'part of', 'distributed representations')
('deterministic feedforward networks', 'part of', 'distributed representations')
('structured probabilistic models', 'part of', 'distributed representations')
('latent variables', 'part of', 'distributed representations')
('restricted Boltzmann machines', 'part of', 'distributed representations')
('deep belief networks', 'part of', 'distributed representations')
('probability distributions', 'part of', 'distributed representations')"
15.6,0,"('representation learning', 'feedforward network', 'polynomial circuits', 'sum-product network', 'probability distribution', 'SPN', 'Martens and Medabalimi', 'expressive power', 'convolutional nets', 'underlying causal factors', 'supervised learning', 'unlabeled data', 'regularization strategies', 'deep learning', 'AI tasks')","('representation learning', 'part of', 'deep learning')
('feedforward network', 'instance of', 'deep learning')
('polynomial circuits', 'instance of', 'deep learning')
('sum-product network', 'instance of', 'deep learning')
('probability distribution', 'instance of', 'deep learning')
('SPN', 'instance of', 'deep learning')
('Martens and Medabalimi', 'instance of', 'deep learning')
('expressive power', 'part of', 'deep learning')
('convolutional nets', 'instance of', 'deep learning')
('underlying causal factors', 'part of', 'deep learning')
('supervised learning', 'instance of', 'deep learning')
('unlabeled data', 'facet of', 'deep learning')
('regularization strategies', 'instance of', 'deep learning')
('AI tasks', 'part of', 'deep learning')"
15.6,1,"('generic regularization strategies', 'smoothness', 'linearity', 'multiple explanatory factors', 'causal factors', 'depth')","('generic regularization strategies', 'instance of', 'regularization strategies')
('smoothness', 'part of', 'generic regularization strategies')
('linearity', 'part of', 'generic regularization strategies')
('multiple explanatory factors', 'part of', 'generic regularization strategies')
('causal factors', 'part of', 'generic regularization strategies')
('depth', 'part of', 'generic regularization strategies')"
15.6,2,"('shared factors across tasks', 'manifolds', 'natural clustering', 'temporal and spatial coherence', 'sparsity', 'simplicity of factor dependencies')","('shared factors across tasks', 'part of', 'manifolds')
('manifolds', 'instance of', 'shared factors across tasks')
('natural clustering', 'instance of', 'shared factors across tasks')
('temporal and spatial coherence', 'part of', 'shared factors across tasks')
('sparsity', 'part of', 'shared factors across tasks')
('simplicity of factor dependencies', 'part of', 'shared factors across tasks')"
15.6,3,"('linear dependencies', 'shallow autoencoder', 'laws of physics', 'linear predictor', 'factorized prior')","('linear dependencies', 'instance of', 'linear predictor')
('shallow autoencoder', 'instance of', 'linear dependencies')
('laws of physics', 'instance of', 'linear predictor')
('linear predictor', 'part of', 'factorized prior')
('factorized prior', 'instance of', 'linear dependencies')"
15.6,4,"('structured probabilistic models', 'graphical models')","('structured probabilistic models', 'instance of', 'graphical models')
('graphical models', 'part of', 'structured probabilistic models')"
16.1,0,"('deep learning', 'graphical models', 'graph structures', 'artificial intelligence', 'high-dimensional data', 'machine learning', 'classification algorithms', 'probabilistic models', 'categorical label', 'input', 'output', 'probabilistic distribution')","('deep learning', 'instance of', 'graphical models'),
('deep learning', 'instance of', 'graph structures'),
('deep learning', 'instance of', 'artificial intelligence'),
('graphical models', 'subclass of', 'high-dimensional data'),
('graphical models', 'subclass of', 'machine learning'),
('graphical models', 'subclass of', 'classification algorithms'),
('graph structures', 'instance of', 'probabilistic models'),
('artificial intelligence', 'subclass of', 'machine learning'),
('artificial intelligence', 'subclass of', 'probabilistic models'),
('high-dimensional data', 'instance of', 'categorical label'),
('machine learning', 'instance of', 'input'),
('machine learning', 'instance of', 'output'),
('classification algorithms', 'instance of', 'probabilistic distribution')"
16.1,1,"('deep learning', 'machine learning system', 'density estimation', 'denoising', 'missing value imputation', 'sampling', 'binary variables', 'random vector')","('deep learning', 'instance of', 'machine learning system'),
('density estimation', 'subclass of', 'machine learning system'),
('denoising', 'subclass of', 'machine learning system'),
('missing value imputation', 'subclass of', 'machine learning system'),
('sampling', 'subclass of', 'machine learning system'),
('binary variables', 'instance of', 'random vector'),
('random vector', 'instance of', 'machine learning system')"
16.1,2,"('CIFAR-10 dataset', 'structured probabilistic model', 'training example', 'Euclidean space', 'synthesizing new images', 'memorizing training data')","('CIFAR-10 dataset', 'instance of', 'structured probabilistic model'),
('structured probabilistic model', 'instance of', 'training example'),
('training example', 'subclass of', 'Euclidean space'),
('synthesizing new images', 'subclass of', 'structured probabilistic model'),
('memorizing training data', 'subclass of', 'structured probabilistic model')"
16.1,3,"('inference task', 'marginal distribution', 'conditional distribution', 'sampling', 'table-based model', 'joint distribution', 'back-off or smoothed n-gram models', 'runtime')","('inference task', 'instance of', 'marginal distribution'),
('inference task', 'instance of', 'conditional distribution'),
('conditional distribution', 'instance of', 'sampling'),
('table-based model', 'subclass of', 'conditional distribution'),
('joint distribution', 'instance of', 'conditional distribution'),
('back-off or smoothed n-gram models', 'subclass of', 'conditional distribution'),
('runtime', 'instance of', 'inference task')"
16.2,0,"('structured probabilistic models', 'direct interactions', 'random variables', 'graph theory', 'nodes', 'vertices', 'edges', 'directed acyclic graphs', 'undirected graphs', 'belief network', 'Bayesian network', 'directed graphical models')","('structured probabilistic models', 'subclass of', 'direct interactions'),
('direct interactions', 'instance of', 'random variables'),
('graph theory', 'subclass of', 'nodes'),
('graph theory', 'subclass of', 'edges'),
('nodes', 'instance of', 'vertices'),
('edges', 'instance of', 'vertices'),
('directed acyclic graphs', 'instance of', 'graph theory'),
('undirected graphs', 'instance of', 'graph theory'),
('belief network', 'subclass of', 'directed acyclic graphs'),
('belief network', 'subclass of', 'structured probabilistic models'),
('Bayesian network', 'subclass of', 'belief network'),
('directed graphical models', 'subclass of', 'belief network')"
16.2,1,"('structured probabilistic models', 'deep learning', 'directed graphical model', 'relay race example', 'Alice', 'Bob', 'Carol', 'finishing time', 'random variables', 'directed acyclic graph', 'conditional probability distributions', 'parents')","('structured probabilistic models', 'based on', 'deep learning')
('deep learning', 'subclass of', 'directed graphical model')
('relay race example', 'instance of', 'structured probabilistic models')
('Alice', 'instance of', 'relay race example')
('Bob', 'instance of', 'relay race example')
('Carol', 'instance of', 'relay race example')
('finishing time', 'part of', 'relay race example')
('random variables', 'part of', 'structured probabilistic models')
('directed acyclic graph', 'instance of', 'structured probabilistic models')
('conditional probability distributions', 'part of', 'structured probabilistic models')
('parents', 'use', 'directed acyclic graph')"
16.2,2,"('structured probabilistic models', 'deep learning', 'directed graphical model', 'relay race example', 'Alice', 'Bob', 'Carol', 'finishing time', 'random variables', 'directed acyclic graph', 'conditional probability distributions', 'parents', 'parameters')","('structured probabilistic models', 'based on', 'deep learning')
('deep learning', 'subclass of', 'directed graphical model')
('relay race example', 'instance of', 'structured probabilistic models')
('Alice', 'instance of', 'relay race example')
('Bob', 'instance of', 'relay race example')
('Carol', 'instance of', 'relay race example')
('finishing time', 'part of', 'relay race example')
('random variables', 'part of', 'structured probabilistic models')
('directed acyclic graph', 'instance of', 'structured probabilistic models')
('conditional probability distributions', 'part of', 'structured probabilistic models')
('parents', 'use', 'directed acyclic graph')
('parameters', 'part of', 'directed graphical model')"
16.2,3,"('structured probabilistic models', 'deep learning', 'undirected models', 'Markov random fields', 'Markov networks', 'directed graphical models', 'causality', 'relay race example', 'binary variables', 'interactions', 'indirect transmission', 'cold', 'random variables', 'conditional probability distribution')","('structured probabilistic models', 'subclass of', 'deep learning')
('undirected models', 'instance of', 'structured probabilistic models')
('Markov random fields', 'subclass of', 'undirected models')
('Markov networks', 'instance of', 'undirected models')
('directed graphical models', 'instance of', 'structured probabilistic models')
('causality', 'facet of', 'directed graphical models')
('relay race example', 'instance of', 'directed graphical models')
('binary variables', 'instance of', 'directed graphical models')
('interactions', 'relation', 'relay race example')
('indirect transmission', 'use', 'interactions')
('cold', 'instance of', 'binary variables')
('random variables', 'instance of', 'directed graphical models')
('conditional probability distribution', 'facet of', 'random variables')"
16.2,4,"('structured probabilistic models', 'deep learning', 'undirected graph', 'roommate’s health', 'work colleague’s health', 'random variable', 'joint states', 'clique potential', 'affinity', 'unnormalized probability distribution', 'Bayesian network', 'valid probability distribution', 'cold spreading', 'subset of nodes')","('structured probabilistic models', 'subclass of', 'deep learning')
('undirected graph', 'instance of', 'structured probabilistic models')
('roommate’s health', 'instance of', 'undirected graph')
('work colleague’s health', 'instance of', 'undirected graph')
('random variable', 'instance of', 'structured probabilistic models')
('joint states', 'instance of', 'random variable')
('clique potential', 'instance of', 'random variable')
('affinity', 'facet of', 'clique potential')
('unnormalized probability distribution', 'instance of', 'random variable')
('Bayesian network', 'instance of', 'structured probabilistic models')
('valid probability distribution', 'facet of', 'Bayesian network')
('cold spreading', 'relation', 'roommate’s health')
('subset of nodes', 'instance of', 'undirected graph')"
16.2,5,"('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'state', 'health', 'infected', 'cold', 'affinity', 'sick', 'common', 'model', 'clique', 'Partition Function', 'unnormalized probability distribution', 'normalized probability distribution', 'value', 'probability distribution', 'constant', 'φ function', 'Z', 'arguments', 'constant', 'partition function', 'statistical physics', 'integral', 'sum', 'joint assignments', 'intractable', 'compute', 'undirected model', 'efficiently', 'deep learning', 'approximations', 'approximate algorithms', 'designing undirected models', 'variables', 'continuous', 'Gibbs distribution')","('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'state', 'health')
('infected', 'state', 'health')
('cold', 'state', 'health')
('affinity', 'state', 'health')
('sick', 'state', 'health')
('common', 'state', 'health')
('model', 'state', 'health')
('clique', 'state', 'health')

('Partition Function', 'state', 'probability distribution')
('unnormalized probability distribution', 'state', 'probability distribution')
('normalized probability distribution', 'state', 'probability distribution')
('value', 'state', 'probability distribution')
('probability distribution', 'state', 'probability distribution')
('constant', 'state', 'probability distribution')
('φ function', 'state', 'probability distribution')
('Z', 'state', 'probability distribution')
('arguments', 'state', 'probability distribution')
('constant', 'state', 'probability distribution')
('partition function', 'state', 'probability distribution')
('statistical physics', 'state', 'probability distribution')
('integral', 'state', 'probability distribution')
('sum', 'state', 'probability distribution')
('joint assignments', 'state', 'probability distribution')
('intractable', 'state', 'probability distribution')
('compute', 'state', 'probability distribution')
('undirected model', 'state', 'probability distribution')
('efficiently', 'state', 'probability distribution')

('deep learning', 'use', 'structured probabilistic models')
('approximations', 'use', 'structured probabilistic models')
('approximate algorithms', 'use', 'structured probabilistic models')
('designing undirected models', 'use', 'structured probabilistic models')

('variables', 'part of', 'Gibbs distribution')
('continuous', 'part of', 'Gibbs distribution')"
16.2,6,"('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'scalar variable', 'clique potential', 'probability distribution', 'parameter', 'Gaussian distribution', 'directed modeling', 'undirected modeling', 'φ functions', 'domain', 'vector-valued random variable', 'bias', 'elementary basis vectors', 'softmax', 'energy-based model')","('probability distribution', 'scalar variable', 'clique potential')
('Gaussian distribution', 'scalar variable', 'clique potential')
('directed modeling', 'scalar variable', 'clique potential')
('undirected modeling', 'scalar variable', 'clique potential')
('φ functions', 'scalar variable', 'clique potential')
('domain', 'scalar variable', 'clique potential')
('vector-valued random variable', 'scalar variable', 'clique potential')
('bias', 'scalar variable', 'clique potential')
('elementary basis vectors', 'scalar variable', 'clique potential')
('softmax', 'scalar variable', 'clique potential')
('energy-based model', 'scalar variable', 'clique potential')

('probability distribution', 'clique potential', 'parameter')
('Gaussian distribution', 'clique potential', 'parameter')
('directed modeling', 'clique potential', 'parameter')
('undirected modeling', 'clique potential', 'parameter')
('φ functions', 'clique potential', 'parameter')
('domain', 'clique potential', 'parameter')
('vector-valued random variable', 'clique potential', 'parameter')
('bias', 'clique potential', 'parameter')
('elementary basis vectors', 'clique potential', 'parameter')
('softmax', 'clique potential', 'parameter')
('energy-based model', 'clique potential', 'parameter')"
16.2,7,"('structured probabilistic models for deep learning', 'Figure 16.4', 'Z1', 'φa,b', 'φb,c', 'φa,d', 'φb,e', 'φe,f', 'energy function', 'probability', 'state x', 'learning', 'clique potentials', 'constrained optimization', 'minimal probability value', 'unconstrained optimization', 'Boltzmann distribution', 'Boltzmann machines', 'Fahlman et al., 1983', 'Ackley et al., 1985', 'Hinton et al., 1984', 'Hinton and Sejnowski, 1986', 'mean-covariance restricted Boltzmann machine', 'Markov random fields', 'log-linear models', 'undirected graph', 'unnormalized probability function', 'Markov network', 'exponentiation', 'Markov network', 'figure 16.5')","('structured probabilistic models for deep learning', 'instance of', 'Figure 16.4'),
('Figure 16.4', 'φa,b', 'Z1'),
('Figure 16.4', 'φb,c', 'Z1'),
('Figure 16.4', 'φa,d', 'Z1'),
('Figure 16.4', 'φb,e', 'Z1'),
('Z1', 'φe,f', 'energy function'),
('energy function', 'probability', 'state x'),
('energy function', 'learning', 'clique potentials'),
('energy function', 'constrained optimization', 'minimal probability value'),
('constrained optimization', 'unconstrained optimization', 'minimal probability value'),
('minimal probability value', 'Boltzmann distribution', 'Boltzmann machines'),
('Boltzmann machines', 'Fahlman et al., 1983', 'Ackley et al., 1985'),
('Boltzmann machines', 'Hinton et al., 1984', 'Hinton and Sejnowski, 1986'),
('Boltzmann machines', 'mean-covariance restricted Boltzmann machine', 'Ackley et al., 1985'),
('Boltzmann machines', 'Markov random fields', 'Ackley et al., 1985'),
('Boltzmann machines', 'log-linear models', 'Hinton and Sejnowski, 1986'),
('Boltzmann machines', 'undirected graph', 'Hinton and Sejnowski, 1986'),
('Boltzmann distribution', 'unnormalized probability function', 'Markov network'),
('Markov network', 'exponentiation', 'Markov network'),
('Markov network', 'figure 16.5', 'Markov network')"
16.2,8,"('structured probabilistic models for deep learning', 'Figure 16.5', 'φ functions', 'energy-based model', 'undirected graph structure', 'product of experts', 'probability distribution', 'energy function', 'soft constraint', 'low-dimensional projection', 'random variables', 'high-dimensional constraint', 'learning algorithm', 'machine learning', 'physics literature', 'statistical physicists', 'terminology', 'partition function', 'negative energy', 'harmony', 'probabilistic models', 'latent variables')","('structured probabilistic models for deep learning', 'Figure 16.5', 'φ functions', 'energy-based model', 'undirected graph structure', 'product of experts', 'probability distribution', 'energy function', 'soft constraint', 'low-dimensional projection', 'random variables', 'high-dimensional constraint', 'learning algorithm', 'machine learning', 'physics literature', 'statistical physicists', 'terminology', 'partition function', 'negative energy', 'harmony', 'probabilistic models', 'latent variables')"
16.2,9,"('structured probabilistic models for deep learning', 'Figure 16.6', 'active', 'observed', 'free energy', 'graphical model', 'variables', 'indirect interactions', 'conditional independence', 'undirected models', 'separation', 'graph structure', 'path', 'unobserved variables', 'observed variables', 'inactive', 'directed models', 'd-separation')","('structured probabilistic models for deep learning', 'Figure 16.6', 'active', 'observed', 'free energy', 'graphical model', 'variables', 'indirect interactions', 'conditional independence', 'undirected models', 'separation', 'graph structure', 'path', 'unobserved variables', 'observed variables', 'inactive', 'directed models', 'd-separation')"
16.2,10,"('structured probabilistic models for deep learning', 'Figure 16.7', 'undirected graph', 'observed', 'separation properties', 'active paths', 'directed nets', 'active paths in a directed model', 'conditional independences', 'graphical notation')","('structured probabilistic models for deep learning', 'Figure 16.7', 'undirected graph', 'observed', 'separation properties', 'active paths', 'directed nets', 'active paths in a directed model', 'conditional independences', 'graphical notation')"
16.2,11,"('structured probabilistic models for deep learning', 'Figure 16.8', 'active paths', 'random variables', 'relay race example', 'common cause', 'V-structure', 'explaining away effect', 'dependent', 'descendant')","('structured probabilistic models for deep learning', 'Figure 16.8', 'active paths', 'random variables', 'relay race example', 'common cause', 'V-structure', 'explaining away effect', 'dependent', 'descendant')"
16.2,12,"('structured probabilistic models for deep learning', 'Figure 16.9', 'd-separation properties', 'd-separated', 'empty set', 'observed variables')","('structured probabilistic models for deep learning', 'Figure 16.9', 'd-separation properties', 'd-separated', 'empty set', 'observed variables')"
16.2,13,"('probabilistic models', 'deep learning', 'RBMs', 'sparse coding', 'undirected graph', 'directed graph', 'machine learning', 'probability distribution', 'independence', 'complete graph', 'graphical model')","('probabilistic models', 'part of', 'deep learning')
('RBMs', 'part of', 'deep learning')
('sparse coding', 'part of', 'deep learning')
('undirected graph', 'subclass of', 'graphical model')
('directed graph', 'subclass of', 'graphical model')
('machine learning', 'part of', 'deep learning')
('probability distribution', 'subclass of', 'probabilistic models')
('independence', 'part of', 'probability distribution')
('complete graph', 'subclass of', 'graphical model')
('graphical model', 'part of', 'probabilistic models')"
16.2,14,"('structured probabilistic models', 'deep learning', 'complete graphs', 'undirected graph', 'directed graph', 'ordering', 'arc', 'random variables', 'directed models', 'undirected models', 'independence', 'immorality', 'graph', 'moralized graph', 'conditional independences', 'loop', 'chord')","('structured probabilistic models', 'part of', 'deep learning')
('complete graphs', 'subclass of', 'undirected graph')
('undirected graph', 'part of', 'structured probabilistic models')
('directed graph', 'part of', 'structured probabilistic models')
('ordering', 'part of', 'directed graph')
('arc', 'part of', 'directed graph')
('random variables', 'part of', 'structured probabilistic models')
('directed models', 'part of', 'structured probabilistic models')
('undirected models', 'part of', 'structured probabilistic models')
('independence', 'part of', 'structured probabilistic models')
('immorality', 'part of', 'directed graph')
('graph', 'part of', 'structured probabilistic models')
('moralized graph', 'part of', 'directed graph')
('conditional independences', 'part of', 'structured probabilistic models')
('loop', 'part of', 'directed graph')
('chord', 'part of', 'undirected graph')"
16.2,15,"('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'Figure', 'undirected model', 'directed edges', 'undirected edges', 'independences', 'conditional independences', 'moralized graphs', 'chain', 'moralized graph', 'undirected model', 'impendence', 'hidden units', 'quadratic number')","('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'Figure', 'undirected model')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'directed edges')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'undirected edges')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'independences')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'conditional independences')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'moralized graphs')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'chain')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'moralized graph')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'undirected model')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'impendence')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'hidden units')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'quadratic number')"
16.2,16,"('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'Figure', 'undirected model', 'directed model', 'loop', 'chords', 'independences', 'triangulate the graph', 'edge', 'assign a direction', 'ordering', 'chordal graph', 'triangular loops', 'directed probabilistic model', 'Factor Graphs', 'undirected models', 'clique', 'factor', 'scope')","('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'Figure', 'undirected model')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'directed model')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'loop')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'chords')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'independences')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'triangulate the graph')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'edge')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'assign a direction')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'ordering')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'chordal graph')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'triangular loops')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'directed probabilistic model')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'Factor Graphs')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'undirected models')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'clique')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'factor')
('STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING', 'scope')"
16.3,0,"('FACTORS', 'Phi function', 'Factor graphs', 'scope', 'bipartite undirected graph', 'random variables', 'unnormalized probability distribution', 'undirected edges', 'interpretation', 'clique', 'represent', 'representation', 'inference', 'learning', 'asymptotically cheaper', 'Sampling from Graphical Models', 'ancestral sampling', 'joint distribution', 'topological ordering', 'parent')","('FACTORS', 'Phi function', 'Factor graphs')
('FACTORS', 'scope')
('FACTORS', 'bipartite undirected graph')
('FACTORS', 'random variables')
('FACTORS', 'unnormalized probability distribution')
('FACTORS', 'undirected edges')
('FACTORS', 'interpretation')
('FACTORS', 'clique')
('FACTORS', 'represent')
('FACTORS', 'representation')
('FACTORS', 'inference')
('FACTORS', 'learning')
('FACTORS', 'asymptotically cheaper')
('FACTORS', 'Sampling from Graphical Models')
('FACTORS', 'ancestral sampling')
('FACTORS', 'joint distribution')
('FACTORS', 'topological ordering')
('FACTORS', 'parent')"
16.3,1,"('structured probabilistic models for deep learning', 'deep learning', 'probabilistic models', 'sample', 'x', 'P', 'G', 'conditional distribution', 'topological sorting', 'equation 16.1', 'ancestral sampling', 'directed graphical models', 'conditional sampling operation', 'subset of variables', 'posterior distributions', 'undirected models', 'inference problems', 'marginal distribution', 'root nodes', 'Gibbs sampling', 'graphical model', 'random variables')","('structured probabilistic models for deep learning', 'instance of', 'deep learning')
('structured probabilistic models for deep learning', 'facet of', 'probabilistic models')
('sample', 'instance of', 'x')
('sample', 'subset of', 'probabilistic models')
('P', 'facet of', 'probabilistic models')
('G', 'facet of', 'probabilistic models')
('conditional distribution', 'instance of', 'probabilistic models')
('topological sorting', 'instance of', 'probabilistic models')
('topological sorting', 'use', 'equation 16.1')
('ancestral sampling', 'instance of', 'probabilistic models')
('directed graphical models', 'instance of', 'probabilistic models')
('conditional sampling operation', 'instance of', 'probabilistic models')
('subset of variables', 'instance of', 'probabilistic models')
('posterior distributions', 'instance of', 'probabilistic models')
('undirected models', 'instance of', 'probabilistic models')
('inference problems', 'instance of', 'probabilistic models')
('marginal distribution', 'instance of', 'probabilistic models')
('root nodes', 'instance of', 'graphical model')
('Gibbs sampling', 'instance of', 'probabilistic models')
('Gibbs sampling', 'use', 'graphical model')
('graphical model', 'instance of', 'probabilistic models')
('random variables', 'instance of', 'probabilistic models')"
16.5,0,"('structured probabilistic models for deep learning', 'probability distributions', 'learning', 'inference', 'sampling', 'directed models', 'undirected models', 'interactions', 'graphical models', 'representation of knowledge', 'learning algorithms', 'inference algorithms', 'dependencies', 'generative model', 'visible variables', 'latent variables')","('structured probabilistic models for deep learning', 'facet of', 'probability distributions')
('probability distributions', 'use', 'learning')
('probability distributions', 'use', 'inference')
('probability distributions', 'use', 'sampling')
('directed models', 'subclass of', 'structured probabilistic models for deep learning')
('undirected models', 'subclass of', 'structured probabilistic models for deep learning')
('interactions', 'instance of', 'graphical models')
('interactions', 'facet of', 'structured probabilistic models for deep learning')
('graphical models', 'subclass of', 'structured probabilistic models for deep learning')
('representation of knowledge', 'instance of', 'structured probabilistic models for deep learning')
('learning algorithms', 'instance of', 'structured probabilistic models for deep learning')
('inference algorithms', 'instance of', 'structured probabilistic models for deep learning')
('dependencies', 'facet of', 'structured probabilistic models for deep learning')
('generative model', 'instance of', 'structured probabilistic models for deep learning')
('visible variables', 'instance of', 'structured probabilistic models for deep learning')
('latent variables', 'instance of', 'structured probabilistic models for deep learning')"
16.5,1,"('structured probabilistic models for deep learning', 'Bayesian network', 'Markov network', 'higher order interactions', 'computational sense', 'statistical sense', 'structure learning', 'greedy search', 'model complexity', 'latent variables', 'parameter learning techniques', 'marginal p(v)', 'mixture of Gaussians model', 'classification', 'sparse coding', 'feature learning')","('structured probabilistic models for deep learning', 'subclass of', 'Bayesian network')
('structured probabilistic models for deep learning', 'subclass of', 'Markov network')
('higher order interactions', 'instance of', 'structured probabilistic models for deep learning')
('computational sense', 'instance of', 'structured probabilistic models for deep learning')
('statistical sense', 'instance of', 'structured probabilistic models for deep learning')
('structure learning', 'instance of', 'structured probabilistic models for deep learning')
('structure learning', 'use', 'greedy search')
('model complexity', 'instance of', 'structured probabilistic models for deep learning')
('latent variables', 'subset of', 'structured probabilistic models for deep learning')
('parameter learning techniques', 'instance of', 'structured probabilistic models for deep learning')
('marginal p(v)', 'instance of', 'structured probabilistic models for deep learning')
('mixture of Gaussians model', 'instance of', 'structured probabilistic models for deep learning')
('classification', 'instance of', 'structured probabilistic models for deep learning')
('sparse coding', 'instance of', 'structured probabilistic models for deep learning')
('feature learning', 'instance of', 'structured probabilistic models for deep learning')"
16.6,0,"('probabilistic model', 'variables', 'medical tests', 'latent variable model', 'maximum likelihood', 'learning rule', 'inference problems', 'graphical model', 'complexity class', 'intractable', 'structured graphical model', 'marginal probability', 'general graphical model', 'approximate inference', 'variational inference')","('probabilistic model', 'instance of', 'variables')
('variables', 'subclass of', 'probabilistic model')
('variables', 'subject of', 'medical tests')
('latent variable model', 'subclass of', 'probabilistic model')
('maximum likelihood', 'instance of', 'learning rule')
('learning rule', 'subset of', 'probabilistic model')
('inference problems', 'instance of', 'probabilistic model')
('graphical model', 'subclass of', 'probabilistic model')
('complexity class', 'instance of', 'probabilistic model')
('intractable', 'facet of', 'probabilistic model')
('structured graphical model', 'instance of', 'probabilistic model')
('marginal probability', 'instance of', 'probabilistic model')
('general graphical model', 'instance of', 'probabilistic model')
('approximate inference', 'instance of', 'probabilistic model')
('variational inference', 'instance of', 'probabilistic model')"
16.7,0,"('deep learning', 'machine learning', 'structured probabilistic models', 'graphical models', 'latent variables', 'conditional distributions', 'distributed representations')","('deep learning', 'instance of', 'machine learning')
('machine learning', 'instance of', 'structured probabilistic models')
('structured probabilistic models', 'instance of', 'graphical models')
('graphical models', 'instance of', 'latent variables')
('latent variables', 'instance of', 'conditional distributions')
('conditional distributions', 'instance of', 'distributed representations')"
16.7,1,"('deep learning', 'graphical models', 'latent variables', 'distributed representations', 'inference algorithm', 'Gibbs sampling', 'variational inference algorithms', 'numerical code', 'matrix product operations', 'block diagonal matrix products', 'convolutions', 'unknown quantities')","('deep learning', 'subclass of', 'graphical models')
('graphical models', 'instance of', 'latent variables')
('latent variables', 'instance of', 'distributed representations')
('inference algorithm', 'subclass of', 'latent variables')
('Gibbs sampling', 'instance of', 'inference algorithm')
('variational inference algorithms', 'subclass of', 'inference algorithm')
('numerical code', 'subclass of', 'distributed representations')
('matrix product operations', 'subclass of', 'distributed representations')
('block diagonal matrix products', 'instance of', 'matrix product operations')
('convolutions', 'subclass of', 'distributed representations')
('unknown quantities', 'instance of', 'distributed representations')"
16.7,2,"('deep learning', 'graphical models', 'restricted Boltzmann machine', 'latent variables', 'representation learning', 'energy-based model', 'Gibbs sampling', 'learnable parameters', 'matrix W', 'visible units', 'hidden units')","('deep learning', 'subclass of', 'graphical models')
('restricted Boltzmann machine', 'subclass of', 'graphical models')
('restricted Boltzmann machine', 'instance of', 'latent variables')
('representation learning', 'subclass of', 'latent variables')
('energy-based model', 'subclass of', 'latent variables')
('Gibbs sampling', 'instance of', 'energy-based model')
('learnable parameters', 'subclass of', 'energy-based model')
('matrix W', 'instance of', 'learnable parameters')
('visible units', 'instance of', 'learnable parameters')
('hidden units', 'instance of', 'learnable parameters')"
16.7,3,"('deep learning', 'graphical models', 'restricted Boltzmann machine', 'Markov network', 'conditional probabilities', 'Gibbs sampling', 'derivatives', 'training', 'representation learning', 'latent variables')","('deep learning', 'subclass of', 'graphical models')
('restricted Boltzmann machine', 'instance of', 'graphical models')
('restricted Boltzmann machine', 'subclass of', 'Markov network')
('Markov network', 'instance of', 'conditional probabilities')
('Gibbs sampling', 'subclass of', 'conditional probabilities')
('derivatives', 'instance of', 'training')
('training', 'instance of', 'representation learning')
('representation learning', 'subclass of', 'latent variables')"
16.7,4,"('deep learning', 'structured probabilistic models', 'RBM', 'samples', 'weights', 'Gibbs sampling', 'MNIST dataset', 'factorial prior', 'factorial posterior', 'sparse coding', 'feature extraction')","('deep learning', 'subclass of', 'structured probabilistic models')
('RBM', 'instance of', 'structured probabilistic models')
('RBM', 'subclass of', 'samples')
('weights', 'instance of', 'samples')
('Gibbs sampling', 'subclass of', 'RBM')
('MNIST dataset', 'instance of', 'samples')
('factorial prior', 'instance of', 'structured probabilistic models')
('factorial posterior', 'instance of', 'structured probabilistic models')
('sparse coding', 'instance of', 'factorial prior')
('feature extraction', 'instance of', 'factorial prior')"
17.1,0,"('Monte Carlo Methods', 'Monte Carlo algorithms', 'Monte Carlo algorithm', 'Monte Carlo approximations', 'Monte Carlo estimate', 'Sampling')","('Monte Carlo Methods', 'subclass of', 'Monte Carlo algorithms')
('Monte Carlo algorithms', 'instance of', 'Monte Carlo algorithm')
('Monte Carlo approximations', 'based on', 'Monte Carlo algorithm')
('Monte Carlo estimate', 'based on', 'Monte Carlo algorithm')
('Sampling', 'use', 'Monte Carlo algorithm')"
17.1,1,"('Monte Carlo Methods', 'Monte Carlo sampling', 'sum', 'integral', 'expectation', 'probability distribution', 'probability density', 'empirical average', 'estimator', 'law of large numbers')","('Monte Carlo Methods', 'use', 'Monte Carlo sampling')
('Monte Carlo sampling', 'instance of', 'sum')
('sum', 'instance of', 'integral')
('integral', 'instance of', 'expectation')
('expectation', 'based on', 'probability distribution')
('probability distribution', 'based on', 'probability density')
('empirical average', 'instance of', 'estimator')
('estimator', 'based on', 'law of large numbers')"
17.2,0,"('Monte Carlo Methods', 'variance', 'individual terms', 'sˆ', 'nincreases', 'f(x(i))', 'Var[f(x(i))]', 'Var[sˆ ]', 'n', 'Var[f(x)]', '17.6', '17.7', 'Monte Carlo average', 'expected error', 'Monte Carlo approximation', 'empirical average', 'empirical variance', 'variance', 'samples n', 'estimator of Var[sˆ ]', 'central limit theorem', 'normal distribution', 'confidence intervals', 'estimate sˆ', 'cumulative distribution', 'normal density', 'base distribution p(x)', 'importance sampling', 'section 17.2', 'sequence of estimators', 'converge towards the distribution of interest', 'Monte Carlo Markov chains', 'decomposition of the integrand', 'Monte Carlo method', 'equation 17.2', 'probability p(x)', 'quantity f(x)', 'expected value', 'probability distribution', 'unique decomposition', 'q(x)', 'pf', 'sample from q', 'average', 'expectation', 'problem is specified')","('Monte Carlo Methods', 'instance of', 'variance')
('individual terms', 'instance of', 'variance')
('sˆ', 'instance of', 'variance')
('nincreases', 'instance of', 'variance')
('f(x(i))', 'instance of', 'variance')
('Var[f(x(i))]','instance of','variance')
('Var[sˆ ]', 'instance of', 'variance')
('n', 'instance of', 'variance')
('Var[f(x)]', 'instance of', 'variance')
('17.6', 'instance of', 'variance')
('17.7', 'instance of', 'variance')
('Monte Carlo average', 'instance of', 'variance')
('expected error', 'instance of', 'variance')
('Monte Carlo approximation', 'instance of', 'variance')
('empirical average', 'instance of', 'variance')
('empirical variance', 'instance of', 'variance')
('variance', 'instance of', 'variance')
('samples n', 'instance of', 'variance')
('estimator of Var[sˆ ]', 'instance of', 'variance')
('central limit theorem', 'instance of', 'variance')
('normal distribution', 'instance of', 'variance')
('confidence intervals', 'instance of', 'variance')
('estimate sˆ', 'instance of', 'variance')
('cumulative distribution', 'instance of', 'variance')
('normal density', 'instance of', 'variance')
('base distribution p(x)', 'instance of', 'variance')
('importance sampling', 'instance of', 'variance')
('section 17.2', 'instance of', 'variance')
('sequence of estimators', 'instance of', 'variance')
('converge towards the distribution of interest', 'instance of', 'variance')
('Monte Carlo Markov chains', 'instance of', 'variance')
('decomposition of the integrand', 'instance of', 'variance')
('Monte Carlo method', 'instance of', 'variance')
('equation 17.2', 'instance of', 'variance')
('probability p(x)', 'instance of', 'variance')
('quantity f(x)', 'instance of', 'variance')
('expected value', 'instance of', 'variance')
('probability distribution', 'instance of', 'variance')
('unique decomposition', 'instance of', 'variance')
('q(x)', 'instance of', 'variance')
('pf', 'instance of', 'variance')
('sample from q', 'instance of', 'variance')
('average', 'instance of', 'variance')
('expectation', 'instance of', 'variance')
('problem is specified', 'instance of', 'variance')"
17.2,1,"('Monte Carlo Methods', 'expectation', 'decomposition', 'optimal choice', 'number of samples', 'level of accuracy', 'optimal importance sampling', 'Monte Carlo estimator', 'importance sampling estimator', 'expected value', 'variance', 'choice of q', 'normalization constant', 'weight', 'integrand', 'single sample', 'computation', 'sampling distribution')","('Monte Carlo Methods', 'expectation', 'decomposition')
('Monte Carlo Methods', 'optimal choice', 'number of samples')
('Monte Carlo Methods', 'level of accuracy', 'optimal importance sampling')
('Monte Carlo Methods', 'Monte Carlo estimator', 'importance sampling estimator')
('Monte Carlo Methods', 'expected value', 'variance')
('Monte Carlo Methods', 'choice of q', 'normalization constant')
('Monte Carlo Methods', 'weight', 'integrand')
('Monte Carlo Methods', 'single sample', 'computation')
('Monte Carlo Methods', 'sampling distribution')"
17.2,2,"('biased importance sampling', 'discrete variables', 'unnormalized forms', 'samples from q', 'asymptotically unbiased', 'efficiency of Monte Carlo estimation', 'high-dimensional', 'importance sampling distribution', 'useless samples', 'ratio', 'very large or very small numbers', 'dynamic range', 'joint probabilities', 'machine learning algorithms', 'deep learning algorithms', 'neural language models', 'neural nets', 'partition function', 'normalization constant', 'probability')","('biased importance sampling', 'importance sampling distribution')
('discrete variables', 'joint probabilities')
('unnormalized forms', 'samples from q')
('asymptotically unbiased', 'efficiency of Monte Carlo estimation')
('high-dimensional', 'importance sampling distribution')
('useless samples', 'ratio')
('very large or very small numbers', 'dynamic range')
('machine learning algorithms', 'deep learning algorithms')
('neural language models', 'neural nets')
('partition function', 'normalization constant')
('partition function', 'probability')"
17.3,0,"('Markov Chain Monte Carlo Methods', 'Monte Carlo technique', 'distribution', 'undirected model', 'Markov chain', 'Monte Carlo estimates', 'machine learning', 'energy-based model', 'probability distributions', 'EBM formulation', 'non-zero probability', 'chicken-and-egg problem', 'Directed models', 'ancestral sampling', 'topological order')","('Markov Chain Monte Carlo Methods', 'Monte Carlo technique', 'distribution')
('Markov Chain Monte Carlo Methods', 'undirected model', 'Markov chain')
('Markov Chain Monte Carlo Methods', 'Monte Carlo estimates', 'machine learning')
('Markov Chain Monte Carlo Methods', 'energy-based model', 'probability distributions')
('Markov Chain Monte Carlo Methods', 'EBM formulation', 'non-zero probability')
('Directed models', 'ancestral sampling', 'topological order')"
17.3,1,"('Markov chain', 'state', 'transition distribution', 'random update', 'fair sample', 'reparametrize', 'random variable', 'countably many states', 'Markov chain steps', 'probability distribution', 'vector v', 'update', 'probability of a single state', 'transition operator', 'matrix A', 'distribution over all the different Markov chains')","('Markov chain', 'state', 'transition distribution')
('Markov chain', 'random update', 'fair sample')
('Markov chain', 'reparametrize', 'random variable')
('Markov chain', 'countably many states', 'Markov chain steps')
('Markov chain', 'probability distribution', 'vector v')
('Markov chain', 'update', 'probability of a single state')
('Markov chain', 'transition operator', 'matrix A')
('Markov chain', 'distribution over all the different Markov chains')"
17.3,2,"('matrix A', 'stochastic matrices', 'Perron-Frobenius theorem', 'eigenvalue', 'stationary distribution', 'equilibrium distribution', 'eigenvector equation', 'transition sampling procedure', 'Markov Chains with countable states', 'Harris chain', 'Markov chain with transition operator', 'fixed point', 'expectation')","('matrix A', 'stochastic matrices')
('matrix A', 'Perron-Frobenius theorem', 'eigenvalue')
('matrix A', 'stationary distribution')
('matrix A', 'equilibrium distribution')
('matrix A', 'eigenvector equation')
('Markov Chains with countable states', 'transition sampling procedure')
('Markov Chains with countable states', 'Harris chain')
('Markov chain with transition operator', 'fixed point')
('Markov chain with transition operator', 'expectation')"
17.3,3,"('Monte Carlo methods', 'Markov chain methods', 'equilibrium distribution', 'burning in', 'MCMC sample', 'Markov chains', 'deep learning practitioners', 'mixing time', 'matrix A', 'eigenvalues of A')","('Monte Carlo methods', 'subclass of', 'Markov chain methods')
('Markov chains', 'subclass of', 'Markov chain methods')
('MCMC sample', 'subclass of', 'Markov chain methods')
('equilibrium distribution', 'based on', 'Markov chain methods')
('burning in', 'part of', 'Markov chain methods')
('mixing time', 'facet of', 'Markov chain methods')
('matrix A', 'subject of', 'eigenvalues of A')"
17.5,0,"('Monte Carlo methods', 'Gibbs sampling', 'energy-based model', 'Markov chain', 'p(x)', 'T(x|x)', 'undirected graph', 'RBMs', 'visible units', 'hidden units', 'block Gibbs sampling', 'Metropolis-Hastings algorithm', 'mixing between separated modes', 'MCMC methods')","('Monte Carlo methods', 'subclass of', 'MCMC methods')
('Gibbs sampling', 'subclass of', 'Monte Carlo methods')
('energy-based model', 'based on', 'Monte Carlo methods')
('Markov chain', 'use', 'Monte Carlo methods')
('p(x)', 'based on', 'energy-based model')
('T(x|x)', 'use', 'Markov chain')
('undirected graph', 'subject of', 'energy-based model')
('RBMs', 'subclass of', 'energy-based model')
('visible units', 'part of', 'RBMs')
('hidden units', 'part of', 'RBMs')
('block Gibbs sampling', 'based on', 'Gibbs sampling')
('Metropolis-Hastings algorithm', 'use', 'Monte Carlo methods')
('mixing between separated modes', 'use', 'Metropolis-Hastings algorithm')"
17.5,1,"('Monte Carlo methods', 'MCMC samples', 'slow mixing', 'failure to mix', 'noisy gradient descent', 'hill climbing', 'Markov chain', 'energy function', 'probability', 'modes', 'random walk', 'escape route', 'energy barrier', 'probability distribution', 'Gibbs sampling algorithm', 'energy-based model', 'binary variables', 'sigmoid', 'conditional distribution')","('Monte Carlo methods', 'subclass of', 'MCMC samples')
('slow mixing', 'facet of', 'MCMC samples')
('failure to mix', 'facet of', 'MCMC samples')
('noisy gradient descent', 'based on', 'hill climbing')
('hill climbing', 'use', 'energy function')
('Markov chain', 'use', 'Monte Carlo methods')
('energy function', 'based on', 'probability')
('probability', 'subject of', 'energy function')
('modes', 'facet of', 'energy function')
('random walk', 'use', 'Markov chain')
('escape route', 'use', 'random walk')
('energy barrier', 'part of', 'energy function')
('probability distribution', 'based on', 'energy-based model')
('Gibbs sampling algorithm', 'subclass of', 'Monte Carlo methods')
('energy-based model', 'subject of', 'Gibbs sampling algorithm')
('binary variables', 'part of', 'energy-based model')
('sigmoid', 'based on', 'conditional distribution')"
17.5,2,"('Monte Carlo Methods', 'Gibbs sampling', 'Markov chain', 'multivariate normal distribution', 'independent variables', 'correlated variables', 'mixture of Gaussians', 'modes', 'axis-aligned', 'variables', 'transition', 'latent variables', 'joint distribution')","('Monte Carlo Methods', 'instance of', 'Gibbs sampling')
('Gibbs sampling', 'use', 'Markov chain')
('Markov chain', 'use', 'multivariate normal distribution')
('multivariate normal distribution', 'facet of', 'independent variables')
('correlated variables', 'part of', 'mixture of Gaussians')
('mixture of Gaussians', 'facet of', 'modes')
('modes', 'facet of', 'axis-aligned')
('variables', 'subclass of', 'axis-aligned')
('transition', 'instance of', 'latent variables')
('latent variables', 'use', 'joint distribution')"
17.5,3,"('Monte Carlo Methods', 'Gibbs sampling', 'deep Boltzmann machine', 'MNIST dataset', 'deep graphical model', 'semantic features', 'raw visual features', 'generative adversarial network', 'ancestral sampling', 'high entropy', 'high mutual information', 'generative models', 'Boltzmann machines', 'Markov chain', 'manifold structure', 'classification problems', 'poor mixing')","('Monte Carlo Methods', 'instance of', 'Gibbs sampling')
('deep Boltzmann machine', 'subclass of', 'generative models')
('MNIST dataset', 'use', 'deep graphical model')
('deep graphical model', 'instance of', 'semantic features')
('semantic features', 'use', 'raw visual features')
('generative adversarial network', 'use', 'ancestral sampling')
('ancestral sampling', 'part of', 'high entropy')
('high entropy', 'facet of', 'high mutual information')
('generative models', 'facet of', 'Boltzmann machines')
('Boltzmann machines', 'use', 'Markov chain')
('Markov chain', 'facet of', 'manifold structure')
('manifold structure', 'facet of', 'classification problems')
('classification problems', 'facet of', 'poor mixing')"
17.5,4,"('Monte Carlo Methods', 'tempering', 'mix between modes', 'distribution', 'sharp peaks', 'probability', 'regions', 'low probability', 'mixing techniques', 'target distribution', 'energy-based models', 'parameter', 'sharply peaked', 'reciprocal of the temperature', 'deterministic', 'uniform', 'discrete x', 'model training', 'temperatures', 'Markov chains', 'higher-temperature distributions', 'unit temperature distribution', 'parallel tempering', 'states', 'transition operator', 'sampling', 'EBMs', 'critical temperatures')","('Monte Carlo Methods', 'tempering', 'mix between modes')
('distribution', 'sharp peaks', 'probability')
('regions', 'low probability', 'mixing techniques')
('target distribution', 'energy-based models', 'parameter')
('sharply peaked', 'reciprocal of the temperature', 'deterministic')
('uniform', 'discrete x', 'model training')
('temperatures', 'Markov chains', 'higher-temperature distributions')
('unit temperature distribution', 'parallel tempering', 'states')
('transition operator', 'sampling', 'EBMs')
('critical temperatures')"
17.5,5,"('latent variable model', 'p(h,x)', 'sampling', 'deep representation', 'Markov chain', 'representation learning algorithms', 'autoencoders', 'RBMs', 'marginal distribution', 'uniform', 'unimodal', 'data distribution', 'reconstruction error', 'training examples', 'Bengio et al.', 'regularized autoencoders', 'stacks', 'top-level h-space', 'categories', 'Gibbs sampling', 'modes', 'deep generative models', 'Monte Carlo techniques', 'undirected models', 'partition function')","('latent variable model', 'p(h,x)', 'sampling')
('deep representation', 'Markov chain', 'representation learning algorithms')
('autoencoders', 'RBMs', 'marginal distribution')
('uniform', 'unimodal', 'data distribution')
('reconstruction error', 'training examples', 'Bengio et al.')
('regularized autoencoders', 'stacks', 'top-level h-space')
('categories', 'Gibbs sampling', 'modes')
('deep generative models', 'Monte Carlo techniques')
('undirected models', 'partition function')"
17.5,6,"('partition function', 'undirected graphical models', 'unnormalized probability distribution', 'probability distribution', 'integral', 'sum', 'states', 'deep learning models', 'tractable normalizing constant')","('partition function', 'is a', 'undirected graphical models')
('unnormalized probability distribution', 'is a', 'probability distribution')
('integral', 'is a', 'sum')
('states', 'are', 'deep learning models')
('tractable normalizing constant', 'is a', 'partition function')"
18.1,0,"('partition function', 'log-likelihood', 'undirected models', 'maximum likelihood', 'parameters', 'gradient', 'positive phase', 'negative phase', 'latent variables', 'interactions', 'RBM', 'hidden units', 'visible units', 'difficulties')","('partition function', 'instance of', 'log-likelihood')
('undirected models', 'instance of', 'maximum likelihood')
('parameters', 'instance of', 'gradient')
('positive phase', 'instance of', 'negative phase')
('latent variables', 'instance of', 'interactions')
('RBM', 'instance of', 'hidden units')
('visible units', 'instance of', 'difficulties')"
18.2,0,"('Leibniz’s rule', 'differentiation', 'integral sign', 'measure theoretic terms', 'regularity conditions', 'Lebesgue-integrable function', 'gradient', 'Monte Carlo methods', 'likelihood', 'intractable partition functions', 'positive phase', 'negative phase', 'energy function', 'stochastic maximum likelihood', 'contrastive divergence', 'Markov chains', 'stochastic gradient descent')","('Leibniz’s rule', 'instance of', 'differentiation')
('integral sign', 'instance of', 'measure theoretic terms')
('regularity conditions', 'instance of', 'Lebesgue-integrable function')
('gradient', 'instance of', 'Monte Carlo methods')
('likelihood', 'instance of', 'intractable partition functions')
('positive phase', 'instance of', 'negative phase')
('energy function', 'instance of', 'stochastic maximum likelihood')
('contrastive divergence', 'instance of', 'Markov chains')
('stochastic gradient descent', 'instance of', 'Markov chains')"
18.2,1,"('MCMC algorithm', 'log-likelihood', 'intractable partition function', 'gradient ascent', 'Gibbs steps', 'training set', 'minibatch', 'samples', 'gibbs_update', 'negative phase', 'model distribution', 'approximations', 'computational cost', 'incorrect beliefs', 'hallucinations', 'fantasy particles')","('MCMC algorithm', 'instance of', 'log-likelihood')
('intractable partition function', 'instance of', 'gradient ascent')
('Gibbs steps', 'instance of', 'training set')
('minibatch', 'instance of', 'samples')
('gibbs_update', 'instance of', 'negative phase')
('model distribution', 'instance of', 'approximations')
('computational cost', 'instance of', 'incorrect beliefs')"
18.2,2,"('algorithm 18.1', 'Crick and Mitchison', 'neuroscientific experiments', 'machine learning models', 'section 19.5', 'MCMC algorithm')","('algorithm 18.1', 'instance of', 'Crick and Mitchison')
('neuroscientific experiments', 'part of', 'algorithm 18.1')
('neuroscientific experiments', 'instance of', 'Crick and Mitchison')
('machine learning models', 'based on', 'algorithm 18.1')
('machine learning models', 'based on', 'neuroscientific experiments')
('machine learning models', 'instance of', 'Crick and Mitchison')
('section 19.5', 'part of', 'algorithm 18.1')
('section 19.5', 'part of', 'neuroscientific experiments')
('section 19.5', 'part of', 'machine learning models')
('MCMC algorithm', 'based on', 'algorithm 18.1')
('MCMC algorithm', 'based on', 'neuroscientific experiments')
('MCMC algorithm', 'based on', 'machine learning models')
('MCMC algorithm', 'based on', 'section 19.5')
('MCMC algorithm', 'instance of', 'Crick and Mitchison')"
18.2,3,"('algorithm 18.2', 'CD (Contrastive Divergence)', 'gradient ascent', 'θ (theta)', 'RBMs (Restricted Boltzmann Machines)', 'gibbs_update')","('algorithm 18.2', 'instance of', 'CD (Contrastive Divergence)')
('gradient ascent', 'part of', 'algorithm 18.2')
('θ (theta)', 'part of', 'algorithm 18.2')
('RBMs (Restricted Boltzmann Machines)', 'based on', 'algorithm 18.2')
('gibbs_update', 'based on', 'algorithm 18.2')"
18.2,4,"('Carreira-Perpiñan and Hinton (2005)', 'RBMs (Restricted Boltzmann Machines)', 'fully visible Boltzmann machines', 'Bengio and Delalleau (2009)', 'MCMC methods', 'shallow models', 'RBMs (Restricted Boltzmann Machines)', 'DBNs (Deep Belief Networks)', 'DBMs (Deep Boltzmann Machines)')","('Carreira-Perpiñan and Hinton (2005)', 'instance of', 'RBMs (Restricted Boltzmann Machines)')
('fully visible Boltzmann machines', 'based on', 'Carreira-Perpiñan and Hinton (2005)')
('Bengio and Delalleau (2009)', 'based on', 'RBMs (Restricted Boltzmann Machines)')
('MCMC methods', 'based on', 'RBMs (Restricted Boltzmann Machines)')
('shallow models', 'based on', 'RBMs (Restricted Boltzmann Machines)')
('DBNs (Deep Belief Networks)', 'based on', 'RBMs (Restricted Boltzmann Machines)')
('DBMs (Deep Boltzmann Machines)', 'based on', 'DBNs (Deep Belief Networks)')"
18.2,5,"('stochastic maximum likelihood (SML)', 'Younes (1998)', 'persistent contrastive divergence (PCD)', 'Tieleman (2008)', 'algorithm 18.3', 'spurious modes', 'visible units', 'latent units')","('stochastic maximum likelihood (SML)', 'instance of', 'Younes (1998)')
('persistent contrastive divergence (PCD)', 'based on', 'Tieleman (2008)')
('algorithm 18.3', 'based on', 'persistent contrastive divergence (PCD)')
('spurious modes', 'part of', 'algorithm 18.3')
('visible units', 'part of', 'algorithm 18.3')
('latent units', 'part of', 'algorithm 18.3')"
18.2,6,"('Marlin et al. (2010)', 'test set log-likelihood', 'RBMs (Restricted Boltzmann Machines)', 'SVM classifier', 'MNIST', 'DBMs (Deep Boltzmann Machines)')","('Marlin et al. (2010)', 'based on', 'RBMs (Restricted Boltzmann Machines)')
('test set log-likelihood', 'based on', 'RBMs (Restricted Boltzmann Machines)')
('SVM classifier', 'based on', 'Marlin et al. (2010)')
('MNIST', 'part of', 'Marlin et al. (2010)')
('DBMs (Deep Boltzmann Machines)', 'based on', 'RBMs (Restricted Boltzmann Machines)')"
18.2,7,"('persistent negative chains', 'Berglund and Raiko', 'CD', 'SML', 'estimator based on exact sampling', 'MCMC', 'parallel tempering', 'Fast PCD or FPCD', 'parameters', 'θ', 'Markov chain', 'weight decay', 'logZ', 'log p˜')","('persistent negative chains', 'instance of', 'Berglund and Raiko')
('CD', 'instance of', 'SML')
('estimator based on exact sampling', 'instance of', 'MCMC')
('parallel tempering', 'instance of', 'Fast PCD or FPCD')
('parameters', 'instance of', 'θ')
('Markov chain', 'instance of', 'weight decay')
('logZ', 'instance of', 'log p˜')"
18.3,0,"('partition function', 'pseudolikelihood', 'Monte Carlo', 'undirected probabilistic model', 'conditional probabilities', 'marginalize out', 'log-likelihood', 'chain rule of probability', 'pseudolikelihood objective function', 'feature')","('partition function', 'instance of', 'pseudolikelihood')
('Monte Carlo', 'instance of', 'undirected probabilistic model')
('conditional probabilities', 'instance of', 'marginalize out')
('log-likelihood', 'instance of', 'chain rule of probability')
('pseudolikelihood objective function', 'instance of', 'feature')"
18.3,1,"('random variable', 'pseudolikelihood', 'maximum likelihood', 'generalized pseudolikelihood', 'density estimation', 'sampling', 'missing values', 'correlations', 'variational inference', 'deep Boltzmann machines', 'hidden variables')","('random variable', 'instance of', 'pseudolikelihood')
('maximum likelihood', 'instance of', 'generalized pseudolikelihood')
('density estimation', 'instance of', 'sampling')
('missing values', 'instance of', 'correlations')
('variational inference', 'instance of', 'deep Boltzmann machines')
('hidden variables', 'instance of', 'deep Boltzmann machines')"
18.4,0,"('pseudolikelihood', 'deep learning', 'single layer models', 'approximate inference methods', 'gradient step', 'SML', 'negative phase', 'asymptotic efficiency', 'score matching', 'log density', 'score', 'expected squared difference', 'data distribution', 'true distribution', 'training data')","('pseudolikelihood', 'instance of', 'deep learning')
('single layer models', 'instance of', 'deep learning')
('approximate inference methods', 'instance of', 'deep learning')
('gradient step', 'instance of', 'SML')
('negative phase', 'instance of', 'SML')
('asymptotic efficiency', 'instance of', 'SML')
('score matching', 'instance of', 'SML')
('log density', 'instance of', 'score')
('expected squared difference', 'instance of', 'score')
('data distribution', 'instance of', 'true distribution')
('training data', 'instance of', 'true distribution')"
18.4,1,"('score matching', 'minimizing the expected value', 'dimensionality', 'discrete data', 'latent variables', 'lower bound', 'interactions between hidden units', 'sparse coding models', 'deep Boltzmann machines', 'pretraining', 'contrastive divergence', 'Markov chain', 'Gibbs sampling', 'Ly', 'Marlin et al.', 'high dimensional discrete spaces', 'ratio matching', 'binary data')","('score matching', 'instance of', 'minimizing the expected value')
('dimensionality', 'instance of', 'discrete data')
('latent variables', 'instance of', 'interactions between hidden units')
('sparse coding models', 'instance of', 'deep Boltzmann machines')
('pretraining', 'instance of', 'contrastive divergence')
('Markov chain', 'instance of', 'Gibbs sampling')
('Ly', 'instance of', 'Marlin et al.')
('high dimensional discrete spaces', 'instance of', 'ratio matching')
('binary data', 'instance of', 'ratio matching')"
18.5,0,"('partition function', 'pseudolikelihood estimator', 'GSM', 'SML', 'Marlin et al. (2010)', 'ratio matching', 'p˜', 'Hamming distance', 'MCMC-based methods', 'Dauphin and Bengio (2013)', 'asymptotic efficiency', 'Denoising Score Matching', 'corruption process', 'Dirac distributions')","('partition function', 'based on', 'GSM')
('pseudolikelihood estimator', 'based on', 'GSM')
('GSM', 'subclass of', 'SML')
('ratio matching', 'based on', 'p˜')
('Hamming distance', 'part of', 'corruption process')
('MCMC-based methods', 'based on', 'corruption process')
('Denoising Score Matching', 'based on', 'corruption process')"
18.6,0,"('Kingma and LeCun (2010)', 'autoencoder training algorithms', 'Score matching and pseudolikelihood', 'Noise-contrastive estimation (NCE)', 'Gutmann and Hyvarinen (2010)')","('Kingma and LeCun (2010)', 'based on', 'autoencoder training algorithms'),
('Score matching and pseudolikelihood', 'part of', 'Kingma and LeCun (2010)'),
('Score matching and pseudolikelihood', 'based on', 'autoencoder training algorithms'),
('Noise-contrastive estimation (NCE)', 'based on', 'autoencoder training algorithms'),
('Noise-contrastive estimation (NCE)', 'based on', 'Gutmann and Hyvarinen (2010)')"
18.6,1,"('CONFRONTING THE PARTITION FUNCTION', 'learning problem', 'asymptotically consistent estimator', 'noise distribution', 'p (x)', 'model', 'binary class variable', 'joint model', 'p (y = 1)', 'p (x)', 'p (x y = 0)', 'switch variable', 'training data', 'standard maximum likelihood learning', 'supervised learning problem', 'fitting p to p', 'θ,c', 'x,y ∼p train joint', 'logistic regression model', 'difference in log probabilities', 'logp (x)', 'σ')","('CONFRONTING THE PARTITION FUNCTION', 'part of', 'learning problem')
('learning problem', 'instance of', 'asymptotically consistent estimator')
('asymptotically consistent estimator', 'instance of', 'noise distribution')
('noise distribution', 'instance of', 'p (x)')
('model', 'instance of', 'binary class variable')
('joint model', 'instance of', 'p (y = 1)')
('p (x)', 'instance of', 'p (x y = 0)')
('p (x y = 0)', 'instance of', 'switch variable')
('training data', 'instance of', 'standard maximum likelihood learning')
('standard maximum likelihood learning', 'instance of', 'supervised learning problem')
('supervised learning problem', 'instance of', 'fitting p to p')
('fitting p to p', 'instance of', 'θ,c')
('x,y ∼p train joint', 'instance of', 'logistic regression model')
('logistic regression model', 'instance of', 'difference in log probabilities')
('difference in log probabilities', 'instance of', 'logp (x)')
('logp (x)', 'instance of', 'σ')"
18.6,2,"('NCE', 'log p˜', 'model', 'evaluate noise p', 'sample from', 'random variables', 'conditional distribution', 'word', 'context', 'vocabulary', 'logistic regression classifier', 'learning slows down', 'images of faces', 'unstructured Gaussian noise', 'samples', 'score matching', 'pseudolikelihood', 'lower bound', 'self-contrastive estimation', 'expected gradient', 'maximum likelihood', 'reality', 'beliefs', 'baseline', 'the noise model', 'supervised task', 'classifying', 'energy function', 'classifier')","('NCE', 'instance of', 'log p˜')
('log p˜', 'instance of', 'model')
('model', 'instance of', 'evaluate noise p')
('evaluate noise p', 'instance of', 'sample from')
('sample from', 'instance of', 'random variables')
('random variables', 'instance of', 'conditional distribution')
('conditional distribution', 'instance of', 'word')
('word', 'instance of', 'context')
('context', 'instance of', 'vocabulary')
('logistic regression classifier', 'instance of', 'learning slows down')
('learning slows down', 'instance of', 'images of faces')
('images of faces', 'instance of', 'unstructured Gaussian noise')
('unstructured Gaussian noise', 'instance of', 'samples')
('samples', 'instance of', 'score matching')
('score matching', 'instance of', 'pseudolikelihood')
('pseudolikelihood', 'instance of', 'lower bound')
('lower bound', 'instance of', 'self-contrastive estimation')
('self-contrastive estimation', 'instance of', 'expected gradient')
('expected gradient', 'instance of', 'maximum likelihood')
('maximum likelihood', 'instance of', 'reality')
('reality', 'instance of', 'beliefs')
('beliefs', 'instance of', 'baseline')
('baseline', 'instance of', 'the noise model')
('the noise model', 'instance of', 'supervised task')
('supervised task', 'instance of', 'classifying')
('classifying', 'instance of', 'energy function')
('energy function', 'instance of', 'classifier')"
18.7,0,"('generative model', 'data', 'noise', 'generative adversarial networks', 'partition function', 'undirected graphical model', 'estimating the partition function', 'normalized likelihood', 'evaluating the model', 'monitoring training performance', 'comparing models', 'probability distribution', 'test dataset', 'test log-likelihood', 'better model', 'log probability', 'ratio of the two model’s partition functions')","('generative model', 'instance of', 'data')
('data', 'instance of', 'noise')
('generative adversarial networks', 'instance of', 'partition function')
('partition function', 'instance of', 'undirected graphical model')
('undirected graphical model', 'instance of', 'estimating the partition function')
('estimating the partition function', 'instance of', 'normalized likelihood')
('normalized likelihood', 'instance of', 'evaluating the model')
('evaluating the model', 'instance of', 'monitoring training performance')
('monitoring training performance', 'instance of', 'comparing models')
('comparing models', 'instance of', 'probability distribution')
('test dataset', 'instance of', 'test log-likelihood')
('test log-likelihood', 'instance of', 'better model')
('better model', 'instance of', 'log probability')
('log probability', 'instance of', 'ratio of the two model’s partition functions')"
18.7,1,"('partition function', 'model', 'importance sampling', 'probability', 'test data', 'ratio', 'Monte Carlo method', 'proposal distribution', 'sampling', 'estimator', 'integral', 'samples', 'unnormalized distribution')","('partition function', 'instance of', 'model')
('importance sampling', 'use', 'probability')
('test data', 'instance of', 'probability')
('ratio', 'subclass of', 'probability')
('Monte Carlo method', 'instance of', 'probability')
('proposal distribution', 'subclass of', 'sampling')
('estimator', 'instance of', 'sampling')
('integral', 'instance of', 'samples')
('samples', 'part of', 'unnormalized distribution')"
18.7,2,"('distribution', 'partition function', 'Minka', 'approximation', 'samples', 'variance', 'estimating', 'complex distributions', 'high-dimensional spaces', 'annealed importance sampling', 'bridge sampling', 'intermediate distributions', 'overlap', 'KL divergence', 'Jarzynski', 'Neal', 'multimodal distribution', 'trained RBM', 'known partition function', 'estimate', 'ratios', 'weights interpolating')","('distribution', 'instance of', 'partition function')
('Minka', 'instance of', 'approximation')
('samples', 'instance of', 'variance')
('estimating', 'use', 'complex distributions')
('spaces', 'instance of', 'high-dimensional spaces')
('annealed importance sampling', 'instance of', 'intermediate distributions')
('bridge sampling', 'instance of', 'overlap')
('KL divergence', 'instance of', 'Jarzynski')
('Neal', 'instance of', 'Jarzynski')
('multimodal distribution', 'instance of', 'known partition function')
('trained RBM', 'instance of', 'known partition function')
('estimate', 'instance of', 'ratios')
('weights interpolating', 'instance of', 'ratios')"
18.7,3,"('ratio', 'estimate', 'intermediate distributions', 'proposal distribution', 'geometric average', 'weighted', 'Markov chain transition functions', 'conditional probability', 'invariant', 'sampling strategy', 'Metropolis-Hastings', 'Gibbs', 'Monte Carlo method')","('ratio', 'instance of', 'estimate')
('intermediate distributions', 'instance of', 'proposal distribution')
('geometric average', 'instance of', 'weighted')
('Markov chain transition functions', 'instance of', 'sampling strategy')
('conditional probability', 'instance of', 'invariant')
('Metropolis-Hastings', 'instance of', 'sampling strategy')
('Gibbs', 'instance of', 'sampling strategy')
('Monte Carlo method', 'instance of', 'sampling strategy')"
18.7,4,"('importance weight', 'log probabilities', 'sampling procedure', 'valid importance sampling scheme', 'extended state space', 'product space', 'joint distribution', 'Bayes’ rule')","('importance weight', 'instance of', 'log probabilities')
('sampling procedure', 'instance of', 'valid importance sampling scheme')
('extended state space', 'subclass of', 'product space')
('joint distribution', 'subclass of', 'product space')
('Bayes’ rule', 'instance of', 'joint distribution')"
18.7,5,"('joint proposal distribution', 'importance weights', 'undirected probabilistic models', 'restricted Boltzmann machines', 'deep belief networks', 'variance', 'efficiency', 'Bridge sampling', 'Bennett')","('joint proposal distribution', 'instance of', 'importance weights')
('undirected probabilistic models', 'instance of', 'restricted Boltzmann machines')
('undirected probabilistic models', 'instance of', 'deep belief networks')
('variance', 'instance of', 'efficiency')
('Bridge sampling', 'instance of', 'Bennett')"
18.7,6,"('bridge sampling', 'partition function', 'bridge', 'distribution', 'importance weights', 'overlap of support', 'KL importance sampling', 'bridging distribution', 'ratio', 'iteratively', 'refine', 'coarse estimate', 'linked importance sampling', 'AIS', 'ad- vantages', 'intermediate distributions', 'Neal', 'power', 'standard method', 'undirected models', 'computationally intensive', 'training', 'alternative strategies', 'short-chain AIS', 'parallel tempering', 'Desjardins et al.')","（'bridge sampling', 'instance of', 'partition function'）
（'bridge', 'part of', 'distribution'）
（'importance weights', 'based on', 'overlap of support'）
（'overlap of support', 'based on', 'KL importance sampling'）
（'KL importance sampling', 'instance of', 'bridging distribution'）
（'bridging distribution', 'instance of', 'ratio'）
（'ratio', 'based on', 'iteratively'）
（'iteratively', 'based on', 'refine'）
（'refine', 'part of', 'coarse estimate'）
（'linked importance sampling', 'subclass of', 'AIS'）
（'AIS', 'part of', 'advantages'）
（'advantages', 'instance of', 'intermediate distributions'）
（'intermediate distributions', 'instance of', 'Neal'）
（'Neal', 'part of', 'power'）
（'power', 'instance of', 'standard method'）
（'standard method', 'based on', 'undirected models'）
（'alternative strategies', 'based on', 'computationally intensive'）
（'short-chain AIS', 'subclass of', 'alternative strategies'）
（'parallel tempering', 'use', 'alternative strategies'）
（'Desjardins et al.', 'subject of', 'alternative strategies'）"
18.7,7,"('partition functions', 'RBM', 'training process', 'independent estimates', 'parallel tempering', 'bridge sampling', 'ratios', 'neighboring chains', 'AIS estimates', 'low variance estimate', 'iteration of learning', 'intractable partition functions', 'generative models', 'intractable inference')","('partition functions', 'based on', 'RBM')
('RBM', 'part of', 'training process')
('independent estimates', 'based on', 'parallel tempering')
('parallel tempering', 'part of', 'bridge sampling')
('bridge sampling', 'based on', 'ratios')
('ratios', 'part of', 'neighboring chains')
('neighboring chains', 'part of', 'AIS estimates')
('AIS estimates', 'part of', 'low variance estimate')
('low variance estimate', 'based on', 'iteration of learning')
('iteration of learning', 'based on', 'intractable partition functions')
('intractable partition functions', 'part of', 'generative models')
('generative models', 'part of', 'intractable inference')"
18.7,8,"('probabilistic models', 'inference', 'visible variables', 'latent variables', 'deep learning', 'computing', 'p(h v)', 'expectations', 'maximum likelihood learning', 'graphical models', 'restricted Boltzmann machines', 'probabilistic PCA', 'posterior distributions', 'exact inference', 'exponential amount of time', 'sparse coding', 'techniques', 'intractable inference problems', 'deep belief networks', 'deep Boltzmann machines', 'structured graphical model', 'undirected models', 'directed models')","('probabilistic models', 'part of', 'inference')
('inference', 'based on', 'visible variables')
('inference', 'based on', 'latent variables')
('deep learning', 'part of', 'computing')
('computing', 'based on', 'p(h v)')
('expectations', 'part of', 'maximum likelihood learning')
('maximum likelihood learning', 'based on', 'graphical models')
('graphical models', 'part of', 'restricted Boltzmann machines')
('restricted Boltzmann machines', 'part of', 'probabilistic PCA')
('probabilistic PCA', 'based on', 'posterior distributions')
('posterior distributions', 'part of', 'exact inference')
('exact inference', 'based on', 'exponential amount of time')
('sparse coding', 'part of', 'techniques')
('techniques', 'based on', 'intractable inference problems')
('intractable inference problems', 'part of', 'deep belief networks')
('deep belief networks', 'part of', 'deep Boltzmann machines')
('deep Boltzmann machines', 'part of', 'structured graphical model')
('structured graphical model', 'based on', 'undirected models')
('structured graphical model', 'based on', 'directed models')"
18.7,9,"('intractable inference problems', 'deep learning', 'latent variables', 'structured graphical model', 'direct connections', 'posterior distribution', 'large cliques', 'deep Boltzmann machine', 'connections between layers', 'directed model', 'interactions between latent variables', 'visible variables', 'co-parents', 'probabilistic models', 'tractable inference', 'graph structures', 'conditional probability distributions', 'probabilistic PCA', 'linear-Gaussian conditionals', 'mutually orthogonal basis vectors')","('intractable inference problems', 'part of', 'deep learning')
('deep learning', 'based on', 'latent variables')
('structured graphical model', 'part of', 'direct connections')
('direct connections', 'part of', 'posterior distribution')
('large cliques', 'based on', 'structured graphical model')
('deep Boltzmann machine', 'part of', 'connections between layers')
('connections between layers', 'based on', 'directed model')
('interactions between latent variables', 'based on', 'latent variables')
('visible variables', 'part of', 'co-parents')
('probabilistic models', 'part of', 'tractable inference')
('graph structures', 'based on', 'conditional probability distributions')
('conditional probability distributions', 'part of', 'probabilistic PCA')
('probabilistic PCA', 'based on', 'linear-Gaussian conditionals')
('linear-Gaussian conditionals', 'based on', 'mutually orthogonal basis vectors')"
19.1,0,"('inference', 'optimization', 'approximate inference algorithms', 'probabilistic model', 'observed variables', 'latent variables', 'log probability', 'marginalize', 'lower bound', 'evidence lower bound', 'negative variational free energy', 'KL divergence', 'algebra', 'convenient form', 'canonical definition', 'likelihood', 'tractable to compute')","('inference', 'based on', 'optimization')
('approximate inference algorithms', 'part of', 'probabilistic model')
('probabilistic model', 'based on', 'observed variables')
('probabilistic model', 'based on', 'latent variables')
('log probability', 'part of', 'marginalize')
('lower bound', 'based on', 'evidence lower bound')
('evidence lower bound', 'based on', 'negative variational free energy')
('negative variational free energy', 'based on', 'KL divergence')
('KL divergence', 'based on', 'algebra')
('algebra', 'based on', 'convenient form')
('likelihood', 'based on', 'canonical definition')
('tractable to compute', 'based on', 'likelihood')"
19.2,0,"('approximate inference', 'p(h v)', 'lower bound', 'logp(v)', 'q(h v)', 'perfect approximation', 'v,θ,q', 'logp(v;θ)', 'inference', 'procedure', 'q', 'family of functions', 'different forms', 'approximate optimization', 'optimization procedure', 'lower bound', 'computational cost', 'imperfect optimization procedure', 'perfect optimization procedure', 'family of q distributions', 'Expectation Maximization', 'EM algorithm', 'training algorithm', 'models with latent variables', 'EM algorithm', 'E-step', 'theta', 'q(h(i) v)', 'p(h(i) v(i);theta(0))', 'batch and minibatch variants', 'M-step', 'maximize', 'v(i),theta,q', '634')","('approximate inference', 'p(h v)', 'lower bound')
('logp(v)', 'q(h v)', 'perfect approximation')
('v,θ,q', 'logp(v;θ)', 'inference', 'procedure')
('q', 'family of functions', 'different forms')
('approximate optimization', 'optimization procedure', 'lower bound')
('computational cost', 'imperfect optimization procedure', 'perfect optimization procedure')
('family of q distributions', 'Expectation Maximization', 'EM algorithm', 'training algorithm')
('models with latent variables', 'EM algorithm', 'E-step', 'theta', 'q(h(i) v)', 'p(h(i) v(i);theta(0))')
('batch and minibatch variants', 'M-step', 'maximize')
('v(i),theta,q', '634')"
19.3,0,"('approximate inference', 'θ', 'optimization algorithm', 'coordinate ascent algorithm', 'maximize', 'stochastic gradient ascent', 'latent variable models', 'gradient step', 'analytically', 'learning process', 'model parameters', 'likelihood of a completed dataset', 'posterior distribution', 'gradient descent', 'log-likelihood', 'expectations', 'hidden units', 'MAP Inference', 'Sparse Coding', 'inference', 'probability distribution', 'training probabilistic models', 'p(h v)', 'alternative form')","('approximate inference', 'θ', 'optimization algorithm')
('coordinate ascent algorithm', 'maximize')
('stochastic gradient ascent', 'latent variable models', 'gradient step')
('analytically', 'learning process', 'model parameters')
('likelihood of a completed dataset', 'posterior distribution', 'gradient descent')
('log-likelihood', 'expectations', 'hidden units')
('MAP Inference', 'Sparse Coding', 'inference')
('probability distribution', 'training probabilistic models', 'p(h v)')
('alternative form')"
19.3,1,"('latent variable models', 'argmaxp(h v)', 'maximum a posteriori inference', 'MAP inference', 'learning process', '(v,h,q)', 'approximate inference', 'optimal q', 'exact inference', 'unrestricted family of probability distributions', 'exact optimization algorithm', 'Dirac distribution', 'µ', 'maximize', 'logp(h = µ,v)', 'MAP inference problem', 'coordinate ascent', 'parameter updates', 'lower bound', 'logp(v)', 'vacuous', 'differential entropy', 'negative infinity', 'adding noise')","('latent variable models', 'argmaxp(h v)', 'maximum a posteriori inference', 'MAP inference')
('learning process', '(v,h,q)', 'approximate inference')
('optimal q', 'exact inference', 'unrestricted family of probability distributions')
('exact optimization algorithm', 'Dirac distribution', 'µ', 'maximize')
('logp(h = µ,v)', 'MAP inference problem', 'coordinate ascent', 'parameter updates')
('lower bound', 'logp(v)', 'vacuous', 'differential entropy', 'negative infinity')
('adding noise')"
19.3,2,"('MAP inference', 'deep learning', 'sparse coding models', 'factorial Laplace prior', 'linear transformation', 'linear regression problem', 'feature-sign search algorithm', 'Dirac distribution', 'ELBO')","('MAP inference', 'part of', 'deep learning')
('deep learning', 'based on', 'sparse coding models')
('sparse coding models', 'based on', 'factorial Laplace prior')
('linear transformation', 'part of', 'linear regression problem')
('linear regression problem', 'based on', 'feature-sign search algorithm')
('feature-sign search algorithm', 'based on', 'Dirac distribution')
('ELBO', 'part of', 'MAP inference')"
19.4,0,"('variational learning', 'mean field approach', 'structured variational inference', 'parametric form', 'factorial distribution', 'graphical model', 'calculus of variations', 'optimization problem', 'posterior')","('variational learning', 'based on', 'mean field approach')
('mean field approach', 'based on', 'structured variational inference')
('structured variational inference', 'based on', 'parametric form')
('factorial distribution', 'part of', 'mean field approach')
('graphical model', 'part of', 'structured variational inference')
('calculus of variations', 'part of', 'optimization problem')
('optimization problem', 'part of', 'posterior')"
19.4,1,"('approximation', 'KL divergence', 'maximum likelihood learning', 'lookup table', 'mean field assumption', 'binary', 'vector', 'probability', 'optimization algorithm', 'gradient descent', 'fixed point equations')","('approximation', 'use', 'KL divergence')
('maximum likelihood learning', 'based on', 'lookup table')
('mean field assumption', 'based on', 'binary')
('mean field assumption', 'based on', 'vector')
('binary', 'instance of', 'probability')
('vector', 'instance of', 'probability')
('optimization algorithm', 'based on', 'gradient descent')
('gradient descent', 'use', 'fixed point equations')"
19.4,2,"('variational inference', 'sparse coding model', 'mean field', 'algorithm', 'mathematical detail', 'high-level conceptual description', 'variational learning algorithms', 'probabilistic models')","('variational inference', 'subclass of', 'sparse coding model')  
('variational inference', 'based on', 'mean field')  
('mean field', 'part of', 'algorithm')  
('algorithm', 'based on', 'mathematical detail')  
('algorithm', 'based on', 'high-level conceptual description')  
('algorithm', 'subclass of', 'variational learning algorithms')  
('variational learning algorithms', 'use', 'probabilistic models')"
19.4,3,"('graph structure', 'binary sparse coding model', 'posterior distribution', 'variable elimination algorithms', 'variational inference', 'variational learning', 'mean field approximation', 'latent variables', 'Bernoulli distributions', 'probabilities')","('graph structure', 'facet of', 'binary sparse coding model')  
('binary sparse coding model', 'subject of', 'posterior distribution')  
('posterior distribution', 'use', 'variable elimination algorithms')  
('variable elimination algorithms', 'based on', 'variational inference')  
('variational inference', 'subclass of', 'variational learning')  
('variational learning', 'based on', 'mean field approximation')  
('mean field approximation', 'part of', 'latent variables')  
('latent variables', 'use', 'Bernoulli distributions')  
('Bernoulli distributions', 'based on', 'probabilities')"
19.4,4,"('variational learning', 'binary sparse coding', 'sigmoid', 'softplus', 'evidence lower bound', 'log-likelihood', 'gradient ascent', 'inference', 'training algorithm')","('variational learning', 'instance of', 'training algorithm')
('binary sparse coding', 'instance of', 'training algorithm')
('sigmoid', 'instance of', 'training algorithm')
('softplus', 'instance of', 'training algorithm')
('evidence lower bound', 'instance of', 'training algorithm')
('log-likelihood', 'instance of', 'training algorithm')
('gradient ascent', 'instance of', 'training algorithm')
('inference', 'instance of', 'training algorithm')"
19.4,5,"('fixed point equations', 'local maximum', 'convergence criterion', 'mean field fixed point equations', 'variational inference', 'binary sparse coding model', 'derivatives')","('fixed point equations', 'instance of', 'convergence criterion')
('local maximum', 'instance of', 'convergence criterion')
('convergence criterion', 'subclass of', 'mean field fixed point equations')
('mean field fixed point equations', 'instance of', 'convergence criterion')
('variational inference', 'instance of', 'convergence criterion')
('binary sparse coding model', 'instance of', 'convergence criterion')
('derivatives', 'instance of', 'convergence criterion')"
19.4,6,"('recurrent neural networks', 'graphical models', 'inference network', 'binary sparse coding', 'hidden units', 'competition', 'mean field approximation', 'explaining away interactions')","('recurrent neural networks', 'instance of', 'hidden units')
('graphical models', 'instance of', 'hidden units')
('inference network', 'instance of', 'hidden units')
('binary sparse coding', 'instance of', 'competition')
('hidden units', 'instance of', 'competition')
('competition', 'instance of', 'mean field approximation')
('mean field approximation', 'instance of', 'explaining away interactions')"
19.4,7,"('iterative autoencoder', 'deep Boltzmann machines', 'block updates', 'damping', 'calculus of variations', 'functional derivatives')","('iterative autoencoder', 'instance of', 'block updates')
('deep Boltzmann machines', 'instance of', 'block updates')
('block updates', 'instance of', 'damping')
('damping', 'instance of', 'calculus of variations')
('calculus of variations', 'instance of', 'functional derivatives')"
19.4,8,"('Approximate Inference', 'Euler-Lagrange equation', 'gradient', 'functional derivative', 'probability distribution function', 'differential entropy', 'Lagrange multipliers', 'variance', 'mean', 'optimization problem', 'Lagrangian functional')","('Approximate Inference', 'subclass of', 'Euler-Lagrange equation')
('functional derivative', 'based on', 'Euler-Lagrange equation')
('functional derivative', 'based on', 'probability distribution function')
('gradient', 'based on', 'functional derivative')
('differential entropy', 'based on', 'probability distribution function')
('Lagrange multipliers', 'based on', 'Euler-Lagrange equation')
('variance', 'part of', 'probability distribution function')
('mean', 'part of', 'probability distribution function')
('optimization problem', 'use', 'Lagrange multipliers')
('Lagrangian functional', 'based on', 'optimization problem')"
19.4,9,"('Approximate Inference', 'functional derivatives', 'functional form', 'p(x)', 'minimization problem', 'normal distribution', 'entropy', 'probability distribution function')","('Approximate Inference', 'based on', 'functional derivatives')
('functional derivatives', 'based on', 'functional form')
('functional derivatives', 'use', 'minimization problem')
('p(x)', 'based on', 'functional form')
('minimization problem', 'use', 'functional derivatives')
('minimization problem', 'use', 'normal distribution')
('normal distribution', 'based on', 'probability distribution function')
('entropy', 'based on', 'probability distribution function')
('probability distribution function', 'part of', 'normal distribution')"
19.4,10,"('variational inference', 'learning', 'mean field approximation', 'calculus of variations', 'probabilistic model', 'fixed point equation', 'optimization algorithm', 'latent variables', 'visible variable', 'Gaussian distribution')","('variational inference', 'based on', 'mean field approximation')
('learning', 'based on', 'calculus of variations')
('mean field approximation', 'based on', 'probabilistic model')
('mean field approximation', 'use', 'fixed point equation')
('probabilistic model', 'based on', 'visible variable')
('probabilistic model', 'use', 'latent variables')
('fixed point equation', 'use', 'optimization algorithm')
('Gaussian distribution', 'based on', 'probabilistic model')"
19.4,11,"('approximate inference', 'calculus of variations', 'probabilistic modeling', 'posterior', 'variational parameters', 'Gaussian')","('approximate inference', 'part of', 'calculus of variations')
('probabilistic modeling', 'subclass of', 'posterior')
('variational parameters', 'part of', 'probabilistic modeling')
('Gaussian', 'instance of', 'probabilistic modeling')"
19.4,12,"('approximate inference', 'learning algorithm', 'inference algorithm', 'variational learning', 'model', 'approximating assumptions', 'unimodal approximate posterior', 'exact inference', 'variational approximation')","('approximate inference', 'part of', 'learning algorithm')
('inference algorithm', 'subclass of', 'approximate inference')
('variational learning', 'use', 'approximate inference')
('model', 'part of', 'approximate inference')
('approximating assumptions', 'part of', 'approximate inference')
('unimodal approximate posterior', 'instance of', 'approximate inference')
('exact inference', 'subclass of', 'approximate inference')
('variational approximation', 'part of', 'approximate inference')"
19.5,0,"('approximate inference', 'optimization procedure', 'learned approximate inference', 'neural network', 'training set', 'wake-sleep algorithm', 'model distribution', 'inference network', 'dream sleep', 'Monte Carlo training algorithms', 'log partition function', 'undirected models', 'biological dreaming')","('approximate inference', 'part of', 'optimization procedure')
('learned approximate inference', 'part of', 'approximate inference')
('neural network', 'subclass of', 'approximate inference')
('training set', 'part of', 'approximate inference')
('wake-sleep algorithm', 'subclass of', 'approximate inference')
('model distribution', 'part of', 'approximate inference')
('inference network', 'part of', 'approximate inference')
('dream sleep', 'part of', 'approximate inference')
('Monte Carlo training algorithms', 'use', 'approximate inference')
('log partition function', 'part of', 'approximate inference')
('undirected models', 'part of', 'approximate inference')
('biological dreaming', 'part of', 'approximate inference')"
19.5,1,"('approximate inference', 'learned approximate inference', 'inference network', 'mean field fixed point equations', 'DBM', 'sparse coding', 'autoencoder', 'variational autoencoder')","('approximate inference', 'part of', 'learned approximate inference')
('inference network', 'part of', 'learned approximate inference')
('mean field fixed point equations', 'part of', 'learned approximate inference')
('DBM', 'subclass of', 'learned approximate inference')
('sparse coding', 'part of', 'learned approximate inference')
('autoencoder', 'subclass of', 'learned approximate inference')
('variational autoencoder', 'subclass of', 'learned approximate inference')"
19.5,2,"No entities related to deep learning, machine learning, mathematics, or computer science are mentioned in this paragraph.","I apologize for the misunderstanding. Since there are no entities related to the given domains mentioned in the paragraph, I cannot provide any relevant triples."
20.1,0,"('Deep Generative Models', 'generative models', 'probability distributions', 'Boltzmann Machines', 'connectionist', 'learning arbitrary probability distributions', 'binary vectors', 'Boltzmann machine', 'train and perform inference', 'energy-based model')","('Deep Generative Models', 'based on', 'generative models')
('generative models', 'part of', 'probability distributions')
('Boltzmann Machines', 'use', 'connectionist')
('connectionist', 'based on', 'learning arbitrary probability distributions')
('learning arbitrary probability distributions', 'instance of', 'binary vectors')
('Boltzmann machine', 'use', 'train and perform inference')
('energy-based model', 'subclass of', 'Boltzmann machine')"
20.1,1,"('deep generative models', 'joint probability distribution', 'energy function', 'partition function', 'weight matrix', 'bias parameters', 'training examples', 'latent variables', 'hidden units', 'multi-layer perceptron', 'linear relationships', 'probability mass functions', 'visible units', 'learning algorithms', 'maximum likelihood', 'gradient', 'learning rules')","('deep generative models', 'based on', 'joint probability distribution')
('joint probability distribution', 'part of', 'energy function')
('energy function', 'based on', 'partition function')
('weight matrix', 'part of', 'energy function')
('bias parameters', 'part of', 'energy function')
('training examples', 'use', 'energy function')
('latent variables', 'part of', 'energy function')
('hidden units', 'part of', 'energy function')
('multi-layer perceptron', 'instance of', 'hidden units')
('linear relationships', 'subclass of', 'probability mass functions')
('probability mass functions', 'part of', 'energy function')
('visible units', 'part of', 'energy function')
('learning algorithms', 'based on', 'maximum likelihood')
('maximum likelihood', 'use', 'energy function')
('gradient', 'subclass of', 'learning rules')
('learning rules', 'use', 'energy function')"
20.2,0,"('deep probabilistic models', 'restricted Boltzmann machines', 'building blocks', 'probabilistic graphical models', 'observable variables', 'latent variables', 'graph structure', 'bipartite graph')","('deep probabilistic models', 'based on', 'restricted Boltzmann machines')
('restricted Boltzmann machines', 'part of', 'building blocks')
('building blocks', 'instance of', 'probabilistic graphical models')
('observable variables', 'part of', 'probabilistic graphical models')
('latent variables', 'part of', 'probabilistic graphical models')
('graph structure', 'part of', 'probabilistic graphical models')
('bipartite graph', 'subclass of', 'graph structure')"
20.2,1,"('restricted Boltzmann machine', 'undirected graphical model', 'bipartite graph', 'visible units', 'hidden units', 'deep belief network', 'directed connections', 'multiple hidden layers', 'local conditional probability distributions', 'deep Boltzmann machine', 'latent variables', 'stack of RBMs', 'DBMs')","('restricted Boltzmann machine', 'instance of', 'undirected graphical model')
('bipartite graph', 'subclass of', 'undirected graphical model')
('visible units', 'part of', 'restricted Boltzmann machine')
('hidden units', 'part of', 'restricted Boltzmann machine')
('deep belief network', 'based on', 'restricted Boltzmann machine')
('directed connections', 'part of', 'deep belief network')
('multiple hidden layers', 'part of', 'deep belief network')
('local conditional probability distributions', 'part of', 'restricted Boltzmann machine')
('deep Boltzmann machine', 'based on', 'restricted Boltzmann machine')
('latent variables', 'part of', 'deep Boltzmann machine')
('stack of RBMs', 'use', 'deep Boltzmann machine')
('DBMs', 'instance of', 'deep belief network')"
20.2,2,"('restricted Boltzmann machine', 'observed layer', 'binary random variables', 'latent or hidden layer', 'energy-based model', 'joint probability distribution', 'energy function', 'partition function', 'conditional distributions', 'bipartite graph structure', 'P(h|v)', 'P(v|h)')","('restricted Boltzmann machine', 'based on', 'observed layer')
('observed layer', 'instance of', 'binary random variables')
('restricted Boltzmann machine', 'based on', 'latent or hidden layer')
('restricted Boltzmann machine', 'subclass of', 'energy-based model')
('energy-based model', 'based on', 'joint probability distribution')
('joint probability distribution', 'part of', 'energy function')
('energy function', 'based on', 'partition function')
('partition function', 'part of', 'energy function')
('energy function', 'part of', 'conditional distributions')
('conditional distributions', 'use', 'energy function')
('bipartite graph structure', 'part of', 'conditional distributions')
('P(h|v)', 'part of', 'conditional distributions')
('P(v|h)', 'part of', 'conditional distributions')"
20.2,3,"('Deep Generative Models', 'RBMs')","('Deep Generative Models', 'subclass of', 'RBMs')"
20.3,0,"('Deep Belief Networks', 'DBNs')","('Deep Belief Networks', 'subclass of', 'DBNs')"
20.3,1,"('RBMs', 'DBNs', 'contrastive divergence', 'stochastic maximum likelihood', 'log-likelihood', 'partition function', 'wake-sleep algorithm')","('RBMs', 'instance of', 'DBNs')
('contrastive divergence', 'use', 'RBMs')
('stochastic maximum likelihood', 'use', 'RBMs')
('log-likelihood', 'use', 'RBMs')
('partition function', 'use', 'RBMs')
('wake-sleep algorithm', 'use', 'DBNs')"
20.3,2,"('deep generative models', 'DBN', 'MLP', 'classification models', 'weights', 'biases', 'generative training', 'discriminative fine-tuning', 'inference equations', 'variational lower bound', 'log-likelihood', 'probability distribution', 'hidden units', 'approximate inference techniques', 'DBN graphical model', 'explaining away interactions', 'log-likelihood of a DBN', 'AIS', 'deep belief network', 'undirected connections', 'directed connections', 'consecutive layers', 'belief network', 'dynamic Bayesian networks', 'Bayesian networks', 'Markov chains')","('DBN', 'instance of', 'deep generative models')
('MLP', 'instance of', 'classification models')
('DBN', 'instance of', 'classification models')
('DBN', 'instance of', 'classification models')
('DBN', 'instance of', 'classification models')
('DBN', 'instance of', 'classification models')
('DBN', 'instance of', 'classification models')
('DBN', 'instance of', 'classification models')
('DBN', 'instance of', 'classification models')
('DBN', 'instance of', 'classification models')
('weights', 'instance of', 'classification models')
('biases', 'instance of', 'classification models')
('generative training', 'instance of', 'classification models')
('discriminative fine-tuning', 'instance of', 'classification models')
('inference equations', 'instance of', 'classification models')
('variational lower bound', 'instance of', 'classification models')
('log-likelihood', 'instance of', 'classification models')
('probability distribution', 'instance of', 'classification models')
('hidden units', 'instance of', 'classification models')
('approximate inference techniques', 'instance of', 'classification models')
('DBN graphical model', 'instance of', 'classification models')
('explaining away interactions', 'instance of', 'classification models')
('log-likelihood of a DBN', 'instance of', 'classification models')
('AIS', 'instance of', 'classification models')
('deep belief network', 'instance of', 'classification models')
('undirected connections', 'instance of', 'classification models')
('directed connections', 'instance of', 'classification models')
('DBN graphical model', 'instance of', 'belief network')
('belief network', 'instance of', 'classification models')
('dynamic Bayesian networks', 'instance of', 'classification models')
('Bayesian networks', 'instance of', 'classification models')
('Markov chains', 'instance of', 'classification models')"
20.4,0,"('deep generative models', 'DBM', 'deep Boltzmann machine', 'undirected model', 'latent variables', 'RBMs', 'graph structure', 'document modeling', 'energy-based model', 'joint probability distribution', 'energy function', 'visible layer', 'hidden layers', 'binary units', 'real-valued visible units', 'bias parameters', 'DBM energy function')","('DBM', 'instance of', 'deep generative models')
('deep Boltzmann machine', 'instance of', 'deep generative models')
('undirected model', 'instance of', 'deep generative models')
('latent variables', 'instance of', 'deep generative models')
('RBMs', 'instance of', 'deep generative models')
('graph structure', 'instance of', 'deep generative models')
('document modeling', 'instance of', 'deep generative models')
('energy-based model', 'instance of', 'deep generative models')
('joint probability distribution', 'instance of', 'deep generative models')
('energy function', 'instance of', 'deep generative models')
('visible layer', 'instance of', 'deep generative models')
('hidden layers', 'instance of', 'deep generative models')
('binary units', 'instance of', 'deep generative models')
('real-valued visible units', 'instance of', 'deep generative models')
('bias parameters', 'instance of', 'deep generative models')
('DBM energy function', 'instance of', 'deep generative models')"
20.4,1,"('deep generative models', 'DBM', 'deep Boltzmann machine', 'bipartite graph structure', 'RBMs', 'energy function', 'weight matrices', 'fully connected Boltzmann machines', 'conditional distributions', 'conditional independent', 'Bernoulli parameters', 'activation probabilities')","('DBM', 'instance of', 'deep generative models')
('deep Boltzmann machine', 'instance of', 'deep generative models')
('bipartite graph structure', 'instance of', 'deep generative models')
('RBMs', 'instance of', 'deep generative models')
('energy function', 'instance of', 'deep generative models')
('weight matrices', 'instance of', 'deep generative models')
('fully connected Boltzmann machines', 'instance of', 'deep generative models')
('conditional distributions', 'instance of', 'deep generative models')
('conditional independent', 'instance of', 'deep generative models')
('Bernoulli parameters', 'instance of', 'deep generative models')
('activation probabilities', 'instance of', 'deep generative models')"
20.4,2,"('Gibbs sampling', 'deep Boltzmann machine efficient', 'visible units', 'hidden units', 'update one variable at a time', 'update all of the units in only two iterations', 'bipartite DBM connection pattern', 'stochastic maximum likelihood algorithm', 'interesting properties', 'posterior distribution', 'classification', 'approximate inference procedure', 'mean field expectation', 'sigmoid activation functions', 'variational lower bound', 'log-likelihood', 'interactions between hidden units', 'top-down feedback influence', 'MLP-based inference procedure')","('Gibbs sampling', 'instance of', 'deep Boltzmann machine efficient')
('visible units', 'instance of', 'deep Boltzmann machine efficient')
('hidden units', 'instance of', 'deep Boltzmann machine efficient')
('update one variable at a time', 'instance of', 'deep Boltzmann machine efficient')
('update all of the units in only two iterations', 'instance of', 'deep Boltzmann machine efficient')
('bipartite DBM connection pattern', 'instance of', 'deep Boltzmann machine efficient')
('stochastic maximum likelihood algorithm', 'instance of', 'deep Boltzmann machine efficient')
('interesting properties', 'instance of', 'deep Boltzmann machine efficient')
('posterior distribution', 'instance of', 'deep Boltzmann machine efficient')
('classification', 'instance of', 'deep Boltzmann machine efficient')
('approximate inference procedure', 'instance of', 'deep Boltzmann machine efficient')
('mean field expectation', 'instance of', 'deep Boltzmann machine efficient')
('sigmoid activation functions', 'instance of', 'deep Boltzmann machine efficient')
('variational lower bound', 'instance of', 'deep Boltzmann machine efficient')
('log-likelihood', 'instance of', 'deep Boltzmann machine efficient')
('interactions between hidden units', 'instance of', 'deep Boltzmann machine efficient')
('top-down feedback influence', 'instance of', 'deep Boltzmann machine efficient')
('MLP-based inference procedure', 'instance of', 'deep Boltzmann machine efficient')"
20.4,3,"('conditional distribution', 'independent', 'fixed point equations', 'optimal mean field expectations', 'numerical tolerance', 'influence of top-down feedback interactions', 'neuroscience', 'computational models', 'sampling', 'MCMC sampling', 'Markov chain transition', 'mean field inference', 'factorial distributions', 'mutually dependent', 'variational approximation', 'mean field approximation', 'bidirectional interactions', 'iterative approximate inference procedure', 'variational approximations')","('conditional distribution', 'instance of', 'independent')
('fixed point equations', 'instance of', 'independent')
('optimal mean field expectations', 'instance of', 'independent')
('numerical tolerance', 'instance of', 'independent')
('influence of top-down feedback interactions', 'instance of', 'independent')
('neuroscience', 'instance of', 'independent')
('computational models', 'instance of', 'independent')
('sampling', 'instance of', 'independent')
('MCMC sampling', 'instance of', 'independent')
('Markov chain transition', 'instance of', 'independent')
('mean field inference', 'instance of', 'independent')
('factorial distributions', 'instance of', 'independent')
('mutually dependent', 'instance of', 'independent')
('variational approximation', 'instance of', 'independent')
('mean field approximation', 'instance of', 'independent')
('bidirectional interactions', 'instance of', 'independent')
('iterative approximate inference procedure', 'instance of', 'independent')
('variational approximations', 'instance of', 'independent')"
20.4,4,"('deep generative models', 'posterior distribution', 'hidden units', 'visible units', 'mean field approximation', 'approximating family', 'mean field approach', 'two hidden layers', 'inference process', 'approximate distribution', 'binary hidden units', 'Bernoulli distributions', 'parametrization', 'approximation to the posterior', 'DBMs', 'more layers', 'bipartite structure', 'graph')","('deep generative models', 'instance of', 'posterior distribution')
('posterior distribution', 'based on', 'deep generative models')
('hidden units', 'part of', 'deep generative models')
('visible units', 'part of', 'deep generative models')
('mean field approximation', 'based on', 'deep generative models')
('approximating family', 'based on', 'deep generative models')
('mean field approach', 'based on', 'deep generative models')
('two hidden layers', 'part of', 'deep generative models')
('inference process', 'part of', 'deep generative models')
('approximate distribution', 'based on', 'deep generative models')
('binary hidden units', 'part of', 'deep generative models')
('Bernoulli distributions', 'part of', 'deep generative models')
('parametrization', 'part of', 'deep generative models')
('approximation to the posterior', 'based on', 'deep generative models')
('DBMs', 'instance of', 'deep generative models')
('more layers', 'facet of', 'deep generative models')
('bipartite structure', 'part of', 'deep generative models')
('graph', 'part of', 'deep generative models')"
20.4,5,"('deep generative models', 'even layers', 'odd layers', 'Gibbs sampling', 'approximating distributions', 'variational lower bound', 'update rules', 'fixed point', 'iterative algorithm', 'positive phase gradient', 'learning', 'intractable partition function', 'intractable posterior distribution', 'variational inference', 'maximizing', 'log-likelihood')","('deep generative models', 'instance of', 'even layers')
('even layers', 'based on', 'deep generative models')
('odd layers', 'based on', 'deep generative models')
('Gibbs sampling', 'part of', 'deep generative models')
('approximating distributions', 'part of', 'deep generative models')
('variational lower bound', 'part of', 'deep generative models')
('update rules', 'part of', 'deep generative models')
('fixed point', 'part of', 'deep generative models')
('iterative algorithm', 'part of', 'deep generative models')
('positive phase gradient', 'part of', 'deep generative models')
('learning', 'part of', 'deep generative models')
('intractable partition function', 'part of', 'deep generative models')
('intractable posterior distribution', 'part of', 'deep generative models')
('variational inference', 'part of', 'deep generative models')
('maximizing', 'part of', 'deep generative models')
('log-likelihood', 'part of', 'deep generative models')"
20.4,6,"('Deep Boltzmann Machine', 'restricted Boltzmann machines', 'annealed importance sampling', 'stochastic maximum likelihood', 'pseudolikelihood', 'contrastive divergence', 'Markov chain', 'variance stochastic maximum likelihood', 'Layer-Wise Pretraining', 'greedy layer-wise pretraining', 'RBMs')","('Deep Boltzmann Machine', 'instance of', 'restricted Boltzmann machines')
('restricted Boltzmann machines', 'use', 'annealed importance sampling')
('restricted Boltzmann machines', 'use', 'stochastic maximum likelihood')
('restricted Boltzmann machines', 'use', 'pseudolikelihood')
('restricted Boltzmann machines', 'use', 'contrastive divergence')
('restricted Boltzmann machines', 'use', 'Markov chain')
('restricted Boltzmann machines', 'use', 'variance stochastic maximum likelihood')
('restricted Boltzmann machines', 'use', 'Layer-Wise Pretraining')
('rbos', 'instance of', 'greedy layer-wise pretraining')"
20.4,7,"('variational stochastic maximum likelihood algorithm', 'DBM', 'hidden layers', 'Gibbs steps', 'Markov chain', 'design matrix', 'mean field inference loop', 'Gibbs sampling', 'momentum', 'learning rate')","('variational stochastic maximum likelihood algorithm', 'use', 'DBM')
('DBM', 'use', 'hidden layers')
('hidden layers', 'use', 'Gibbs steps')
('hidden layers', 'use', 'Markov chain')
('design matrix', 'use', 'mean field inference loop')
('mean field inference loop', 'use', 'Gibbs sampling')
('DBM', 'use', 'momentum')
('DBM', 'use', 'learning rate')"
20.4,8,"('deep generative models', 'RBMs', 'DBM', 'PCD', 'log-likelihood', 'coordinate ascent', 'greedy layer-wise training procedure', 'DBN', 'Salakhutdinov and Hinton', 'SML algorithm', 'mean field', 'Goodfellow et al.', 'centered DBMs', 'MLP-based classifier', 'hyperparameters')","('deep generative models', 'subclass of', 'RBMs')
('DBM', 'subclass of', 'deep generative models')
('PCD', 'subclass of', 'RBMs')
('log-likelihood', 'use', 'deep generative models')
('coordinate ascent', 'based on', 'deep generative models')
('greedy layer-wise training procedure', 'based on', 'deep generative models')
('DBN', 'use', 'deep generative models')
('Salakhutdinov and Hinton', 'use', 'deep generative models')
('SML algorithm', 'use', 'deep generative models')
('mean field', 'use', 'RBMs')
('Goodfellow et al.', 'use', 'deep generative models')
('centered DBMs', 'subclass of', 'DBM')
('MLP-based classifier', 'use', 'deep generative models')
('hyperparameters', 'use', 'deep generative models')"
20.4,9,"('deep Boltzmann machine', 'MNIST dataset', 'RBMs', 'CD', 'logP(v)', 'second RBM', 'h(1)', 'target class y', 'CD-k', 'logP(h(1),y)', 'DBM', 'logP(v,y)', 'stochastic maximum likelihood', 'k = 5', 'mean field inference', 'features h(1)', 'features h(2)', 'MLP', 'mean field', 'output layer', 'estimate of y', 'weights', 'stochastic gradient descent', 'dropout')","('deep Boltzmann machine', 'instance of', 'RBMs')
('deep Boltzmann machine', 'subclass of', 'DBM')
('RBMs', 'based on', 'Boltzmann machine')
('RBMs', 'based on', 'CD')
('RBMs', 'based on', 'stochastic maximum likelihood')
('RBMs', 'based on', 'logP(v)')
('RBMs', 'based on', 'mean field inference')
('RBMs', 'based on', 'mean field')
('CD', 'instance of', 'CD-k')
('logP(v)', 'instance of', 'logP(h(1),y)')
('second RBM', 'instance of', 'RBMs')
('second RBM', 'subclass of', 'DBM')
('h(1)', 'instance of', 'features h(1)')
('target class y', 'instance of', 'estimate of y')
('h(1)', 'instance of', 'features h(2)')
('MLP', 'instance of', 'output layer')
('weights', 'instance of', 'stochastic gradient descent')
('dropout', 'instance of', 'stochastic gradient descent')"
20.4,10,"('deep generative models', 'DBMs', 'CD training', 'RBMs', 'PCD training', 'MLP', 'Boltzmann machine', 'Hessian', 'greedy layer-wise pretraining', 'test set log-likelihood', 'samples', 'MLPs', 'classifier', 'multi-prediction deep Boltzmann machine', 'Goodfellow et al.', 'back-propagation algorithm', 'MCMC estimates', 'gradient', 'likelihood', 'classification performance', 'missing inputs', 'sparsity patterns', 'visible and hidden units', 'energys function', 'weight matrix', 'biases', 'vector µ', 'stochastic gradient descent', 'likelihood')","('deep generative models', 'instance of', 'DBMs')
('CD training', 'instance of', 'DBMs')
('RBMs', 'instance of', 'DBMs')
('PCD training', 'instance of', 'DBMs')
('MLP', 'instance of', 'DBMs')
('Boltzmann machine', 'subclass of', 'DBMs')
('Hessian', 'instance of', 'DBMs')
('greedy layer-wise pretraining', 'instance of', 'DBMs')
('test set log-likelihood', 'instance of', 'DBMs')
('samples', 'instance of', 'DBMs')
('MLPs', 'instance of', 'DBMs')
('classifier', 'instance of', 'DBMs')
('multi-prediction deep Boltzmann machine', 'instance of', 'DBMs')
('Goodfellow et al.', 'instance of', 'DBMs')
('back-propagation algorithm', 'instance of', 'DBMs')
('MCMC estimates', 'instance of', 'DBMs')
('gradient', 'instance of', 'DBMs')
('likelihood', 'instance of', 'DBMs')
('classification performance', 'instance of', 'DBMs')
('missing inputs', 'instance of', 'DBMs')
('sparsity patterns', 'instance of', 'DBMs')
('visible and hidden units', 'instance of', 'DBMs')
('energys function', 'instance of', 'DBMs')
('weight matrix', 'instance of', 'DBMs')
('biases', 'instance of', 'DBMs')
('vector µ', 'instance of', 'DBMs')
('stochastic gradient descent', 'instance of', 'DBMs')
('likelihood', 'instance of', 'DBMs')"
20.4,11,"('Deep Generative Models', 'Hessian matrix', 'centering trick', 'Boltzmann machine learning', 'enhanced gradient', 'multi-prediction deep Boltzmann machine', 'mean field equations', 'recurrent networks', 'training process', 'inference network', 'computational graph', 'approximate conditional distribution', 'Gibbs sampling', 'approximate inference', 'missing inputs', 'classification', 'feature extraction', 'class labels', 'mean field inference', 'back-propagation', 'loss', 'optimization', 'SML training')","('Deep Generative Models', 'instance of', 'Hessian matrix')
('Hessian matrix', 'use', 'centering trick')
('Boltzmann machine learning', 'instance of', 'Deep Generative Models')
('Hessian matrix', 'relation', 'enhanced gradient')
('multi-prediction deep Boltzmann machine', 'instance of', 'Deep Generative Models')
('mean field equations', 'instance of', 'recurrent networks')
('training process', 'instance of', 'Deep Generative Models')
('inference network', 'subclass of', 'Deep Generative Models')
('computational graph', 'instance of', 'Deep Generative Models')
('approximate conditional distribution', 'relation', 'Gibbs sampling')
('approximate inference', 'instance of', 'Deep Generative Models')
('missing inputs', 'instance of', 'Deep Generative Models')
('classification', 'instance of', 'Deep Generative Models')
('feature extraction', 'instance of', 'Deep Generative Models')
('class labels', 'instance of', 'Deep Generative Models')
('mean field inference', 'relation', 'recurrent networks')
('back-propagation', 'instance of', 'Deep Generative Models')
('loss', 'instance of', 'Deep Generative Models')
('optimization', 'instance of', 'Deep Generative Models')
('SML training', 'instance of', 'Deep Generative Models')"
20.4,12,"('Figure 20.5', 'multi-prediction training process', 'deep Boltzmann machine', 'minibatch', 'training step', 'example', 'time step', 'mean field inference process', 'data variables', 'inputs', 'conditioning', 'mean field inference', 'practical applications', 'unroll mean field', 'dashed arrows', 'more steps', 'targets', 'gray', 'recurrent network', 'gradient descent', 'back-propagation', 'mean field process', 'MP-DBM', 'accurate estimates', 'Figure adapted from Goodfellow et al.')","('multi-prediction training process', 'relation', 'deep Boltzmann machine')
('deep Boltzmann machine', 'instance of', 'minibatch')
('minibatch', 'instance of', 'training step')
('training step', 'instance of', 'deep Boltzmann machine')
('example', 'instance of', 'time step')
('time step', 'instance of', 'mean field inference process')
('mean field inference process', 'instance of', 'data variables')
('data variables', 'instance of', 'deep Boltzmann machine')
('inputs', 'instance of', 'conditioning')
('conditioning', 'instance of', 'mean field inference')
('mean field inference', 'instance of', 'deep Boltzmann machine')
('practical applications', 'subclass of', 'deep Boltzmann machine')
('unroll mean field', 'relation', 'deep Boltzmann machine')
('dashed arrows', 'relation', 'more steps')
('more steps', 'instance of', 'deep Boltzmann machine')
('targets', 'instance of', 'deep Boltzmann machine')
('gray', 'instance of', 'recurrent network')
('recurrent network', 'instance of', 'deep Boltzmann machine')
('gradient descent', 'instance of', 'deep Boltzmann machine')
('back-propagation', 'instance of', 'deep Boltzmann machine')
('mean field process', 'instance of', 'deep Boltzmann machine')
('MP-DBM', 'instance of', 'accurate estimates')
('Figure adapted from Goodfellow et al.', 'instance of', 'deep Boltzmann machine')"
20.5,0,"('DBMs', 'greedy layer-wise pretraining', 'back-propagating through the approximate inference graph', 'log-likelihood', 'heuristic approximation', 'generalized pseudolikelihood', 'MP-DBM', 'NADE-k', 'Raiko et al.', 'NADE framework', 'dropout', 'latent variable', 'Boltzmann Machines', 'Real-Valued Data', 'binary data', 'probability distributions', 'real values', 'grayscale images', 'audio modeling', 'expectation of a binary variable', 'probability values', 'grayscale image datasets', 'Gaussian-Bernoulli RBMs', 'Restricted Boltzmann machines', 'exponential family conditional distributions', 'Gaussian distribution', 'hidden units', 'visible units')","('DBMs', 'relation', 'greedy layer-wise pretraining')
('back-propagating through the approximate inference graph', 'relation', 'DBMs')
('log-likelihood', 'instance of', 'DBMs')
('heuristic approximation', 'instance of', 'DBMs')
('generalized pseudolikelihood', 'instance of', 'DBMs')
('MP-DBM', 'instance of', 'DBMs')
('NADE-k', 'instance of', 'DBMs')
('Raiko et al.', 'instance of', 'DBMs')
('NADE framework', 'instance of', 'DBMs')
('dropout', 'instance of', 'DBMs')
('latent variable', 'instance of', 'DBMs')
('Boltzmann Machines', 'instance of', 'DBMs')
('Real-Valued Data', 'relation', 'binary data')
('binary data', 'relation', 'probability distributions')
('real values', 'relation', 'grayscale images')
('grayscale images', 'relation', 'audio modeling')
('expectation of a binary variable', 'instance of', 'DBMs')
('probability values', 'relation', 'grayscale image datasets')
('Gaussian-Bernoulli RBMs', 'instance of', 'DBMs')
('Restricted Boltzmann machines', 'instance of', 'DBMs')
('exponential family conditional distributions', 'relation', 'Gaussian distribution')
('hidden units', 'instance of', 'DBMs')
('visible units', 'relation', 'DBMs')"
20.5,1,"('Gaussian-Bernoulli RBMs', 'covariance matrix', 'precision matrix', 'conditional distribution', 'energy function', 'unnormalized log conditional distribution', 'partition function', 'conditional p(v|h)', 'conditional p(h|v)', 'linear factor model', 'restricted Boltzmann machine', 'Boltzmann machine', 'cross terms', 'diagonal precision matrix', 'hidden units', 'bias term', 'family of distributions')","('Gaussian-Bernoulli RBMs', 'relation', 'covariance matrix')
('Gaussian-Bernoulli RBMs', 'relation', 'precision matrix')
('conditional distribution', 'relation', 'Gaussian-Bernoulli RBMs')
('energy function', 'relation', 'Gaussian-Bernoulli RBMs')
('unnormalized log conditional distribution', 'relation', 'Gaussian-Bernoulli RBMs')
('partition function', 'relation', 'Gaussian-Bernoulli RBMs')
('conditional p(v|h)', 'relation', 'Gaussian-Bernoulli RBMs')
('conditional p(h|v)', 'relation', 'Gaussian-Bernoulli RBMs')
('linear factor model', 'relation', 'Gaussian-Bernoulli RBMs')
('restricted Boltzmann machine', 'instance of', 'Gaussian-Bernoulli RBMs')
('Boltzmann machine', 'instance of', 'Gaussian-Bernoulli RBMs')
('cross terms', 'relation', 'Gaussian-Bernoulli RBMs')
('diagonal precision matrix', 'relation', 'Gaussian-Bernoulli RBMs')
('hidden units', 'instance of', 'Gaussian-Bernoulli RBMs')
('bias term', 'relation', 'Gaussian-Bernoulli RBMs')
('family of distributions', 'instance of', 'Gaussian-Bernoulli RBMs')"
20.5,2,"('Deep Generative Models', 'Gaussian-Bernoulli RBM', 'visible units', 'Gaussian RBM', 'real-valued data', 'natural images', 'conditional covariance', 'mean and covariance RBM', 'mean-product of t-distribution', 'spike and slab RBM')","('Deep Generative Models', 'subclass of', 'Deep Learning')
('Gaussian-Bernoulli RBM', 'subclass of', 'Restricted Boltzmann Machine')
('visible units', 'part of', 'Restricted Boltzmann Machine')
('Gaussian RBM', 'subclass of', 'Restricted Boltzmann Machine')
('real-valued data', 'instance of', 'Data')
('natural images', 'instance of', 'Image')
('conditional covariance', 'based on', 'covariance')
('mean and covariance RBM', 'subclass of', 'Restricted Boltzmann Machine')
('mean-product of t-distribution', 'based on', 't-distribution')
('spike and slab RBM', 'subclass of', 'Restricted Boltzmann Machine')"
20.5,3,"('mcRBM', 'Gaussian RBM', 'cRBM', 'conditional mean', 'conditional covariance', 'energy function', 'covariance weight vector', 'covariance offsets', 'joint distribution', 'multivariate Gaussian distribution', 'covariance matrix', 'weight matrix')","('mcRBM', 'subclass of', 'Restricted Boltzmann Machine')
('Gaussian RBM', 'subclass of', 'Restricted Boltzmann Machine')
('cRBM', 'subclass of', 'Restricted Boltzmann Machine')
('conditional mean', 'based on', 'mean')
('conditional covariance', 'based on', 'covariance')
('energy function', 'based on', 'Restricted Boltzmann Machine')
('covariance weight vector', 'part of', 'covariance')
('covariance offsets', 'part of', 'covariance')
('joint distribution', 'based on', 'multivariate Gaussian distribution')
('multivariate Gaussian distribution', 'subclass of', 'Gaussian distribution')
('covariance matrix', 'part of', 'multivariate Gaussian distribution')
('weight matrix', 'part of', 'Restricted Boltzmann Machine')"
20.5,4,"('mcRBM', 'contrastive divergence', 'persistent contrastive divergence', 'non-diagonal conditional covariance structure', 'Gibbs sampling', 'Hamiltonian Monte Carlo', 'mPoT model', 'PoT model', 'multivariate Gaussian distribution', 'Gamma distribution', 'mPoT energy function', 'learning')","('mcRBM', 'subclass of', 'Restricted Boltzmann Machine')
('contrastive divergence', 'instance of', 'Training Algorithm')
('persistent contrastive divergence', 'instance of', 'Training Algorithm')
('non-diagonal conditional covariance structure', 'part of', 'Conditional Covariance')
('Gibbs sampling', 'instance of', 'Sampling Method')
('Hamiltonian Monte Carlo', 'instance of', 'Sampling Method')
('mPoT model', 'instance of', 'Mixture of Power-t Distributions Model')
('PoT model', 'instance of', 'Power-t Distribution Model')
('multivariate Gaussian distribution', 'subclass of', 'Gaussian distribution')
('Gamma distribution', 'instance of', 'Probability Distribution')
('mPoT energy function', 'based on', 'Energy Function')
('learning', 'use', 'Training Algorithm')"
20.5,5,"('spike and slab restricted Boltzmann machines', 'ssRBMs', 'covariance structure', 'binary hidden units', 'auxiliary real-valued variables', 'spike units', 'slab units', 'conditional covariance', 'contrastive divergence', 'persistent contrastive divergence', 'energy function', 'precision matrix', 'scalar precision parameter', 'quadratic penalty', 'mean parameter', 'conditional distributions')","('spike and slab restricted Boltzmann machines', 'subclass of', 'Restricted Boltzmann Machine')
('ssRBMs', 'subclass of', 'Restricted Boltzmann Machine')
('covariance structure', 'part of', 'Conditional Covariance')
('binary hidden units', 'subclass of', 'Hidden Units')
('auxiliary real-valued variables', 'instance of', 'Real-valued Variable')
('spike units', 'subclass of', 'Hidden Units')
('slab units', 'subclass of', 'Hidden Units')
('conditional covariance', 'based on', 'Covariance Structure')
('contrastive divergence', 'instance of', 'Training Algorithm')
('persistent contrastive divergence', 'instance of', 'Training Algorithm')
('energy function', 'based on', 'Restricted Boltzmann Machine')
('precision matrix', 'part of', 'Covariance Structure')
('scalar precision parameter', 'part of', 'Precision Matrix')
('quadratic penalty', 'based on', 'Penalty Function')
('mean parameter', 'part of', 'Conditional Distributions')
('conditional distributions', 'instance of', 'Probability Distribution')"
20.5,6,"('conditional covariance', 'covariance matrix', 'spike variables', 'sparse coding', 'MAP inference', 'parametrizes', 'product of probabilistic principal components analysis', 'overcomplete setting', 'positive definite', 'constrained optimization', 'convolutional variants', 'higher-order interactions')","('conditional covariance', 'based on', 'Covariance Matrix')
('covariance matrix', 'part of', 'Covariance Structure')
('spike variables', 'instance of', 'Variable')
('sparse coding', 'instance of', 'Coding Technique')
('MAP inference', 'instance of', 'Inference Technique')
('parametrizes', 'part of', 'Model')
('product of probabilistic principal components analysis', 'instance of', 'Dimensionality Reduction Technique')
('overcomplete setting', 'instance of', 'Signal Processing')
('positive definite', 'subclass of', 'Matrix')
('constrained optimization', 'instance of', 'Optimization Technique')
('convolutional variants', 'subclass of', 'Variants')
('higher-order interactions', 'part of', 'Interactions')"
20.6,0,"('deep generative models', 'sparse coding', 'spikeand slab sparse coding', 'convolutional boltzmann machines', 'discrete convolution', 'small kernel', 'translation invariant', 'spatial or temporal structure', 'RBMs', 'deep convolutional networks', 'pooling operation', 'maximum pooling', 'energy-based models', 'binary pooling unit', 'binary detector units', 'energy configurations', 'normalization constant', 'probabilistic max pooling', 'stochastic pooling', 'detector units', 'mutually exclusive', 'regularizing constraint', 'model capacity', 'overlapping pooling regions', 'feedforward convolutional networks', 'convolutional Boltzmann')","('deep generative models', 'instance of', 'sparse coding')
('sparse coding', 'subclass of', 'spike and slab sparse coding')
('convolutional boltzmann machines', 'based on', 'discrete convolution')
('discrete convolution', 'part of', 'small kernel')
('small kernel', 'subclass of', 'translation invariant')
('translation invariant', 'facet of', 'spatial or temporal structure')
('RBMs', 'based on', 'deep generative models')
('deep convolutional networks', 'based on', 'convolutional boltzmann machines')
('pooling operation', 'part of', 'deep convolutional networks')
('maximum pooling', 'subclass of', 'pooling operation')
('energy-based models', 'instance of', 'deep generative models')
('binary pooling unit', 'subclass of', 'energy configurations')
('binary detector units', 'subclass of', 'energy configurations')
('energy configurations', 'part of', 'energy-based models')
('normalization constant', 'instance of', 'probabilistic max pooling')
('probabilistic max pooling', 'use', 'stochastic pooling')
('detector units', 'part of', 'energy-based models')
('mutually exclusive', 'subclass of', 'detector units')
('regularizing constraint', 'subclass of', 'mutually exclusive')
('model capacity', 'instance of', 'deep generative models')
('overlapping pooling regions', 'part of', 'feedforward convolutional networks')
('feedforward convolutional networks', 'based on', 'deep convolutional networks')
('convolutional Boltzmann', 'subclass of', 'convolutional boltzmann machines')"
20.6,1,"('deep generative models', 'probabilistic max pooling', 'convolutional deep Boltzmann machines', 'classifier', 'traditional convolutional networks', 'size invariance', 'pooling units', 'pooling regions', 'detector units', 'variable-sized input', 'edge detectors', 'mutual exclusivity constraint', 'input image', 'feature map', 'symmetric connections', 'hidden units', 'visible units', 'deep belief network', 'undirected model', 'tractable layer-wise mean field fixed point updates', 'deep Boltzmann machine')","('deep generative models', 'use', 'probabilistic max pooling')
('probabilistic max pooling', 'based on', 'convolutional deep Boltzmann machines')
('convolutional deep Boltzmann machines', 'based on', 'classifier')
('traditional convolutional networks', 'subclass of', 'classifier')
('size invariance', 'facet of', 'pooling units')
('pooling units', 'part of', 'pooling regions')
('pooling regions', 'part of', 'convolutional deep Boltzmann machines')
('detector units', 'part of', 'convolutional deep Boltzmann machines')
('variable-sized input', 'instance of', 'traditional convolutional networks')
('edge detectors', 'part of', 'traditional convolutional networks')
('mutual exclusivity constraint', 'part of', 'traditional convolutional networks')
('input image', 'part of', 'traditional convolutional networks')
('feature map', 'part of', 'traditional convolutional networks')
('symmetric connections', 'part of', 'traditional convolutional networks')
('hidden units', 'part of', 'deep belief network')
('visible units', 'part of', 'deep belief network')
('deep belief network', 'instance of', 'undirected model')
('undirected model', 'based on', 'convolutional deep Boltzmann machines')
('tractable layer-wise mean field fixed point updates', 'part of', 'deep belief network')
('deep Boltzmann machine', 'subclass of', 'convolutional deep Boltzmann machines')"
20.7,0,"('structured output scenario', 'probability distribution', 'conditional distributions', 'conditional modeling', 'sequence modeling', 'sequence of variables', 'joint angles', 'skeletons', '3-D characters', 'probabilistic model', 'video game and film industry', 'motion capture systems', 'character’s movement', 'conditional RBM', 'bias parameters', 'linear function', 'preceding m values of x', 'weights', 'hidden units', 'probability distribution induced', 'conditional RBM', 'sequence modeling using conditional RBMs', 'distribution over sequences')","('structured output scenario', 'instance of', 'probability distribution')
('conditional distributions', 'part of', 'probability distribution')
('conditional modeling', 'subclass of', 'sequence modeling')
('sequence modeling', 'part of', 'sequence of variables')
('sequence of variables', 'facet of', 'joint angles')
('joint angles', 'part of', 'skeletons')
('3-D characters', 'subclass of', 'skeletons')
('probabilistic model', 'instance of', 'probability distribution')
('video game and film industry', 'use', 'motion capture systems')
('motion capture systems', 'part of', 'character’s movement')
('conditional RBM', 'subclass of', 'probabilistic model')
('bias parameters', 'part of', 'linear function')
('linear function', 'instance of', 'conditional RBM')
('preceding m values of x', 'part of', 'linear function')
('weights', 'part of', 'linear function')
('hidden units', 'part of', 'probability distribution induced by conditional RBM')
('probability distribution induced by conditional RBM', 'based on', 'conditional RBM')
('sequence modeling using conditional RBMs', 'part of', 'sequence modeling')
('distribution over sequences', 'instance of', 'probability distribution')"
20.8,0,"('RNN-RBM sequence model', 'RNN', 'RBMs', 'generative model', 'frames', 'training criteria', 'discriminative RBMs', 'generative criterion', 'discriminative criteria', 'supervised learners', 'MLPs', 'energy functions', 'second-order interactions', 'higher-order Boltzmann machines', 'three-way interactions', 'spatial transformations', 'one-hot class variable', 'class label', 'groups of hidden units')","('RNN-RBM sequence model', 'based on', 'RNN')
('RNN', 'based on', 'RBMs')
('generative model', 'subclass of', 'RBMs')
('frames', 'part of', 'generative model')
('training criteria', 'part of', 'generative model')
('discriminative RBMs', 'subclass of', 'RBMs')
('generative criterion', 'part of', 'generative model')
('discriminative criteria', 'part of', 'generative model')
('supervised learners', 'subclass of', 'MLPs')
('MLPs', 'part of', 'generative model')
('energy functions', 'part of', 'generative model')
('second-order interactions', 'part of', 'energy functions')
('higher-order Boltzmann machines', 'subclass of', 'energy functions')
('three-way interactions', 'part of', 'higher-order Boltzmann machines')
('spatial transformations', 'part of', 'higher-order Boltzmann machines')
('one-hot class variable', 'part of', 'generative model')
('class label', 'instance of', 'one-hot class variable')
('groups of hidden units', 'part of', 'generative model')"
20.9,0,"('hidden units', 'nuisance details', 'realistic samples', 'class of the example', 'gate some features', 'third-order interactions', 'binary mask variables', 'influence of visible units', 'energy function', 'tractability', 'conditional distributions', 'innovation', 'generative models', 'stochastic transformations', 'extra inputs', 'simple probability distribution', 'uniform distribution', 'Gaussian distribution', 'deterministic computation', 'function f(x,z)', 'back-propagation', 'Gaussian distribution with mean µ and variance σ^2')","('hidden units', 'facet of', 'nuisance details')
('realistic samples', 'instance of', 'hidden units')
('class of the example', 'facet of', 'hidden units')
('gate some features', 'part of', 'hidden units')
('third-order interactions', 'part of', 'hidden units')
('binary mask variables', 'part of', 'hidden units')
('influence of visible units', 'part of', 'hidden units')
('energy function', 'part of', 'hidden units')
('tractability', 'part of', 'energy function')
('conditional distributions', 'part of', 'energy function')
('innovation', 'facet of', 'generative models')
('generative models', 'instance of', 'hidden units')
('stochastic transformations', 'part of', 'generative models')
('extra inputs', 'part of', 'generative models')
('simple probability distribution', 'instance of', 'generative models')
('uniform distribution', 'subclass of', 'simple probability distribution')
('Gaussian distribution', 'subclass of', 'simple probability distribution')
('deterministic computation', 'part of', 'generative models')
('function f(x,z)', 'part of', 'generative models')
('back-propagation', 'part of', 'hidden units')
('Gaussian distribution with mean µ and variance σ^2', 'instance of', 'Gaussian distribution')"
20.9,1,"('deep generative models', 'sampling distribution', 'loss function', 'back-propagation algorithm', 'reparametrization trick', 'stochastic back-propagation', 'perturbation analysis', 'REINFORCE algorithm')","('deep generative models', 'instance of', 'sampling distribution')
('sampling distribution', 'part of', 'deep generative models')
('loss function', 'subclass of', 'back-propagation algorithm')
('back-propagation algorithm', 'subclass of', 'loss function')
('reparametrization trick', 'based on', 'stochastic back-propagation')
('stochastic back-propagation', 'facet of', 'reparametrization trick')
('perturbation analysis', 'use', 'REINFORCE algorithm')
('REINFORCE algorithm', 'use', 'perturbation analysis')"
20.9,2,"('deep generative models', 'stochastic operations', 'reinforcement learning', 'variational approximations', 'generative neural networks', 'Rezende et al.', 'denoising autoencoders', 'dropout', 'REINFORCE algorithm', 'Monte Carlo average', 'SGD', 'stochastic gradient-based optimization techniques')","('deep generative models', 'instance of', 'stochastic operations')
('stochastic operations', 'part of', 'deep generative models')
('reinforcement learning', 'use', 'variational approximations')
('variational approximations', 'subject of', 'reinforcement learning')
('generative neural networks', 'based on', 'deep generative models')
('Rezende et al.', 'based on', 'generative neural networks')
('denoising autoencoders', 'subclass of', 'generative neural networks')
('dropout', 'subclass of', 'generative neural networks')
('REINFORCE algorithm', 'subclass of', 'variance reduction techniques')
('Monte Carlo average', 'use', 'REINFORCE algorithm')
('SGD', 'subclass of', 'stochastic gradient-based optimization techniques')
('stochastic gradient-based optimization techniques', 'subclass of', 'SGD')"
20.9,3,"('REINFORCE estimator', 'gradient', 'Monte Carlo estimator', 'variance reduction methods', 'baseline', 'SGD', 'learning rate')","('REINFORCE estimator', 'subclass of', 'gradient')
('gradient', 'subclass of', 'REINFORCE estimator')
('Monte Carlo estimator', 'subclass of', 'variance reduction methods')
('variance reduction methods', 'subclass of', 'Monte Carlo estimator')
('baseline', 'subclass of', 'variance reduction methods')
('SGD', 'subclass of', 'variance reduction methods')
('learning rate', 'part of', 'SGD')"
20.9,4,"('optimal baseline', 'gradient estimator', 'neural network', 'mean squared error objective', 'variance reduction methods', 'reinforcement learning', 'binary reward', 'deep learning', 'adaptive learning rate')","('optimal baseline', 'subclass of', 'variance reduction methods')
('gradient estimator', 'use', 'neural network')
('neural network', 'instance of', 'deep learning')
('mean squared error objective', 'subclass of', 'variance reduction methods')
('variance reduction methods', 'part of', 'mean squared error objective')
('reinforcement learning', 'subject of', 'variance reduction methods')
('binary reward', 'instance of', 'reinforcement learning')
('deep learning', 'subclass of', 'neural network')
('adaptive learning rate', 'part of', 'neural network')"
20.10,0,"('directed generative nets', 'directed graphical models', 'deep belief networks', 'sparse coding models', 'sigmoid belief networks')","('directed generative nets', 'subclass of', 'directed graphical models')
('directed graphical models', 'instance of', 'deep belief networks')
('deep belief networks', 'subclass of', 'sparse coding models')
('sparse coding models', 'part of', 'deep belief networks')
('sigmoid belief networks', 'subclass of', 'deep belief networks')"
20.10,1,"('deep generative models', 'restricted boltzmann machine', 'probability distributions', 'visible units', 'sigmoid belief network', 'inference network', 'mean field distribution', 'latent variables', 'discrete sampling processes', 'importance sampling', 'rewweighted wake-sleep', 'bidirectional Helmholtz machines', 'auto-regressive networks', 'binary variables', 'conditional distributions')","('deep generative models', 'subclass of', 'restricted boltzmann machine')
('restricted boltzmann machine', 'based on', 'probability distributions')
('sigmoid belief network', 'based on', 'probability distributions')
('inference network', 'based on', 'mean field distribution')
('latent variables', 'based on', 'probability distributions')
('importance sampling', 'use', 'discrete sampling processes')
('rewweighted wake-sleep', 'use', 'discrete sampling processes')
('bidirectional Helmholtz machines', 'based on', 'restricted boltzmann machine')
('auto-regressive networks', 'based on', 'binary variables')
('binary variables', 'based on', 'conditional distributions')"
20.10,2,"('differentiable generator nets', 'latent variables', 'samples x', 'distributions over samples x', 'neural network', 'variational autoencoders', 'inference net', 'generative adversarial networks', 'discriminator network', 'generator networks', 'parametrized computational procedures', 'possible distributions', 'draw samples', 'normal distribution', 'mean', 'covariance', 'affine layer', 'Cholesky decomposition', 'pseudorandom number generators', 'nonlinear transformations', 'simple distributions', 'inverse transform sampling', 'cumulative distribution function', 'feedforward network', 'parametric family of nonlinear functions', 'training data', 'desired distribution', 'change of variables', 'distribution over z')","('latent variables', 'based on', 'variational autoencoders')
('samples x', 'based on', 'distributions over samples x')
('neural network', 'based on', 'parametrized computational procedures')
('variational autoencoders', 'based on', 'inference net')
('generative adversarial networks', 'based on', 'discriminator network')
('generator networks', 'based on', 'parametrized computational procedures')
('normal distribution', 'based on', 'mean and covariance')
('affine layer', 'based on', 'Cholesky decomposition')
('inverse transform sampling', 'based on', 'cumulative distribution function')
('feedforward network', 'based on', 'parametric family of nonlinear functions')
('training data', 'based on', 'desired distribution')
('change of variables', 'based on', 'distribution over z')"
20.10,3,"('probability distribution', 'generator net', 'indirect means of learning', 'maximize logp(x)', 'conditional distribution', 'Bernoulli distributions', 'marginalizing z', 'reparametrization trick', 'emitting samples', 'discrete data', 'continuous data', 'direct sampling', 'gradient descent', 'feedforward networks', 'supervised learning', 'hidden units', 'training data', 'generative modeling', 'classification', 'regression', 'intractable criteria')","('generator net', 'based on', 'probability distribution')
('maximize logp(x)', 'indirect means of learning', 'probability distribution')
('conditional distribution', 'based on', 'Bernoulli distributions')
('marginalizing z', 'based on', 'conditional distribution')
('reparametrization trick', 'based on', 'generator net')
('emitting samples', 'based on', 'generator net')
('direct sampling', 'based on', 'probability distribution')
('feedforward networks', 'based on', 'hidden units')
('supervised learning', 'based on', 'training data')
('generative modeling', 'based on', 'probability distribution')
('classification', 'based on', 'supervised learning')
('regression', 'based on', 'supervised learning')"
20.10,4,"('differentiable generator nets', 'data', 'inputs z', 'outputs x', 'supervised learning', 'optimization procedure', 'generative modeling', 'learning procedure', 'z space', 'mapping', 'latent variables', 'training data', 'computer-rendered imagery', 'convolutional network', 'model capacity', 'optimization algorithms', 'train generator networks', 'variational autoencoders', 'learned approximate inference', 'gradient-based methods', 'code distribution', 'model generator network', 'approximate inference network', 'variational lower bound', 'data point x')","('data', 'based on', 'training data')
('inputs z', 'based on', 'latent variables')
('outputs x', 'based on', 'generative modeling')
('supervised learning', 'based on', 'training data')
('optimization procedure', 'based on', 'optimization algorithms')
('generative modeling', 'based on', 'differentiable generator nets')
('learning procedure', 'based on', 'supervised learning')
('z space', 'based on', 'latent variables')
('mapping', 'based on', 'differentiable generator nets')
('latent variables', 'based on', 'z space')
('training data', 'based on', 'computer-rendered imagery')
('convolutional network', 'based on', 'model capacity')
('train generator networks', 'based on', 'supervised learning')
('variational autoencoders', 'based on', 'learned approximate inference')
('approximate inference network', 'based on', 'variational autoencoders')
('variational lower bound', 'based on', 'code distribution')
('data point x', 'based on', 'data')"
20.10,5,"('deep generative models', 'EM', 'latent variables', 'Gaussian distribution', 'variational posterior', 'reconstruction log-likelihood', 'variational inference', 'sampling', 'encoder', 'decoder', 'generative modeling', 'maximum likelihood', 'blurry images', 'lower bound', 'mean squared error', 'input')","以下是根据提供的关系列表找出的实体之间的关系三元组：

('deep generative models', 'instance of', 'generative modeling')
('EM', 'use', 'variational inference')
('latent variables', 'instance of', 'variational posterior')
('Gaussian distribution', 'instance of', 'distribution')
('variational posterior', 'based on', 'latent variables')
('reconstruction log-likelihood', 'based on', 'blurry images')
('variational inference', 'based on', 'lower bound')
('sampling', 'instance of', 'generative modeling')
('encoder', 'part of', 'deep generative models')
('decoder', 'part of', 'deep generative models')
('generative modeling', 'instance of', 'deep generative models')
('blurry images', 'subject of', 'reconstruction log-likelihood')
('lower bound', 'facet of', 'variational inference')
('mean squared error', 'use', 'input')"
20.10,6,"('generative models', 'log-likelihood', 'Boltzmann machines', 'deep recurrent attention writer', 'DRAW model', 'variational RNNs', 'importance weighted autoencoder', 'MP-DBM', 'back-propagation')","以下是根据提供的关系列表找出的实体之间的关系三元组：

('generative models', 'instance of', 'Boltzmann machines')
('log-likelihood', 'based on', 'generative models')
('Boltzmann machines', 'instance of', 'deep generative models')
('deep recurrent attention writer', 'instance of', 'generative models')
('DRAW model', 'instance of', 'generative models')
('variational RNNs', 'instance of', 'generative models')
('importance weighted autoencoder', 'instance of', 'generative models')
('MP-DBM', 'instance of', 'generative models')
('back-propagation', 'use', 'generative models')"
20.10,7,"('variational autoencoder', 'inference network', 'mean field fixed point equations', 'generator network', 'manifold learning algorithm', 'Generative Adversarial Networks', 'generator network', 'discriminator network', 'zero-sum game', 'payoff')","以下是根据提供的关系列表找出的实体之间的关系三元组：

('variational autoencoder', 'instance of', 'manifold learning algorithm')
('inference network', 'part of', 'variational autoencoder')
('mean field fixed point equations', 'based on', 'variational autoencoder')
('generator network', 'part of', 'variational autoencoder')
('manifold learning algorithm', 'instance of', 'variational autoencoder')
('Generative Adversarial Networks', 'instance of', 'manifold learning algorithm')
('generator network', 'part of', 'Generative Adversarial Networks')
('discriminator network', 'part of', 'Generative Adversarial Networks')
('zero-sum game', 'instance of', 'Generative Adversarial Networks')
('payoff', 'facet of', 'zero-sum game')"
20.10,8,"('Deep Generative Models', 'variational autoencoder', 'Kingma and Welling, 2014a', 'latent code', 'Frey faces manifold', 'MNIST manifold', 'GANs', 'neural networks')","('Deep Generative Models', 'instance of', 'variational autoencoder')
('variational autoencoder', 'based on', 'Deep Generative Models')
('variational autoencoder', 'subject of', 'Kingma and Welling, 2014a')
('latent code', 'facet of', 'variational autoencoder')
('Frey faces manifold', 'facet of', 'variational autoencoder')
('MNIST manifold', 'part of', 'variational autoencoder')
('GANs', 'subclass of', 'neural networks')"
20.10,9,"('GANs', 'Goodfellow (2014)', 'maximum likelihood learning', 'discriminator', 'maximum likelihood training', 'Goodfellow et al. (2014c)', 'DCGAN', 'image synthesis')","('GANs', 'instance of', 'Goodfellow (2014)')
('maximum likelihood learning', 'facet of', 'GANs')
('discriminator', 'facet of', 'GANs')
('maximum likelihood training', 'facet of', 'GANs')
('maximum likelihood training', 'subject of', 'Goodfellow et al. (2014c)')
('DCGAN', 'subclass of', 'GANs')
('image synthesis', 'use', 'GANs')"
20.10,10,"('deep generative models', 'GANs', 'LSUN dataset', 'DCGAN model', 'Radford et al.', 'LAPGAN model', 'Denton et al.', 'conditional GANs', 'Mirza and Osindero', 'Laplacian pyramid')","('deep generative models', 'subclass of', 'GANs')
('LSUN dataset', 'part of', 'deep generative models')
('DCGAN model', 'instance of', 'deep generative models')
('Radford et al.', 'based on', 'DCGAN model')
('LAPGAN model', 'instance of', 'deep generative models')
('Denton et al.', 'based on', 'LAPGAN model')
('conditional GANs', 'subclass of', 'GANs')
('Mirza and Osindero', 'based on', 'conditional GANs')
('Laplacian pyramid', 'based on', 'conditional GANs')"
20.10,11,"('deep generative models', 'Gaussian distribution', 'dropout', 'discriminator network', 'generator network', 'GAN framework', 'differentiable generator networks', 'self-supervised boosting', 'RBM generator', 'logistic regression discriminator', 'generative moment matching networks', 'moment matching', 'VAEs', 'GANs', 'inference network', 'statistics', 'moments', 'random variable', 'training set', 'expectation', 'random vector', 'non-negative integers', 'computational infeasible', 'multivariate Gaussian distribution', 'neural networks', 'complex nonlinear relationships')","('deep generative models', 'instance of', 'GAN framework')
('self-supervised boosting', 'instance of', 'GAN framework')
('RBM generator', 'part of', 'deep generative models')
('logistic regression discriminator', 'part of', 'GAN framework')
('generative moment matching networks', 'part of', 'GAN framework')
('moment matching', 'based on', 'generative moment matching networks')
('VAEs', 'subclass of', 'deep generative models')
('GANs', 'subclass of', 'deep generative models')
('statistics', 'instance of', 'moments')
('random variable', 'instance of', 'statistics')
('random vector', 'instance of', 'random variable')
('multivariate Gaussian distribution', 'facet of', 'statistics')
('neural networks', 'use', 'complex nonlinear relationships')"
20.10,12,"('deep generative models', 'discriminator network', 'generator network', 'generative moment matching networks', 'maximum mean discrepancy', 'MMD', 'cost function', 'first moments', 'infinite-dimensional space', 'kernel function', 'autoencoder', 'training set', 'code space', 'decoder', 'GANs', 'batch of examples', 'training update', 'moments', 'empirical average', 'batch size', 'variation', 'generator net', 'Convolutional Generative Networks', 'convolution', 'transpose', 'convolution operator', 'image')","('deep generative models', 'contains', 'discriminator network')
('deep generative models', 'contains', 'generator network')
('deep generative models', 'contains', 'generative moment matching networks')
('generative moment matching networks', 'use', 'maximum mean discrepancy')
('maximum mean discrepancy', 'abbreviation of', 'MMD')
('maximum mean discrepancy', 'defined by', 'cost function')
('first moments', 'defined in', 'infinite-dimensional space')
('infinite-dimensional space', 'related to', 'kernel function')
('autoencoder', 'trained on', 'training set')
('autoencoder', 'maps', 'code space')
('autoencoder', 'includes', 'decoder')
('GANs', 'trained on', 'training set')
('GANs', 'updated with', 'batch of examples')
('GANs', 'uses', 'moments')
('moments', 'calculated as', 'empirical average')
('batch size', 'affects', 'variation')
('generator net', 'uses', 'Convolutional Generative Networks')
('Convolutional Generative Networks', 'contains', 'convolution')
('Convolutional Generative Networks', 'contains', 'transpose')
('convolution', 'used in', 'convolution operator')
('convolution operator', 'applied to', 'image')"
20.10,13,"('deep generative models', 'generator network', 'image', 'pooling layer', 'un-pooling', 'max-pooling operation', 'un-pooling operator', 'tensor of zeros', 'auto-regressive networks', 'probabilistic models', 'conditional probability distributions', 'neural networks', 'chain rule of probability', 'fully-visible Bayes networks', 'FVBNs', 'logistic regression', 'hidden units', 'NADE')","('deep generative models', 'contains', 'generator network')
('generator network', 'applied to', 'image')
('generator network', 'uses', 'pooling layer')
('pooling layer', 'reversed by', 'un-pooling operation')
('max-pooling operation', 'reversed by', 'un-pooling operator')
('un-pooling operator', 'fills with', 'tensor of zeros')
('generator network', 'utilizes', 'auto-regressive networks')
('auto-regressive networks', 'belong to', 'probabilistic models')
('probabilistic models', 'expressed by', 'conditional probability distributions')
('neural networks', 'applies', 'chain rule of probability')
('fully-visible Bayes networks', 'shortened as', 'FVBNs')
('fully-visible Bayes networks', 'utilize', 'logistic regression')
('logistic regression', 'has', 'hidden units')
('NADE', 'is a type of', 'neural networks')"
20.10,14,"('deep generative models', 'reuse of features', 'linear predictor', 'linear regression', 'logistic regression', 'softmax regression', 'multivariate Gaussian distribution', 'generative modeling', 'linear classification methods')","('deep generative models', 'reuse of features', 'linear predictor')
('linear predictor', 'linear regression', 'logistic regression')
('linear regression', 'linear regression', 'logistic regression')
('logistic regression', 'logistic regression', 'softmax regression')
('softmax regression', 'softmax regression', 'multivariate Gaussian distribution')
('generative modeling', 'instance of', 'deep generative models')
('linear classification methods', 'use', 'linear predictor')"
20.10,15,"('linear classifiers', 'convex loss functions', 'closed form solutions', 'increasing capacity', 'basis expansions', 'kernel trick', 'neural auto-regressive network', 'hidden units', 'parametrization', 'conditional distributions', 'joint distribution', 'generalization', 'curse of dimensionality', 'tabular graphical models', 'discrete probabilistic models', 'neural network')","('linear classifiers', 'linear classifiers', 'convex loss functions')
('convex loss functions', 'convex loss functions', 'closed form solutions')
('closed form solutions', 'closed form solutions', 'linear classifiers')
('increasing capacity', 'increasing capacity', 'basis expansions')
('basis expansions', 'basis expansions', 'kernel trick')
('neural auto-regressive network', 'neural auto-regressive network', 'hidden units')
('hidden units', 'hidden units', 'neural network')
('parametrization', 'parametrization', 'conditional distributions')
('conditional distributions', 'conditional distributions', 'joint distribution')
('tabular graphical models', 'tabular graphical models', 'discrete probabilistic models')"
20.10,16,"('neural network', 'conditional probability', 'high-order dependencies', 'left-to-right connectivity', 'hidden units', 'reuse principle', 'conditional distribution', 'multivariate data', 'Bernoulli variable', 'multinoulli variable', 'continuous variables', 'joint distributions', 'neural autoregressive density estimator', 'parameter sharing scheme', 'weights')","('neural network', 'conditional probability', 'high-order dependencies')
('left-to-right connectivity', 'part of', 'neural network')
('hidden units', 'use', 'neural network')
('reuse principle', 'reuse principle', 'conditional distribution')
('multivariate data', 'part of', 'conditional distribution')
('Bernoulli variable', 'instance of', 'multinoulli variable')
('multinoulli variable', 'part of', 'conditional distribution')
('continuous variables', 'continuous variables', 'conditional distribution')
('conditional distribution', 'conditional distribution', 'joint distributions')
('joint distributions', 'joint distributions', 'neural autoregressive density estimator')
('parameter sharing scheme', 'parameter sharing scheme', 'neural network')
('weights', 'weights', 'neural network')"
20.10,17,"('neural autoregressive density estimator', 'hidden units', 'weight sharing pattern', 'mean field inference', 'RBm', 'NADE-k', 'Gaussian mixture', 'mixture weights', 'conditional mean', 'conditional variance', 'RNADE', 'mixture density networks')","('neural autoregressive density estimator', 'hidden units', 'weight sharing pattern')
('weight sharing pattern', 'weight sharing pattern', 'mean field inference')
('RBm', 'RBm', 'mean field inference')
('NADE-k', 'part of', 'neural autoregressive density estimator')
('Gaussian mixture', 'Gaussian mixture', 'mixture weights')
('mixture weights', 'mixture weights', 'conditional mean')
('conditional mean', 'conditional mean', 'conditional variance')
('RNADE', 'RNADE', 'mixture density networks')"
20.10,18,"('parameters of the network', 'softmax unit', 'positive variances', 'pseudo-gradient', 'randomly sampling orders', 'inference problem', 'ensemble of models', 'deep versions', 'multiply-add operations', 'computation')","('parameters of the network', 'parameters of the network', 'softmax unit')
('softmax unit', 'softmax unit', 'positive variances')
('pseudo-gradient', 'pseudo-gradient', 'randomly sampling orders')
('inference problem', 'inference problem', 'ensemble of models')
('ensemble of models', 'ensemble of models', 'deep versions')
('multiply-add operations', 'multiply-add operations', 'computation')"
20.11,0,"('deep generative models', 'autoencoders', 'score matching', 'denoising autoencoders', 'contractive autoencoders', 'variational autoencoder', 'MCMC sampling', 'tangent plane', 'data manifold', 'Markov chain', 'denoising autoencoder', 'noise', 'Bengio', 'corruption noise', 'parameters', 'p(x)')","('deep generative models', 'instance of', 'autoencoders')
('autoencoders', 'subclass of', 'score matching')
('autoencoders', 'subclass of', 'denoising autoencoders')
('autoencoders', 'subclass of', 'contractive autoencoders')
('autoencoders', 'subclass of', 'variational autoencoder')
('denoising autoencoders', 'use', 'MCMC sampling')
('tangent plane', 'part of', 'data manifold')
('MCMC sampling', 'instance of', 'Markov chain')
('denoising autoencoder', 'subclass of', 'autoencoders')
('denoising autoencoder', 'use', 'noise')
('Bengio', 'instance of', 'autoencoders')
('corruption noise', 'part of', 'parameters')
('p(x)', 'based on', 'autoencoders')"
20.11,1,"('deep generative models', 'Markov chain', 'denoising autoencoder', 'corruption process', 'state', 'x', 'x~', 'f', 'h', 'g', 'parameters', 'reconstruction distribution', 'p(x|ω)', 'squared reconstruction error', 'x^', 'Gaussian noise', 'mean squared error', 'estimator', 'empirical distribution', 'hyperparameter', 'mixing speed', 'extent', 'generative stochastic networks')","('deep generative models', 'instance of', 'Markov chain')
('denoising autoencoder', 'instance of', 'autoencoders')
('corruption process', 'part of', 'denoising autoencoder')
('state', 'part of', 'denoising autoencoder')
('x', 'part of', 'denoising autoencoder')
('x~', 'part of', 'denoising autoencoder')
('f', 'part of', 'denoising autoencoder')
('h', 'part of', 'denoising autoencoder')
('g', 'part of', 'denoising autoencoder')
('parameters', 'part of', 'denoising autoencoder')
('reconstruction distribution', 'part of', 'denoising autoencoder')
('p(x|ω)', 'based on', 'denoising autoencoder')
('squared reconstruction error', 'based on', 'denoising autoencoder')
('x^', 'part of', 'denoising autoencoder')
('Gaussian noise', 'part of', 'denoising autoencoder')
('mean squared error', 'use', 'estimator')
('estimator', 'based on', 'empirical distribution')
('empirical distribution', 'part of', 'denoising autoencoder')
('hyperparameter', 'part of', 'denoising autoencoder')
('mixing speed', 'part of', 'denoising autoencoder')
('extent', 'part of', 'denoising autoencoder')
('generative stochastic networks', 'instance of', 'autoencoders')"
20.11,2,"('deep generative models', 'autoencoder', 'consistent estimator', 'conditional distribution', 'stationary distribution', 'data generating distribution', 'clamping', 'conditional sampling', 'Boltzmann machines', 'denoising autoencoders', 'GSNs', 'MP-DBMs', 'latent variables', 'missing inputs', 'detailed balance', 'transition operator', 'Markov Chain', 'equilibrium', 'pixels', 'image')","('deep generative models', 'instance of', 'autoencoder')
('consistent estimator', 'part of', 'deep generative models')
('conditional distribution', 'part of', 'deep generative models')
('stationary distribution', 'part of', 'deep generative models')
('data generating distribution', 'part of', 'deep generative models')
('clamping', 'part of', 'Boltzmann machines')
('conditional sampling', 'part of', 'Boltzmann machines')
('Boltzmann machines', 'instance of', 'deep generative models')
('denoising autoencoders', 'subclass of', 'autoencoder')
('GSNs', 'subclass of', 'autoencoder')
('MP-DBMs', 'subclass of', 'autoencoder')
('latent variables', 'part of', 'autoencoder')
('missing inputs', 'part of', 'autoencoder')
('detailed balance', 'part of', 'Markov Chain')
('transition operator', 'part of', 'Markov Chain')
('Markov Chain', 'instance of', 'deep generative models')
('equilibrium', 'part of', 'Markov Chain')
('pixels', 'part of', 'image')
('image', 'part of', 'deep generative models')"
20.12,0,"('deep generative models', 'clamping', 'Markov Chain', 'resampling', 'GSN', 'MNIST digits', 'walk-back training procedure', 'generative training', 'denoising autoencoders', 'encode-decode reconstruction', 'contrastive divergence algorithm', 'penalizing', 'probabilistic reconstructions', 'spurious modes', 'generative stochastic networks', 'latent variables', 'generative')","('deep generative models', 'subclass of', 'generative')
('clamping', 'part of', 'deep generative models')
('Markov Chain', 'instance of', 'deep generative models')
('resampling', 'part of', 'Markov Chain')
('GSN', 'subclass of', 'generative stochastic networks')
('MNIST digits', 'part of', 'GSN')
('walk-back training procedure', 'part of', 'GSN')
('generative training', 'part of', 'GSN')
('denoising autoencoders', 'part of', 'generative training')
('encode-decode reconstruction', 'part of', 'denoising autoencoders')
('contrastive divergence algorithm', 'part of', 'generative training')
('penalizing', 'part of', 'generative training')
('probabilistic reconstructions', 'part of', 'denoising autoencoders')
('spurious modes', 'part of', 'generative training')
('generative stochastic networks', 'subclass of', 'generative')
('latent variables', 'part of', 'generative')
('generative', 'subclass of', 'deep generative models')"
20.12,1,"('deep generative models', 'Markov chain', 'visible variables', 'latent variables', 'GSN', 'conditional probability distributions', 'reconstruction distribution', 'denoising autoencoders', 'RBMs', 'DBNs', 'DBMs', 'probabilistic models', 'generative process', 'joint distribution', 'stationary distribution', 'MCMC methods', 'training criteria', 'reconstruction log-probability', 'gradient', 'reparametrization trick', 'walk-back training protocol', 'Discriminant GSNs', 'unsupervised learning', 'p(y|x)')","('deep generative models', 'instance of', 'Markov chain')
('visible variables', 'part of', 'deep generative models')
('latent variables', 'part of', 'deep generative models')
('GSN', 'instance of', 'deep generative models')
('conditional probability distributions', 'part of', 'GSN')
('reconstruction distribution', 'part of', 'denoising autoencoders')
('denoising autoencoders', 'subclass of', 'RBMs')
('RBMs', 'subclass of', 'DBNs')
('DBNs', 'subclass of', 'DBMs')
('probabilistic models', 'instance of', 'deep generative models')
('generative process', 'part of', 'probabilistic models')
('joint distribution', 'part of', 'probabilistic models')
('stationary distribution', 'part of', 'Markov chain')
('MCMC methods', 'part of', 'Markov chain')
('training criteria', 'part of', 'deep generative models')
('reconstruction log-probability', 'part of', 'training criteria')
('gradient', 'part of', 'reparametrization trick')
('reparametrization trick', 'part of', 'training criteria')
('walk-back training protocol', 'part of', 'GSN')
('Discriminant GSNs', 'subclass of', 'GSN')
('unsupervised learning', 'part of', 'deep generative models')
('p(y|x)', 'based on', 'GSN')"
20.13,0,"('deep generative models', 'Markov chain', 'GSN', 'hybrid model', 'RBM', 'generative model', 'MCMC sampling', 'ancestral sampling', 'diffusion inversion training scheme', 'non-equilibrium thermodynamics', 'denoising autoencoder')","('deep generative models', 'instance of', 'generative model')
('Markov chain', 'instance of', 'GSN')
('hybrid model', 'subclass of', 'generative model')
('RBM', 'instance of', 'generative model')
('MCMC sampling', 'instance of', 'ancestral sampling')
('hybrid model', 'based on', 'MCMC sampling')
('diffusion inversion training scheme', 'instance of', 'generative model')
('non-equilibrium thermodynamics', 'instance of', 'generative model')
('denoising autoencoder', 'instance of', 'generative model')"
20.14,0,"('deep generative models', 'diffusion inversion', 'denoising autoencoder', 'approximate Bayesian computation', 'MCMC', 'GSN', 'generative modeling')","('deep generative models', 'instance of', 'generative modeling')
('diffusion inversion', 'instance of', 'generative modeling')
('denoising autoencoder', 'instance of', 'generative modeling')
('approximate Bayesian computation', 'instance of', 'generative modeling')
('MCMC', 'instance of', 'generative modeling')
('GSN', 'instance of', 'generative modeling')"
20.14,1,"('preprocessing', 'generative modeling benchmarks', 'MNIST dataset')","('preprocessing', 'part of', 'generative modeling benchmarks')
('generative modeling benchmarks', 'based on', 'MNIST dataset')"
20.14,2,"('generative models', 'samples', 'overfitting', 'underfitting', 'likelihood', 'visual quality')","('generative models', 'use', 'samples')
('generative models', 'use', 'overfitting')
('generative models', 'use', 'underfitting')
('generative models', 'use', 'likelihood')
('generative models', 'use', 'visual quality')"
20.15,0,"('generative models', 'metric', 'KL divergence', 'training', 'hidden units', 'representation', 'inference', 'AI systems')","('generative models', 'use', 'metric')
('generative models', 'use', 'training')
('generative models', 'use', 'hidden units')
('generative models', 'use', 'representation')
('generative models', 'use', 'inference')
('AI systems', 'use', 'generative models')"
3.2,0,"('probability theory', 'artificial intelligence', 'machine learning')","('probability theory', 'instance of', 'artificial intelligence')
('artificial intelligence', 'based on', 'machine learning')"
3.5,0,"('continuous random variables', 'probability density function', 'specific state', 'uniform distribution', 'univariate example', 'marginal probability distribution', 'sum rule')","('continuous random variables', 'instance of', 'probability density function')
('probability density function', 'instance of', 'specific state')
('specific state', 'instance of', 'uniform distribution')
('uniform distribution', 'instance of', 'univariate example')
('univariate example', 'instance of', 'marginal probability distribution')
('marginal probability distribution', 'instance of', 'sum rule')"
3.7,0,"('PROBABILITY AND INFORMATION THEORY', 'marginal probability', 'P(x,y)', 'P(x)', 'continuous variables', 'p(x)', 'summation', 'conditional probability', 'P(y = y x = x)', 'P(y = y,x = x)', 'P(y = y x = x)', 'P(x = x)', 'conditional probability', 'P(x= x)', 'conditional probability', 'causal modeling', 'The Chain Rule of Conditional Probabilities', 'joint probability distribution', 'conditional distributions', 'P(x(1),...,x(n))', 'P(x(1))Πn P(x(i) x(1),...,x(i 1))', 'chain rule', 'product rule of probability', 'conditional probability', 'equation 3.5')","('PROBABILITY AND INFORMATION THEORY', 'marginal probability', 'P(x,y)')
('marginal probability', 'P(x)', 'continuous variables')
('summation', 'conditional probability', 'P(y = y|x = x)')
('summation', 'conditional probability', 'P(y = y|x = x)')
('summation', 'conditional probability', 'P(x = x)')
('conditional probability', 'P(x = x)')
('conditional probability', 'P(x = x)')
('causal modeling', 'The Chain Rule of Conditional Probabilities')
('joint probability distribution', 'conditional distributions', 'P(x(1),...,x(n))')
('joint probability distribution', 'conditional distributions', 'P(x(1))Πn P(x(i)|x(1),...,x(i-1))')
('chain rule', 'product rule of probability')
('chain rule', 'product rule of probability')
('chain rule', 'conditional probability', 'equation 3.5')"
4.2,0,"('NUMERICAL COMPUTATION', 'software environments', 'exceptions', 'logarithm of zero', 'numerical error', 'overflow', 'softmax function', 'probabilities', 'multinoulli distribution', 'constant c', 'underflow', 'undefined', 'adding or subtracting a scalar', 'logsoftmax function', 'numerically stable', 'low-level libraries', 'deep learning algorithms')","('NUMERICAL COMPUTATION', 'instance of', 'software environments')
('exceptions', 'instance of', 'software environments')
('logarithm of zero', 'instance of', 'numerical error')
('numerical error', 'instance of', 'software environments')
('overflow', 'instance of', 'software environments')
('softmax function', 'instance of', 'software environments')
('probabilities', 'instance of', 'software environments')
('multinoulli distribution', 'instance of', 'software environments')
('constant c', 'instance of', 'software environments')
('underflow', 'instance of', 'software environments')
('undefined', 'instance of', 'software environments')
('adding or subtracting a scalar', 'instance of', 'software environments')
('logsoftmax function', 'instance of', 'software environments')
('numerically stable', 'instance of', 'software environments')
('low-level libraries', 'instance of', 'software environments')
('deep learning algorithms', 'instance of', 'software environments')"
16.4,0,"('structured probabilistic models for deep learning', 'deep learning', 'probabilistic models', 'sample', 'x', 'P', 'G', 'conditional distribution', 'topological sorting', 'equation 16.1', 'ancestral sampling', 'directed graphical models', 'conditional sampling operation', 'subset of variables', 'posterior distributions', 'undirected models', 'inference problems', 'marginal distribution', 'root nodes', 'Gibbs sampling', 'graphical model', 'random variables')","('structured probabilistic models for deep learning', 'instance of', 'deep learning')
('structured probabilistic models for deep learning', 'facet of', 'probabilistic models')
('sample', 'instance of', 'x')
('sample', 'subset of', 'probabilistic models')
('P', 'facet of', 'probabilistic models')
('G', 'facet of', 'probabilistic models')
('conditional distribution', 'instance of', 'probabilistic models')
('topological sorting', 'instance of', 'probabilistic models')
('topological sorting', 'use', 'equation 16.1')
('ancestral sampling', 'instance of', 'probabilistic models')
('directed graphical models', 'instance of', 'probabilistic models')
('conditional sampling operation', 'instance of', 'probabilistic models')
('subset of variables', 'instance of', 'probabilistic models')
('posterior distributions', 'instance of', 'probabilistic models')
('undirected models', 'instance of', 'probabilistic models')
('inference problems', 'instance of', 'probabilistic models')
('marginal distribution', 'instance of', 'probabilistic models')
('root nodes', 'instance of', 'graphical model')
('Gibbs sampling', 'instance of', 'probabilistic models')
('Gibbs sampling', 'use', 'graphical model')
('graphical model', 'instance of', 'probabilistic models')
('random variables', 'instance of', 'probabilistic models')"
17.4,0,"('Monte Carlo methods', 'Markov chain methods', 'equilibrium distribution', 'burning in', 'MCMC sample', 'Markov chains', 'deep learning practitioners', 'mixing time', 'matrix A', 'eigenvalues of A')","('Monte Carlo methods', 'subclass of', 'Markov chain methods')
('Markov chains', 'subclass of', 'Markov chain methods')
('MCMC sample', 'subclass of', 'Markov chain methods')
('equilibrium distribution', 'based on', 'Markov chain methods')
('burning in', 'part of', 'Markov chain methods')
('mixing time', 'facet of', 'Markov chain methods')
('matrix A', 'subject of', 'eigenvalues of A')"
1.1,0,"('deep learning', 'machine learning', 'AI systems', 'computer program', 'model', 'architecture')","('deep learning', 'subclass of', 'machine learning')
('AI systems', 'based on', 'deep learning')
('computer program', 'part of', 'AI systems')
('model', 'instance of', 'architecture')"
1.1,1,"('deep learning', 'representation learning', 'machine learning', 'AI technology')","('deep learning', 'subclass of', 'representation learning')
('AI technology', 'based on', 'deep learning')
('AI technology', 'instance of', 'machine learning')"
1.1,2,"('AI system', 'AI disciplines')","('AI system', 'instance of', 'AI disciplines')"
1.2,0,"('computer vision', 'speech and audio processing', 'natural language processing', 'robotics', 'bioinformatics and chemistry', 'video games', 'search engines', 'online advertising', 'finance', 'mathematical tools', 'machine learning concepts', 'deep learning algorithms', 'linear algebra', 'probability', 'fundamental machine learning concepts', 'programming', 'computational performance issues', 'complexity theory', 'introductory level calculus', 'graph theory')","('computer vision', 'instance of', 'deep learning algorithms')
('speech and audio processing', 'instance of', 'deep learning algorithms')
('natural language processing', 'instance of', 'deep learning algorithms')
('robotics', 'instance of', 'machine learning concepts')
('bioinformatics and chemistry', 'instance of', 'machine learning concepts')
('video games', 'instance of', 'machine learning concepts')
('search engines', 'instance of', 'machine learning concepts')
('online advertising', 'instance of', 'machine learning concepts')
('finance', 'instance of', 'machine learning concepts')
('mathematical tools', 'instance of', 'linear algebra')
('deep learning algorithms', 'instance of', 'linear algebra')
('programming', 'instance of', 'linear algebra')
('computational performance issues', 'instance of', 'complexity theory')
('complexity theory', 'instance of', 'complexity theory')
('introductory level calculus', 'instance of', 'graph theory')"
1.2,1,"('Applied Math and Machine Learning Basics', 'Probability and Information Theory', 'Linear Algebra', 'Numerical Computation Basics', 'Machine Learning', 'Deep Feedforward Networks', 'Regularization', 'Optimization', 'CNNs', 'RNNs', 'Practical Applications Methodology', 'Linear Factor Models', 'Representation Learning', 'Autoencoders', 'Structured Probabilistic Models', 'Monte Carlo Methods', 'Partition Function Inference', 'Deep Generative Models')","('Applied Math and Machine Learning Basics', 'instance of', 'Machine Learning')
('Probability and Information Theory', 'instance of', 'Machine Learning')
('Linear Algebra', 'instance of', 'Machine Learning')
('Numerical Computation Basics', 'instance of', 'Machine Learning')
('Machine Learning', 'instance of', 'Machine Learning')
('Deep Feedforward Networks', 'instance of', 'Machine Learning')
('Regularization', 'instance of', 'Machine Learning')
('Optimization', 'instance of', 'Machine Learning')
('CNNs', 'instance of', 'Machine Learning')
('RNNs', 'instance of', 'Machine Learning')
('Practical Applications Methodology', 'instance of', 'Machine Learning')
('Linear Factor Models', 'instance of', 'Machine Learning')
('Representation Learning', 'instance of', 'Machine Learning')
('Autoencoders', 'instance of', 'Machine Learning')
('Structured Probabilistic Models', 'instance of', 'Machine Learning')
('Monte Carlo Methods', 'instance of', 'Machine Learning')
('Partition Function Inference', 'instance of', 'Machine Learning')
('Deep Generative Models', 'instance of', 'Machine Learning')"
1.2,2,"('deep learning', 'cybernetics', 'connectionism', 'resurgence', 'artificial neural networks', 'learning algorithms', 'biological learning', 'brain', 'machine learning', 'neural networks', 'brain function', 'intelligent behavior', 'reverse engineer', 'computational principles', 'functionality', 'brain', 'human intelligence', 'machine learning models', 'composition', 'neurally inspired')","('deep learning', 'instance of', 'neural networks')
('cybernetics', 'instance of', 'neural networks')
('connectionism', 'instance of', 'neural networks')
('resurgence', 'instance of', 'neural networks')
('artificial neural networks', 'instance of', 'neural networks')
('learning algorithms', 'instance of', 'neural networks')
('biological learning', 'instance of', 'neural networks')
('brain', 'instance of', 'neural networks')
('machine learning', 'instance of', 'neural networks')
('neural networks', 'instance of', 'neural networks')
('brain function', 'instance of', 'neural networks')
('intelligent behavior', 'instance of', 'neural networks')
('reverse engineer', 'instance of', 'neural networks')
('computational principles', 'instance of', 'neural networks')
('functionality', 'instance of', 'neural networks')
('brain', 'instance of', 'neural networks')
('human intelligence', 'instance of', 'neural networks')
('machine learning models', 'instance of', 'neural networks')
('composition', 'instance of', 'neural networks')
('neurally inspired', 'instance of', 'neural networks')"
1.2,3,"('cybernetics', 'connectionism', 'neural networks', 'biological learning', 'perceptron', 'back-propagation', 'deep learning')","('cybernetics', 'instance of', 'neural networks')
('connectionism', 'instance of', 'neural networks')
('neural networks', 'instance of', 'neural networks')
('biological learning', 'instance of', 'neural networks')
('perceptron', 'instance of', 'neural networks')
('back-propagation', 'instance of', 'neural networks')
('deep learning', 'instance of', 'neural networks')"
1.2,4,"('linear models', 'cybernetics', 'McCulloch-Pitts Neuron', 'perceptron', 'adaptive linear element (ADALINE)', 'stochastic gradient descent', 'linear models', 'XOR function', 'biologically inspired learning', 'popularity of neural networks', 'neuroscience', 'deep learning research', 'algorithms', 'brain')","('linear models', 'instance of', 'neural networks')
('cybernetics', 'instance of', 'neural networks')
('McCulloch-Pitts Neuron', 'instance of', 'neural networks')
('perceptron', 'instance of', 'neural networks')
('adaptive linear element (ADALINE)', 'instance of', 'neural networks')
('stochastic gradient descent', 'instance of', 'neural networks')
('linear models', 'instance of', 'neural networks')
('XOR function', 'instance of', 'neural networks')
('biologically inspired learning', 'instance of', 'neural networks')
('popularity of neural networks', 'instance of', 'neural networks')
('neuroscience', 'instance of', 'neural networks')
('deep learning research', 'instance of', 'neural networks')
('algorithms', 'instance of', 'neural networks')
('brain', 'instance of', 'neural networks')"
1.2,5,"('deep learning', 'machine learning', 'mathematics', 'computer science')","('deep learning', 'part of', 'machine learning')
('deep learning', 'based on', 'mathematics')
('deep learning', 'based on', 'computer science')"
1.2,6,"('neuroscience', 'computational neuroscience', 'connectionism', 'parallel distributed processing', 'cognitive science', 'neurons', 'distributed representation')","('neuroscience', 'part of', 'cognitive science')
('computational neuroscience', 'part of', 'neuroscience')
('connectionism', 'based on', 'neurons')
('parallel distributed processing', 'based on', 'distributed representation')"
1.2,7,"('back-propagation', 'deep neural networks', 'long short-term memory', 'LSTM network', 'kernel machines', 'graphical models', 'Neural Computation and Adaptive Perception', 'Canadian Institute for Advanced Research', 'Geoffrey Hinton', 'Yoshua Bengio', 'Yann LeCun')","('back-propagation' 'part of', 'deep neural networks')
('LSTM network', 'subclass of', 'deep neural networks')
('kernel machines', 'part of', 'graphical models')
('Neural Computation and Adaptive Perception', 'instance of', 'Canadian Institute for Advanced Research')
('Geoffrey Hinton', 'instance of', 'Neural Computation and Adaptive Perception')
('Yoshua Bengio', 'instance of', 'Neural Computation and Adaptive Perception')
('Yann LeCun', 'instance of', 'Neural Computation and Adaptive Perception')"
1.2,8,"('deep belief network', 'greedy layer-wise pre-training', 'unsupervised learning', 'supervised learning', 'artificial neural networks', 'dataset sizes')","('deep belief network', 'based on', 'unsupervised learning')
('greedy layer-wise pre-training', 'based on', 'unsupervised learning')
('unsupervised learning', 'part of', 'artificial neural networks')
('supervised learning', 'part of', 'artificial neural networks')
('artificial neural networks', 'subclass of', 'Neural Computation and Adaptive Perception')
('dataset sizes', 'part of', 'artificial neural networks')"
1.2,9,"('Big Data', 'unsupervised learning', 'semi-supervised learning', 'computational resources', 'neural networks', 'model sizes')","('Big Data', 'based on', 'unsupervised learning')
('unsupervised learning', 'part of', 'neural networks')
('semi-supervised learning', 'part of', 'neural networks')
('computational resources', 'part of', 'neural networks')
('neural networks', 'subclass of', 'artificial neural networks')
('model sizes', 'part of', 'neural networks')"
1.2,10,"('MNIST CIFAR-10', 'Street View House Numbers dataset', 'ImageNet dataset', 'Sports-1M dataset', 'the Canadian Hansard', 'WMT 2014 English to French dataset')","('MNIST CIFAR-10', 'part of', 'ImageNet dataset')
('Street View House Numbers dataset', 'part of', 'ImageNet dataset')"
1.2,11,"('MNIST dataset', 'National Institute of Standards and Technology')","('MNIST dataset', 'based on', 'National Institute of Standards and Technology')"
1.2,12,"('ImageNet Large Scale Visual Recognition Challenge (ILSVRC)', 'convolutional network', 'top-5 error rate', 'speech recognition', 'pedestrian detection', 'image segmentation', 'traffic sign classification')","('ImageNet Large Scale Visual Recognition Challenge (ILSVRC)', 'instance of', 'convolutional network')
('convolutional network', 'facet of', 'top-5 error rate')
('speech recognition', 'use', 'convolutional network')
('pedestrian detection', 'use', 'convolutional network')
('image segmentation', 'use', 'convolutional network')
('traffic sign classification', 'use', 'convolutional network')"
1.2,13,"('Adaptive linear element', 'Neocognitron', 'GPU-accelerated convolutional network', 'Deep Boltzmann machine', 'Unsupervised convolutional network', 'GPU-accelerated multilayer perceptron', 'Distributed autoencoder', 'Multi-GPU convolutional network', 'COTSHPC unsupervised convolutional network', 'GoogLeNet')","('Adaptive linear element', 'subclass of', 'Neocognitron')
('GPU-accelerated convolutional network', 'subclass of', 'Neocognitron')
('Deep Boltzmann machine', 'subclass of', 'Unsupervised convolutional network')
('GPU-accelerated multilayer perceptron', 'subclass of', 'Neocognitron')
('Distributed autoencoder', 'subclass of', 'Unsupervised convolutional network')
('Multi-GPU convolutional network', 'subclass of', 'GPU-accelerated convolutional network')"
1.2,14,"('neural networks', 'sequence-to-sequence learning', 'machine translation', 'neural Turing machines', 'reinforcement learning', 'Atari video games', 'robotics', 'Theano', 'PyLearn2', 'Torch', 'DistBelief', 'Caffe', 'MXNet', 'TensorFlow')","('neural networks', 'instance of', 'sequence-to-sequence learning')
('sequence-to-sequence learning', 'use', 'machine translation')
('neural Turing machines', 'use', 'neural networks')
('reinforcement learning', 'use', 'neural networks')
('Atari video games', 'use', 'reinforcement learning')
('robotics', 'use', 'reinforcement learning')
('Theano', 'instance of', 'PyLearn2')
('Torch', 'instance of', 'PyLearn2')
('DistBelief', 'instance of', 'PyLearn2')
('Caffe', 'instance of', 'PyLearn2')
('MXNet', 'instance of', 'PyLearn2')
('TensorFlow', 'instance of', 'PyLearn2')"
1.2,15,"('neuroscientists', 'Deep learning', 'pharmaceutical companies', 'new drugs', 'subatomic particles', 'microscope images', '3-D map', 'human brain')","('neuroscientists', 'subject of', 'Deep learning')
('Deep learning', 'use', 'neuroscientists')
('pharmaceutical companies', 'subject of', 'new drugs')
('new drugs', 'use', 'pharmaceutical companies')
('subatomic particles', 'subject of', 'microscope images')
('microscope images', 'use', 'subatomic particles')
('3-D map', 'based on', 'human brain')
('human brain', 'part of', '3-D map')"
1.2,16,"('hidden units', 'artificial neural networks', 'Perceptron', 'Adaptivelinear element', 'Neocognitron', 'Earlyback-propagationnetwork', 'Recurrentneuralnetworkforspeechrecognition', 'Multilayerperceptronfor speechrecognition', 'Meanfield sigmoidbelief network', 'LeNet-5', 'Echostatenetwork', 'Deepbelief network', 'GPU-acceleratedconvolutionalnetwork', 'DeepBoltzmann machine', 'GPU-accelerateddeep belief network', 'Unsupervised convolutionalnetwork', 'GPU-acceleratedmultilayerperceptron', 'OMP-1network', 'Distributedautoencoder', 'Multi-GPUconvolutionalnetwork', 'COTSHPC unsupervised convolutionalnetwork', 'GoogLeNet')","('hidden units', 'part of', 'artificial neural networks')
('artificial neural networks', 'subclass of', 'Perceptron')
('Adaptivelinear element', 'part of', 'Neocognitron')
('Neocognitron', 'part of', 'Earlyback-propagationnetwork')
('Recurrentneuralnetworkforspeechrecognition', 'part of', 'Multilayerperceptronfor speechrecognition')
('Multilayerperceptronfor speechrecognition', 'part of', 'Meanfield sigmoidbelief network')
('Meanfield sigmoidbelief network', 'part of', 'LeNet-5')
('Echostatenetwork', 'part of', 'Deepbelief network')
('Deepbelief network', 'part of', 'GPU-acceleratedconvolutionalnetwork')
('GPU-acceleratedconvolutionalnetwork', 'part of', 'DeepBoltzmann machine')
('DeepBoltzmann machine', 'part of', 'GPU-accelerateddeep belief network')
('Unsupervised convolutionalnetwork', 'part of', 'GPU-acceleratedmultilayerperceptron')
('OMP-1network', 'part of', 'Distributedautoencoder')
('Multi-GPUconvolutionalnetwork', 'part of', 'COTSHPC unsupervised convolutionalnetwork')"
1.2,17,"('ImageNet Large Scale Visual Recognition Challenge', 'error rates', 'Russakovsky et al.', 'He et al.')","('ImageNet Large Scale Visual Recognition Challenge', 'subclass of', 'error rates')
('Russakovsky et al.', 'subject of', 'error rates')
('He et al.', 'subject of', 'error rates')"
1.2,18,"('Applied Math', 'Machine Learning Basics')","('Applied Math', 'part of', 'Machine Learning Basics')"
1.2,19,"('applied math', 'functions of many variables', 'highest and lowest points', 'quantify degrees of belief', 'machine learning', 'model', 'cost function', 'training algorithm', 'deep learning algorithms')","('functions of many variables', 'part of', 'applied math')
('highest and lowest points', 'part of', 'functions of many variables')
('quantify degrees of belief', 'part of', 'applied math')
('model', 'part of', 'machine learning')
('cost function', 'part of', 'model')
('training algorithm', 'part of', 'model')
('deep learning algorithms', 'part of', 'machine learning')"
