section,page,entity,relation
1.2,0,"('notation', 'mathematical concepts', 'numbers', 'arrays', 'scalar', 'integer', 'real', 'vector', 'matrix', 'tensor', 'identity matrix', 'rows', 'columns', 'dimensionality', 'context', 'standard basis vector', 'position', 'square', 'diagonal matrix', 'diagonal entries', 'random variable', 'vector-valued random variable', 'matrix-valued random variable')","('notation', 'instance of', 'mathematical concepts')"
1.2,1,"('sets', 'graphs', 'set of real numbers', 'integers', 'real interval', 'set subtraction', 'graph indexing', 'element of vector', 'matrix element', 'row of matrix', 'column of matrix', 'tensor element', '2-D slice of tensor', 'transpose of matrix', 'pseudoinverse of matrix', 'element-wise product', 'determinant')","('sets', 'instance of', 'graphs')
('set of real numbers', 'instance of', 'sets')
('integers', 'instance of', 'sets')
('real interval', 'instance of', 'sets')
('set subtraction', 'instance of', 'sets')
('graph indexing', 'instance of', 'graphs')
('element of vector', 'instance of', 'sets')
('matrix element', 'instance of', 'sets')
('row of matrix', 'instance of', 'sets')
('column of matrix', 'instance of', 'sets')
('tensor element', 'instance of', 'sets')
('2-D slice of tensor', 'instance of', 'sets')
('transpose of matrix', 'instance of', 'sets')
('pseudoinverse of matrix', 'instance of', 'sets')
('element-wise product', 'instance of', 'sets')
('determinant', 'instance of', 'sets')"
1.2,2,"('derivative', 'partial derivative', 'gradient', 'matrix derivatives', 'tensor derivatives', 'Jacobian matrix', 'Hessian matrix', 'definite integral', 'probability distribution', 'independent random variables', 'conditional independence', 'probability', 'expectation', 'variance', 'covariance', 'entropy', 'Kullback-Leibler divergence', 'Gaussian distribution')","('derivative', 'instance of', 'partial derivative')
('gradient', 'instance of', 'derivative')
('matrix derivatives', 'instance of', 'derivative')
('tensor derivatives', 'instance of', 'derivative')
('Jacobian matrix', 'instance of', 'matrix derivatives')
('Hessian matrix', 'instance of', 'matrix derivatives')
('definite integral', 'instance of', 'derivative')
('probability distribution', 'instance of', 'derivative')
('independent random variables', 'instance of', 'derivative')
('conditional independence', 'instance of', 'derivative')
('probability', 'instance of', 'derivative')
('expectation', 'instance of', 'derivative')
('variance', 'instance of', 'derivative')
('covariance', 'instance of', 'derivative')
('entropy', 'instance of', 'derivative')
('Kullback-Leibler divergence', 'instance of', 'derivative')
('Gaussian distribution', 'instance of', 'density function')"
1.2,3,"('function', 'composition of functions', 'natural logarithm', 'logistic sigmoid', 'softplus', 'Lp norm', 'L2 norm', 'positive part', 'condition', 'scalar function applied element-wise', 'data generating distribution', 'empirical distribution', 'training data set', 'training example', 'target variable', 'input matrix')","('function', 'instance of', 'composition of functions')
('natural logarithm', 'instance of', 'function')
('logistic sigmoid', 'instance of', 'function')
('softplus', 'instance of', 'function')
('Lp norm', 'instance of', 'function')
('L2 norm', 'instance of', 'function')
('positive part', 'instance of', 'function')
('condition', 'instance of', 'function')
('scalar function applied element-wise', 'instance of', 'function')
('data generating distribution', 'instance of', 'function')
('empirical distribution', 'instance of', 'function')
('training data set', 'instance of', 'data generating distribution')
('training example', 'instance of', 'data generating distribution')
('target variable', 'instance of', 'training data set')
('input matrix', 'instance of', 'training data set')"
1.2,4,"('inventors', 'machines that think', 'ancient Greece', 'mythical figures', 'artificial life', 'programmable computers', 'artificial intelligence', 'intelligent software', 'automate routine labor', 'understand speech', 'make diagnoses in medicine', 'basic scientific research', 'intellectually difficult problems', 'formal mathematical rules', 'intuitive problems', 'learning from experience', 'hierarchy of concepts', 'gathering knowledge', 'avoiding human operators', 'building complicated concepts', 'graph')","('inventors', 'instance of', 'machines that think')
('ancient Greece', 'instance of', 'machines that think')
('mythical figures', 'instance of', 'machines that think')
('artificial life', 'instance of', 'machines that think')
('programmable computers', 'instance of', 'machines that think')
('artificial intelligence', 'instance of', 'machines that think')
('intelligent software', 'instance of', 'machines that think')
('automate routine labor', 'instance of', 'machines that think')
('understand speech', 'instance of', 'machines that think')
('make diagnoses in medicine', 'instance of', 'machines that think')
('basic scientific research', 'instance of', 'machines that think')
('intellectually difficult problems', 'instance of', 'machines that think')
('formal mathematical rules', 'instance of', 'machines that think')
('intuitive problems', 'instance of', 'machines that think')
('learning from experience', 'instance of', 'machines that think')
('hierarchy of concepts', 'instance of', 'machines that think')
('gathering knowledge', 'instance of', 'machines that think')
('avoiding human operators', 'instance of', 'machines that think')
('building complicated concepts', 'instance of', 'machines that think')
('graph', 'instance of', 'machines that think')"
1.2,5,"('deep learning', 'AI successes in sterile environments', 'knowledge about the world', 'Deep Blue chess-playing system', 'chess as a simple world', 'formal rules of chess', 'limitations of hard-coded knowledge', 'knowledge base approach', 'projects like Cyc', 'inference engine', 'CycL language', 'struggles with complexity', 'limitations of hard-coded rules', 'machine learning')","('deep learning', 'instance of', 'AI successes in sterile environments')
('knowledge about the world', 'instance of', 'AI successes in sterile environments')
('Deep Blue chess-playing system', 'instance of', 'AI successes in sterile environments')
('chess as a simple world', 'instance of', 'AI successes in sterile environments')
('formal rules of chess', 'instance of', 'AI successes in sterile environments')
('limitations of hard-coded knowledge', 'instance of', 'AI successes in sterile environments')
('knowledge base approach', 'instance of', 'AI successes in sterile environments')
('projects like Cyc', 'instance of', 'AI successes in sterile environments')
('inference engine', 'instance of', 'AI successes in sterile environments')
('CycL language', 'instance of', 'AI successes in sterile environments')
('struggles with complexity', 'instance of', 'AI successes in sterile environments')
('limitations of hard-coded rules', 'instance of', 'AI successes in sterile environments')
('machine learning', 'instance of', 'AI successes in sterile environments')"
1.2,6,"('machine learning', 'logistic regression', 'cesarean delivery recommendation', 'naive Bayes', 'importance of data representation', 'features', 'correlation between features and outcomes', 'dependence on representation', 'effect of representation on performance', 'choice of representation', 'importance of feature extraction', 'difficulties in determining features', 'example of car detection in photographs')","('machine learning', 'instance of', 'logistic regression')
('cesarean delivery recommendation', 'instance of', 'machine learning')
('naive Bayes', 'instance of', 'machine learning')
('importance of data representation', 'instance of', 'machine learning')
('features', 'instance of', 'importance of data representation')
('correlation between features and outcomes', 'instance of', 'importance of data representation')
('dependence on representation', 'instance of', 'importance of data representation')
('effect of representation on performance', 'instance of', 'importance of data representation')
('choice of representation', 'instance of', 'importance of data representation')
('importance of feature extraction', 'instance of', 'importance of data representation')
('difficulties in determining features', 'instance of', 'importance of data representation')
('example of car detection in photographs', 'instance of', 'importance of data representation')"
1.2,7,"The caption describes an example of different representations in a scatterplot. The plot on the left uses Cartesian coordinates and the task of separating the data into two categories is impossible. However, in the plot on the right, the data is represented using polar coordinates and the task becomes simple with a vertical line. The figure illustrates the importance of choosing the right representation for a given task.","I'm sorry, but I am unable to process and analyze images or visual information. My capabilities are limited to text-based tasks. Is there anything else I can assist you with?"
1.2,8,"('factors of variation', 'unobserved objects/forces', 'constructs in the human mind', 'disentangling factors of variation', 'difficulties in extracting high-level features', 'representation learning', 'deep learning', 'building complex concepts', 'feedforward deep network', 'multilayer perceptron', 'learning the right representation', 'learning a multi-step computer program')","('factors of variation', 'instance of', 'unobserved objects/forces')
('constructs in the human mind', 'instance of', 'unobserved objects/forces')
('disentangling factors of variation', 'instance of', 'unobserved objects/forces')
('difficulties in extracting high-level features', 'instance of', 'unobserved objects/forces')
('representation learning', 'instance of', 'unobserved objects/forces')
('deep learning', 'instance of', 'unobserved objects/forces')
('building complex concepts', 'instance of', 'unobserved objects/forces')
('feedforward deep network', 'instance of', 'unobserved objects/forces')
('multilayer perceptron', 'instance of', 'unobserved objects/forces')
('learning the right representation', 'instance of', 'unobserved objects/forces')
('learning a multi-step computer program', 'instance of', 'unobserved objects/forces')"
1.2,9,"The figure illustrates a deep learning model, showing the different layers involved in the process. At the visible layer, we have the input pixels, which represent the raw sensory input data. From there, the model goes through a series of hidden layers. The first hidden layer detects edges by comparing the brightness of neighboring pixels. The second hidden layer searches for corners and extended contours, which are recognizable as collections of edges. The third hidden layer detects entire parts of specific objects by finding specific collections of contours and corners. The final output layer represents the object identity. Each layer is responsible for extracting increasingly abstract features from the image. This illustrates how deep learning breaks down the complicated mapping from input to output into a series of simpler mappings.","Thank you for providing the detailed description of the figure. Unfortunately, as I mentioned earlier, I am unable to process or analyze visual information. My capabilities are limited to text-based tasks. Is there anything else I can assist you with?"
1.2,10,"('deep learning', 'computational graphs', 'logistic regression', 'logistic sigmoid function', 'layer', 'activations', 'factors of variation', 'input', 'state information', 'counter', 'pointer', 'architecture', 'flow chart', 'model', 'computer program', 'deep probabilistic models', 'concepts')","('deep learning', 'instance of', 'computational graphs')
('logistic regression', 'instance of', 'computer program')
('logistic sigmoid function', 'instance of', 'activation')
('layer', 'part of', 'deep learning')
('activations', 'part of', 'layer')
('factors of variation', 'part of', 'deep learning')
('input', 'part of', 'layer')
('state information', 'part of', 'layer')
('counter', 'part of', 'layer')
('pointer', 'part of', 'layer')
('architecture', 'part of', 'deep learning')
('flow chart', 'part of', 'architecture')
('model', 'part of', 'deep learning')
('deep probabilistic models', 'instance of', 'model')
('concepts', 'part of', 'deep learning')"
2.1,0,"('neuroscience', 'deep learning', 'computational neuroscience', 'connectionism', 'cognitive science', 'neurons', 'distributed representation', 'vision system')","('deep learning', 'subclass of', 'neural networks')
('computational neuroscience', 'subclass of', 'neuroscience')
('connectionism', 'subclass of', 'neuroscience')
('neurons', 'part of', 'neuroscience')"
2.1,1,"('back-propagation algorithm', 'deep neural networks', 'long short-term memory (LSTM) network', 'neural networks research', 'Kernel machines', 'graphical models', 'Neural Computation and Adaptive Perception (NCAP)', 'deep networks')","('back-propagation algorithm', 'instance of', 'neural networks')
('deep neural networks', 'subclass of', 'neural networks')
('long short-term memory (LSTM) network', 'instance of', 'neural networks')
('Kernel machines', 'subclass of', 'machine learning')
('graphical models', 'subclass of', 'probabilistic models')
('Neural Computation and Adaptive Perception (NCAP)', 'instance of', 'neural networks')
('deep networks', 'subclass of', 'neural networks')"
2.1,2,"('deep belief network', 'greedy layer-wise pre-training', 'deep learning', 'unsupervised learning techniques', 'supervised learning algorithms', 'artificial neural networks', 'commercial applications', 'benchmark datasets')","('deep belief network', 'subclass of', 'neural networks')
('greedy layer-wise pre-training', 'instance of', 'unsupervised learning techniques')
('deep learning', 'subclass of', 'neural networks')
('unsupervised learning techniques', 'subclass of', 'machine learning')
('supervised learning algorithms', 'subclass of', 'machine learning')
('artificial neural networks', 'subclass of', 'neural networks')
('commercial applications', 'use', 'artificial neural networks')
('benchmark datasets', 'instance of', 'datasets')"
2.2,0,"('machine learning', 'Big Data', 'supervised deep learning', 'unsupervised learning', 'semi-supervised learning', 'neural networks', 'connectionism', 'artificial neural networks', 'hidden units', 'biological neurons', 'artificial intelligence problems', 'nervous system', 'computational systems', 'CPUs')","('machine learning', 'instance of', 'supervised deep learning')
('machine learning', 'instance of', 'unsupervised learning')
('machine learning', 'instance of', 'semi-supervised learning')
('neural networks', 'based on', 'connectionism')
('neural networks', 'instance of', 'artificial neural networks')
('biological neurons', 'part of', 'nervous system')
('artificial neural networks', 'part of', 'computational systems')"
2.2,1,"('MNIST dataset', 'CIFAR-10 dataset', 'Street View House Numbers dataset', 'ImageNet dataset', 'Sports-1M dataset', 'Canadian Hansard dataset', 'WMT 2014 English to French dataset')","('MNIST dataset', 'instance of', 'image classification dataset')
('CIFAR-10 dataset', 'instance of', 'image classification dataset')
('Street View House Numbers dataset', 'instance of', 'image classification dataset')
('ImageNet dataset', 'instance of', 'image classification dataset')
('Sports-1M dataset', 'instance of', 'video classification dataset')
('Canadian Hansard dataset', 'instance of', 'text classification dataset')
('WMT 2014 English to French dataset', 'instance of', 'machine translation dataset')"
2.3,0,"('MNIST dataset', 'National Institute of Standards and Technology', 'machine learning algorithms', 'handwritten digits', 'classification problem', 'deep learning research', 'techniques', 'Geoffrey Hinton', 'drosophila')","('MNIST dataset', 'instance of', 'classification problem')
('machine learning algorithms', 'use', 'MNIST dataset')
('handwritten digits', 'part of', 'MNIST dataset')
('classification problem', 'use', 'machine learning algorithms')
('deep learning research', 'facet of', 'machine learning algorithms')
('techniques', 'part of', 'machine learning algorithms')
('Geoffrey Hinton', 'instance of', 'deep learning research')"
2.4,0,"('deep learning', 'general purpose GPUs', 'network connectivity', 'software infrastructure', 'distributed computing', 'history of deep learning', 'accuracy', 'complexity', 'real-world impact', 'deep models', 'individual objects', 'neural networks', 'object recognition', 'categories of objects', 'ImageNet Large Scale Visual Recognition Challenge', 'top-5 error rate', 'convolutional network', 'speech recognition', 'error rates', 'pedestrian detection', 'image segmentation', 'traffic sign classification')","('deep learning', 'instance of', 'general purpose GPUs')
('deep learning', 'instance of', 'network connectivity')
('deep learning', 'instance of', 'software infrastructure')
('deep learning', 'instance of', 'distributed computing')
('deep learning', 'instance of', 'history of deep learning')
('deep learning', 'instance of', 'accuracy')
('deep learning', 'instance of', 'complexity')
('deep learning', 'instance of', 'real-world impact')
('deep learning', 'instance of', 'deep models')
('deep learning', 'instance of', 'individual objects')
('deep learning', 'instance of', 'neural networks')
('deep learning', 'instance of', 'object recognition')
('deep learning', 'instance of', 'categories of objects')
('deep learning', 'instance of', 'ImageNet Large Scale Visual Recognition Challenge')
('deep learning', 'instance of', 'top-5 error rate')
('deep learning', 'instance of', 'convolutional network')
('deep learning', 'instance of', 'speech recognition')
('deep learning', 'instance of', 'error rates')
('deep learning', 'instance of', 'pedestrian detection')
('deep learning', 'instance of', 'image segmentation')
('deep learning', 'instance of', 'traffic sign classification')"
2.4,1,"('artificial neural networks', 'cat', 'neurons', 'design consideration', 'smaller mammals', 'human brain', 'biological neural network', 'Adaptivelinear element', 'Neocognitron', 'GPU-accelerated convolutional network', 'DeepBoltzmann machine', 'Unsupervised convolutional network', 'GPU-accelerated multilayer perceptron', 'Distributed autoencoder', 'Multi-GPU convolutional network', 'COTSHPC unsupervised convolutional network', 'GoogLeNet')","('artificial neural networks', 'instance of', 'cat')
('artificial neural networks', 'instance of', 'neurons')
('artificial neural networks', 'instance of', 'design consideration')
('artificial neural networks', 'instance of', 'smaller mammals')
('artificial neural networks', 'subclass of', 'human brain')
('artificial neural networks', 'subclass of', 'biological neural network')
('artificial neural networks', 'subclass of', 'Adaptivelinear element')
('artificial neural networks', 'subclass of', 'Neocognitron')
('artificial neural networks', 'subclass of', 'GPU-accelerated convolutional network')
('artificial neural networks', 'subclass of', 'DeepBoltzmann machine')
('artificial neural networks', 'subclass of', 'Unsupervised convolutional network')
('artificial neural networks', 'subclass of', 'GPU-accelerated multilayer perceptron')
('artificial neural networks', 'subclass of', 'Distributed autoencoder')
('artificial neural networks', 'subclass of', 'Multi-GPU convolutional network')
('artificial neural networks', 'subclass of', 'COTSHPC unsupervised convolutional network')
('artificial neural networks', 'subclass of', 'GoogLeNet')"
2.5,0,"('deep learning', 'machine learning', 'neural networks', 'sequence-to-sequence learning', 'LSTM', 'machine translation', 'neural Turing machines', 'reinforcement learning', 'Theano', 'PyLearn2', 'Torch', 'DistBelief', 'Caffe', 'MXNet', 'TensorFlow', 'convolutional networks', 'object recognition', 'visual processing')","('deep learning', 'instance of', 'machine learning')
('LSTM', 'instance of', 'neural networks')
('sequence-to-sequence learning', 'instance of', 'neural networks')
('machine translation', 'instance of', 'neural networks')
('neural Turing machines', 'instance of', 'neural networks')
('Theano', 'instance of', 'machine learning')
('PyLearn2', 'instance of', 'machine learning')
('Torch', 'instance of', 'machine learning')
('DistBelief', 'instance of', 'machine learning')
('Caffe', 'instance of', 'machine learning')
('MXNet', 'instance of', 'machine learning')
('TensorFlow', 'instance of', 'machine learning')
('convolutional networks', 'instance of', 'neural networks')
('object recognition', 'instance of', 'visual processing')"
2.6,0,"('neuroscientists', 'Deep learning', 'pharmaceutical companies', 'new drugs', 'subatomic particles', 'microscope images', '3-D map', 'human brain', 'machine learning', 'human brain', 'statistics', 'applied math')","('Deep learning', 'part of', 'neuroscientists')"
2.6,1,"('hidden units', 'artificial neural networks', 'Perceptron', 'Adaptive linear element', 'Neocognitron', 'Early back-propagation network', 'Recurrent neural network for speech recognition', 'Multilayer perceptron for speech recognition', 'Mean field sigmoid belief network', 'LeNet-5', 'Echo state network', 'Deep belief network', 'GPU-accelerated convolutional network', 'Deep Boltzmann machine', 'GPU-accelerated deep belief network', 'Unsupervised convolutional network', 'GPU-accelerated multilayer perceptron', 'OMP-1 network', 'Distributed autoencoder', 'Multi-GPU convolutional network', 'COTSHPC unsupervised convolutional network', 'GoogLeNet')","('artificial neural networks', 'subclass of', 'Perceptron')
('artificial neural networks', 'subclass of', 'Adaptive linear element')
('artificial neural networks', 'subclass of', 'Neocognitron')
('artificial neural networks', 'subclass of', 'Early back-propagation network')
('artificial neural networks', 'subclass of', 'Recurrent neural network for speech recognition')
('artificial neural networks', 'subclass of', 'Multilayer perceptron for speech recognition')
('artificial neural networks', 'subclass of', 'Mean field sigmoid belief network')
('artificial neural networks', 'subclass of', 'LeNet-5')
('artificial neural networks', 'subclass of', 'Echo state network')
('artificial neural networks', 'subclass of', 'Deep belief network')
('artificial neural networks', 'subclass of', 'GPU-accelerated convolutional network')
('artificial neural networks', 'subclass of', 'Deep Boltzmann machine')
('artificial neural networks', 'subclass of', 'GPU-accelerated deep belief network')
('artificial neural networks', 'subclass of', 'Unsupervised convolutional network')
('artificial neural networks', 'subclass of', 'GPU-accelerated multilayer perceptron')
('artificial neural networks', 'subclass of', 'OMP-1 network')
('artificial neural networks', 'subclass of', 'Distributed autoencoder')
('artificial neural networks', 'subclass of', 'Multi-GPU convolutional network')
('artificial neural networks', 'subclass of', 'COTSHPC unsupervised convolutional network')
('artificial neural networks', 'subclass of', 'GoogLeNet')"
2.7,0,"('deep networks', 'ImageNet Large Scale Visual Recognition Challenge')","('deep networks', 'instance of', 'ImageNet Large Scale Visual Recognition Challenge')"
2.7,1,"('Applied Math', 'Machine Learning Basics')","('Applied Math', 'part of', 'Machine Learning Basics')"
2.8,0,"('mathematical concepts', 'deep learning', 'applied math', 'functions of many variables', 'highest and lowest points', 'degrees of belief', 'machine learning', 'model', 'cost function', 'training algorithm', 'deep learning algorithms')","('deep learning', 'instance of', 'machine learning')
('functions of many variables', 'part of', 'applied math')
('model', ' instance of', 'deep learning')
('cost function', 'part of', 'model')
('training algorithm', 'part of', 'model')
('deep learning algorithms', 'part of', 'model')"
2.9,0,"('linear algebra', 'mathematics', 'science', 'engineering', 'computer scientists', 'machine learning algorithms', 'deep learning algorithms', 'linear algebra prerequisites', 'formulas', 'resource', 'teaching linear algebra', 'important linear algebra topics')","('linear algebra', 'instance of', 'mathematics')
('mathematics', 'instance of', 'science')
('science', 'instance of', 'engineering')
('computer scientists', 'subject of', 'engineering')
('machine learning algorithms', 'subject of', 'engineering')
('deep learning algorithms', 'subject of', 'engineering')
('linear algebra prerequisites', 'based on', 'linear algebra')
('formulas', 'based on', 'linear algebra')
('resource', 'based on', 'linear algebra')
('teaching linear algebra', 'based on', 'linear algebra')
('important linear algebra topics', 'based on', 'linear algebra')"
2.10,0,"('Linear Algebra', 'real-valued scalar', 'natural number scalar', 'vector', 'R', 'Cartesian product', 'Rn', 'column', 'points in space', 'indices', 'set', 'complement', 'Matrices', '2-D array', 'real-valued matrix', 'height', 'width', 'horizontal coordinate', 'vertical coordinate', 'i-th row')","('Linear Algebra', 'instance of', 'Mathematics')
('real-valued scalar', 'instance of', 'scalar')
('natural number scalar', 'subclass of', 'scalar')
('vector', 'instance of', 'Mathematics')
('R', 'instance of', 'Real numbers')
('Cartesian product', 'instance of', 'set theory')
('Rn', 'instance of', 'set')
('column', 'instance of', 'vector')
('points in space', 'instance of', 'geometry')
('indices', 'instance of', 'Mathematics')
('set', 'instance of', 'Mathematics')
('complement', 'instance of', 'set theory')
('Matrices', 'instance of', 'Mathematics')
('2-D array', 'subclass of', 'Matrices')
('real-valued matrix', 'subclass of', 'Matrices')
('height', 'instance of', 'Mathematics')
('width', 'instance of', 'Mathematics')
('horizontal coordinate', 'instance of', 'geometry')
('vertical coordinate', 'instance of', 'geometry')
('i-th row', 'instance of', 'Mathematics')"
2.11,0,"('Linear Algebra', 'transpose', 'matrix', 'main diagonal', 'array', 'coordinates', 'tensor', 'operation', 'vector')","('Linear Algebra', 'transpose', 'matrix')
('matrix', 'main diagonal', 'array')
('array', 'coordinates', 'tensor')
('tensor', 'operation', 'vector')"
2.12,0,"('Linear Algebra', 'vector', 'transpose operator', 'standard column vector', 'scalar', 'matrix', 'single entry', 'transpose', 'add matrices', 'same shape', 'corresponding elements', 'add a scalar', 'multiply a matrix', 'performing that operation o...implicit copying', 'broadcasting', 'Multiplying Matrices', 'matrix product', 'third matrix', 'product is defined', 'number of columns', 'number of rows', 'shape', 'matrix product', 'individual elements', 'element-wise product', 'Hadamard product', 'dot product')","('Linear Algebra', 'part of', 'vector')
('transpose operator', 'instance of', 'standard column vector')
('scalar', 'instance of', 'matrix')
('single entry', 'part of', 'matrix')
('transpose', 'instance of', 'add matrices')
('same shape', 'part of', 'corresponding elements')
('add a scalar', 'part of', 'multiply a matrix')
('performing that operation on all elements', 'part of', 'broadcasting')
('Multiplying Matrices', 'part of', 'matrix product')
('third matrix', 'part of', 'product is defined')
('number of columns', 'part of', 'shape')
('number of rows', 'part of', 'shape')
('matrix product', 'instance of', 'individual elements')
('element-wise product', 'instance of', 'Hadamard product')
('dot product', 'instance of', 'matrix product')"
2.12,1,"('linear algebra', 'matrix product operations', 'mathematical analysis', 'matrix multiplication', 'distributive', 'associative', 'commutative', 'dot product', 'transpose of a matrix product', 'linear equations', 'known matrix', 'known vector', 'unknown variables', 'constraint')","('linear algebra', 'part of', 'matrix product operations')
('matrix multiplication', 'instance of', 'mathematical analysis')
('distributive', 'part of', 'matrix multiplication')
('associative', 'part of', 'matrix multiplication')
('commutative', 'part of', 'matrix multiplication')
('dot product', 'part of', 'matrix multiplication')
('transpose of a matrix product', 'part of', 'matrix multiplication')
('linear equations', 'part of', 'matrix multiplication')
('known matrix', 'part of', 'linear equations')
('known vector', 'part of', 'linear equations')
('unknown variables', 'part of', 'linear equations')
('constraint', 'part of', 'linear equations')"
2.12,2,"('identity matrix', 'matrix inversion', 'matrix-vector product notation', 'inverse matrices', 'identity matrix', 'matrix inverse')","('identity matrix', 'part of', 'matrix inversion')
('matrix-vector product notation', 'part of', 'matrix inversion')
('inverse matrices', 'part of', 'matrix inversion')
('identity matrix', 'instance of', 'matrix inverse')
('matrix inverse', 'instance of', 'matrix inversion')"
2.12,3,"('linear combination', 'span')","('linear combination', 'part of', 'span')
('span', 'instance of', 'linear combination')"
2.12,4,"('column space', 'range of A', 'linear dependence', 'linearly independent', 'redundancy', 'linear combination', 'span', 'singular matrix')","('column space', 'part of', 'range of A')
('linear dependence', 'part of', 'column space')
('linearly independent', 'part of', 'column space')
('redundancy', 'part of', 'column space')
('linear combination', 'instance of', 'span')
('span', 'instance of', 'column space')
('singular matrix', 'part of', 'column space')"
2.12,5,"('Linear Algebra', 'matrix inverses', 'size of a vector', 'machine learning', 'norms', 'Lp norm', 'Euclidean norm', 'squared L2 norm')","('matrix inverses', 'subclass of', 'Linear Algebra')
('size of a vector', 'based on', 'Linear Algebra')
('Lp norm', 'subclass of', 'norms')
('Euclidean norm', 'subclass of', 'norms')
('squared L2 norm', 'subclass of', 'norms')"
3.1,0,"('Linear Algebra', 'L1 norm', 'L0 norm', 'L norm', 'max norm', 'matrix', 'Frobenius norm', 'dot product', 'vectors', 'Diagonal matrices')","('Linear Algebra', 'subclass of', 'mathematics')
('L1 norm', 'subclass of', 'norm')
('L0 norm', 'subclass of', 'norm')
('L norm', 'subclass of', 'norm')
('max norm', 'subclass of', 'norm')
('matrix', 'subclass of', 'mathematics')
('Frobenius norm', 'subclass of', 'norm')
('dot product', 'use', 'vectors')
('vectors', 'subclass of', 'mathematics')
('Diagonal matrices', 'subclass of', 'matrix')"
3.1,1,"('Linear Algebra', 'diagonal matrix', 'identity matrix', 'computationally efficient', 'inverse', 'machine learning algorithm', 'arbitrary matrices', 'symmetric matrix', 'unit vector', 'orthogonal vectors', 'orthonormal', 'orthogonal matrix')","('Linear Algebra', 'subclass of', 'mathematics')
('diagonal matrix', 'subclass of', 'matrix')
('identity matrix', 'subclass of', 'diagonal matrix')
('computationally efficient', 'subclass of', 'property')
('inverse', 'subclass of', 'property')
('machine learning algorithm', 'subclass of', 'algorithm')
('arbitrary matrices', 'subclass of', 'matrix')
('symmetric matrix', 'subclass of', 'matrix')
('unit vector', 'subclass of', 'vector')
('orthogonal vectors', 'subclass of', 'vector')
('orthonormal', 'subclass of', 'property')
('orthogonal matrix', 'subclass of', 'matrix')"
3.3,0,"('Linear Algebra', 'orthogonal matrices', 'eigendecomposition', 'mathematical objects', 'constituent parts', 'prime factors', 'integers', 'matrix decomposition', 'eigenvectors', 'eigenvalues')","('orthogonal matrices', 'instance of', 'Linear Algebra')
('eigendecomposition', 'instance of', 'Linear Algebra')
('mathematical objects', 'based on', 'Linear Algebra')
('constituent parts', 'part of', 'mathematical objects')
('prime factors', 'based on', 'integers')
('matrix decomposition', 'based on', 'Linear Algebra')
('eigenvectors', 'based on', 'eigendecomposition')
('eigenvalues', 'based on', 'eigendecomposition')"
3.3,1,"('Linear Algebra', 'eigenvectors', 'eigenvalues', 'orthonormal eigenvectors', 'eigendecomposition', 'matrix decomposition', 'unit circle', 'matrix A', 'matrix V', 'vector λ', 'integer')","('eigenvectors', 'based on', 'Linear Algebra')
('eigenvalues', 'based on', 'Linear Algebra')
('orthonormal eigenvectors', 'facet of', 'eigenvectors')
('eigendecomposition', 'based on', 'Linear Algebra')
('matrix decomposition', 'based on', 'Linear Algebra')
('unit circle', 'instance of', 'Linear Algebra')
('matrix A', 'instance of', 'Linear Algebra')
('matrix V', 'instance of', 'Linear Algebra')
('vector λ', 'instance of', 'Linear Algebra')
('integer', 'subclass of', 'Linear Algebra')"
3.4,0,"('Linear Algebra', 'eigenvectors', 'eigenvalues', 'orthogonal matrix', 'diagonal matrix', 'eigendecomposition', 'quadratic expressions', 'positive definite', 'positive semidefinite', 'negative definite', 'negative semidefinite', 'Singular Value Decomposition', 'singular vectors', 'singular values')","('Linear Algebra', 'instance of', 'eigenvectors')
('Linear Algebra', 'instance of', 'eigenvalues')
('Linear Algebra', 'instance of', 'orthogonal matrix')
('Linear Algebra', 'instance of', 'diagonal matrix')
('Linear Algebra', 'instance of', 'eigendecomposition')
('Linear Algebra', 'instance of', 'quadratic expressions')
('Linear Algebra', 'instance of', 'positive definite')
('Linear Algebra', 'instance of', 'positive semidefinite')
('Linear Algebra', 'instance of', 'negative definite')
('Linear Algebra', 'instance of', 'negative semidefinite')
('Linear Algebra', 'instance of', 'Singular Value Decomposition')
('Linear Algebra', 'instance of', 'singular vectors')
('Linear Algebra', 'instance of', 'singular values')"
3.6,0,"('Linear Algebra', 'SVD', 'eigenvalue decomposition', 'matrix', 'singular value decomposition', 'eigendecomposition', 'matrix A', 'matrix V', 'eigenvectors', 'eigenvalues', 'matrix U', 'matrix D', 'diagonal matrix', 'singular values', 'left-singular vectors', 'right-singular vectors', 'non-zero singular values', 'Moore-Penrose Pseudoinverse', 'matrix inversion', 'left-inverse', 'linear equation')","('Linear Algebra', 'instance of', 'mathematical discipline')
('SVD', 'instance of', 'singular value decomposition')
('eigenvalue decomposition', 'instance of', 'matrix decomposition')
('matrix', 'instance of', 'mathematical object')
('singular value decomposition', 'instance of', 'matrix decomposition')
('eigendecomposition', 'instance of', 'matrix decomposition')
('matrix A', 'instance of', 'matrix')
('matrix V', 'instance of', 'matrix')
('eigenvectors', 'instance of', 'vector')
('eigenvalues', 'instance of', 'scalar')
('matrix U', 'instance of', 'matrix')
('matrix D', 'instance of', 'matrix')
('diagonal matrix', 'instance of', 'matrix')
('singular values', 'instance of', 'scalar')
('left-singular vectors', 'instance of', 'vector')
('right-singular vectors', 'instance of', 'vector')
('non-zero singular values', 'instance of', 'scalar')
('Moore-Penrose Pseudoinverse', 'instance of', 'matrix')
('matrix inversion', 'instance of', 'matrix operation')
('left-inverse', 'instance of', 'matrix operation')
('linear equation', 'instance of', 'mathematical equation')"
3.8,0,"('linear algebra', 'mapping', 'Moore-Penrose pseudoinverse', 'matrix', 'algorithms', 'computation', 'singular value decomposition', 'diagonal matrix', 'Euclidean norm', 'linear equation', 'Trace Operator')","('linear algebra', 'instance of', 'matrix')
('mapping', 'instance of', 'algorithms')
('Moore-Penrose pseudoinverse', 'instance of', 'matrix')
('matrix', 'based on', 'linear algebra')
('algorithms', 'instance of', 'computation')
('computation', 'instance of', 'algorithms')
('singular value decomposition', 'instance of', 'matrix')
('diagonal matrix', 'instance of', 'matrix')
('Euclidean norm', 'instance of', 'matrix')
('linear equation', 'instance of', 'matrix')
('Trace Operator', 'instance of', 'matrix')"
3.8,1,"('matrix products', 'trace operator', 'Frobenius norm', 'transpose operator', 'square matrix', 'factors', 'cyclic permutation', 'determinant', 'eigenvalues', 'volume')","('matrix products', 'instance of', 'matrix')
('trace operator', 'instance of', 'matrix')
('Frobenius norm', 'instance of', 'matrix')
('transpose operator', 'instance of', 'matrix')
('square matrix', 'instance of', 'matrix')
('factors', 'instance of', 'matrix')
('cyclic permutation', 'instance of', 'matrix')
('determinant', 'instance of', 'matrix')
('eigenvalues', 'instance of', 'matrix')
('volume', 'instance of', 'matrix')"
3.9,0,"('principal components analysis', 'PCA', 'linear algebra')","('principal components analysis', 'instance of', 'linear algebra')"
3.9,1,"('linear algebra', 'L2 norm', 'vector calculus')","('linear algebra', 'part of', 'vector calculus')"
3.9,2,"('linear algebra', 'matrix-vector operation', 'PCA reconstruction', 'Frobenius norm')","('linear algebra', 'use', 'PCA reconstruction')
('linear algebra', 'use', 'Frobenius norm')"
3.9,3,"('design matrix', 'Frobenius norm', 'argmin', 'constraint')","('design matrix', 'subject of', 'argmin')
('design matrix', 'subject of', 'constraint')"
3.9,4,"('eigendecomposition', 'principal component', 'linear algebra', 'probability theory')","('eigendecomposition', 'based on', 'linear algebra')
('principal component', 'facet of', 'eigendecomposition')
('principal component', 'facet of', 'probability theory')"
3.10,0,"('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('probability theory', 'information theory') ('software engineering', 'probability theory') ('probability theory', 'information theory') ('probabilistic models', 'machine learning')","('probability theory', 'instance of', 'information theory')
('probability theory', 'based on', 'information theory')
('probability theory', 'facet of', 'information theory')
('probability theory', 'part of', 'information theory')
('probability theory', 'subject of', 'information theory')
('probability theory', 'subclass of', 'information theory')
('probability theory', 'use', 'information theory')
('probability theory', 'instance of', 'software engineering')
('software engineering', 'based on', 'probability theory')
('probabilistic models', 'based on', 'machine learning')"
3.10,1,"('probability theory',) ('machine learning',)","('probability theory', 'instance of', 'machine learning')
('machine learning', 'based on', 'probability theory')"
3.10,2,"('probability theory', 'artificial intelligence', 'machine learning')","('probability theory', 'instance of', 'artificial intelligence')
('artificial intelligence', 'based on', 'machine learning')"
3.11,0,"('probability and information theory', 'Ramsey (1926)', 'logic', 'probability theory', 'random variables', 'vector-valued variables', 'probability distribution', 'discrete random variable', 'continuous random variable', 'probability distributions', 'probability mass function', 'PMF')","('probability and information theory', 'instance of', 'Ramsey (1926)'),
('probability and information theory', 'instance of', 'logic'),
('probability theory', 'subclass of', 'probability and information theory'),
('random variables', 'instance of', 'probability theory'),
('vector-valued variables', 'subclass of', 'random variables'),
('probability distribution', 'instance of', 'probability theory'),
('discrete random variable', 'instance of', 'random variables'),
('continuous random variable', 'instance of', 'random variables'),
('probability distributions', 'subclass of', 'probability distribution'),
('probability mass function', 'instance of', 'probability distributions')"
3.12,0,"('probability mass function', 'random variable', 'state', 'joint probability distribution', 'impossible event', 'guaranteed event', 'normalized', 'uniform distribution')","('probability mass function', 'instance of', 'random variable')
('random variable', 'instance of', 'state')
('state', 'instance of', 'joint probability distribution')
('impossible event', 'subclass of', 'event')
('guaranteed event', 'subclass of', 'event')
('normalized', 'subclass of', 'event')
('uniform distribution', 'instance of', 'distribution')"
3.12,1,"('continuous random variables', 'probability density function', 'specific state', 'uniform distribution', 'univariate example', 'marginal probability distribution', 'sum rule')","('continuous random variables', 'instance of', 'probability density function')
('probability density function', 'instance of', 'specific state')
('specific state', 'instance of', 'uniform distribution')
('uniform distribution', 'instance of', 'univariate example')
('univariate example', 'instance of', 'marginal probability distribution')
('marginal probability distribution', 'instance of', 'sum rule')"
3.13,0,"('PROBABILITY AND INFORMATION THEORY', 'marginal probability', 'P(x,y)', 'P(x)', 'continuous variables', 'p(x)', 'summation', 'conditional probability', 'P(y = y x = x)', 'P(y = y,x = x)', 'P(y = y x = x)', 'P(x = x)', 'conditional probability', 'P(x= x)', 'conditional probability', 'causal modeling', 'The Chain Rule of Conditional Probabilities', 'joint probability distribution', 'conditional distributions', 'P(x(1),...,x(n))', 'P(x(1))Πn P(x(i) x(1),...,x(i 1))', 'chain rule', 'product rule of probability', 'conditional probability', 'equation 3.5')","('PROBABILITY AND INFORMATION THEORY', 'marginal probability', 'P(x,y)')
('marginal probability', 'P(x)', 'continuous variables')
('summation', 'conditional probability', 'P(y = y|x = x)')
('summation', 'conditional probability', 'P(y = y|x = x)')
('summation', 'conditional probability', 'P(x = x)')
('conditional probability', 'P(x = x)')
('conditional probability', 'P(x = x)')
('causal modeling', 'The Chain Rule of Conditional Probabilities')
('joint probability distribution', 'conditional distributions', 'P(x(1),...,x(n))')
('joint probability distribution', 'conditional distributions', 'P(x(1))Πn P(x(i)|x(1),...,x(i-1))')
('chain rule', 'product rule of probability')
('chain rule', 'product rule of probability')
('chain rule', 'conditional probability', 'equation 3.5')"
3.13,1,"('PROBABILITY AND INFORMATION THEORY', 'definition', 'P(a,b,c)', 'P(a b,c)', 'P(b,c)', 'P(b c)', 'P(a,b,c)', 'P(a b,c)P(b c)P(c)', 'Independence and Conditional Independence', 'Two random variables', 'x', 'y', 'independent', 'probability distribution', 'product of two factors', 'x x,y y', 'p(x = x,y = y)', 'p(x = x)p(y = y)', 'random variable', 'z', 'conditional probability distribution', 'x x,y y,z z', 'p(x = x,y = y z = z)', 'p(x = x z = z)p(y = y z = z)', 'Independence and Conditional Independence', 'compact notation', 'Expectation, Variance and Covariance', 'expectation', 'expected value', 'function f(x)', 'probability distribution', 'P(x)', 'average', 'mean value', 'discrete variables', 'summation', 'E [f(x)] = P(x)f(x)', 'continuous variables', 'integral', 'E [f(x)] = p(x)f(x)dx')","('PROBABILITY AND INFORMATION THEORY', 'definition', 'P(a,b,c)')
('definition', 'P(a b,c)', 'P(b,c)')
('definition', 'P(b,c)', 'P(b c)')
('definition', 'P(a,b,c)', 'P(a b,c)P(b c)P(c)')
('Independence and Conditional Independence', 'Two random variables', 'x')
('Independence and Conditional Independence', 'Two random variables', 'y')
('independent', 'probability distribution', 'product of two factors')
('product of two factors', 'x', 'x,y', 'y')
('product of two factors', 'p(x = x,y = y)', 'p(x = x)p(y = y)')
('random variable', 'z')
('conditional probability distribution', 'x', 'x,y', 'y,z', 'z')
('conditional probability distribution', 'p(x = x,y = y z = z)', 'p(x = x z = z)p(y = y z = z)')
('Independence and Conditional Independence', 'compact notation')
('Expectation, Variance and Covariance', 'expectation', 'expected value')
('Expectation, Variance and Covariance', 'function f(x)')
('function f(x)', 'probability distribution', 'P(x)')
('expectation', 'average', 'mean value', 'discrete variables')
('summation', 'E [f(x)] = P(x)f(x)')
('expectation', 'average', 'mean value', 'continuous variables')
('integral', 'E [f(x)] = p(x)f(x)dx')"
3.14,0,"('Probability and Information Theory', 'random variable', 'distribution', 'expectation', 'variance', 'function', 'covariance', 'correlation', 'independence')","('random variable', 'instance of', 'Probability and Information Theory')
('distribution', 'instance of', 'Probability and Information Theory')
('expectation', 'instance of', 'Probability and Information Theory')
('variance', 'instance of', 'Probability and Information Theory')
('function', 'instance of', 'Probability and Information Theory')
('covariance', 'instance of', 'Probability and Information Theory')
('correlation', 'instance of', 'Probability and Information Theory')
('independence', 'instance of', 'Probability and Information Theory')"
3.14,1,"('s', 'random variable', 'y', 'covariance', 'random vector', 'covariance matrix', 'Bernoulli Distribution', 'multinoulli distribution')","('s', 'instance of', 'random variable')
('y', 'instance of', 'random variable')
('random vector', 'instance of', 'covariance matrix')
('Bernoulli Distribution', 'instance of', 'covariance')
('multinoulli distribution', 'instance of', 'covariance')"
3.14,2,"('parametrized', 'vector', 'state', 'Bernoulli Distribution', 'multinoulli distribution', 'Gaussian Distribution', 'normal distribution', 'mean', 'standard deviation', 'variance', 'precision', 'PDF')","('parametrized', 'instance of', 'vector')
('vector', 'instance of', 'state')
('Bernoulli Distribution', 'instance of', 'state')
('multinoulli distribution', 'instance of', 'state')
('Gaussian Distribution', 'instance of', 'state')
('normal distribution', 'instance of', 'state')
('mean', 'instance of', 'Gaussian Distribution')
('standard deviation', 'instance of', 'Gaussian Distribution')
('variance', 'instance of', 'Gaussian Distribution')
('precision', 'instance of', 'Gaussian Distribution')
('PDF', 'instance of', 'Gaussian Distribution')"
3.14,3,"('bell curve', 'central limit theorem', 'sum', 'random variables', 'variance', 'uncertainty', 'probability distributions', 'normal distribution', 'real numbers', 'multivariate normal distribution', 'positive definite symmetric matrix')","('bell curve', 'instance of', 'normal distribution')
('central limit theorem', 'instance of', 'sum')
('sum', 'instance of', 'random variables')
('variance', 'instance of', 'uncertainty')
('uncertainty', 'instance of', 'probability distributions')
('probability distributions', 'instance of', 'normal distribution')
('normal distribution', 'instance of', 'real numbers')
('multivariate normal distribution', 'instance of', 'real numbers')
('positive definite symmetric matrix', 'instance of', 'real numbers')"
3.14,4,"('mean', 'covariance matrix', 'PDF', 'precision matrix', 'diagonal matrix', 'isotropic Gaussian distribution', 'exponential distribution', 'Laplace distribution', 'Dirac Distribution', 'Empirical Distribution', 'Dirac delta function')","('mean', 'instance of', 'covariance matrix')
('covariance matrix', 'instance of', 'PDF')
('PDF', 'instance of', 'precision matrix')
('precision matrix', 'instance of', 'diagonal matrix')
('diagonal matrix', 'instance of', 'isotropic Gaussian distribution')
('isotropic Gaussian distribution', 'instance of', 'exponential distribution')
('exponential distribution', 'instance of', 'Laplace distribution')
('Laplace distribution', 'instance of', 'Dirac Distribution')
('Dirac Distribution', 'instance of', 'Empirical Distribution')
('Empirical Distribution', 'instance of', 'Dirac delta function')"
4.1,0,"('PROBABILITY AND INFORMATION THEORY', 'Dirac delta function', 'empirical distribution', 'multinoulli distribution', 'empirical frequency')","('empirical distribution', 'subclass of', 'PROBABILITY AND INFORMATION THEORY')
('multinoulli distribution', 'subclass of', 'PROBABILITY AND INFORMATION THEORY')
('empirical frequency', 'subclass of', 'PROBABILITY AND INFORMATION THEORY')"
4.1,1,"('mixture model', 'latent variable', 'Gaussian mixture model', 'logistic sigmoid', 'Bernoulli')","('latent variable', 'subclass of', 'mixture model')
('Gaussian mixture model', 'subclass of', 'mixture model')
('logistic sigmoid', 'part of', 'Bernoulli')"
4.3,0,"('Gaussian mixture model', 'isotropic covariance matrix', 'variance', 'diagonal covariance matrix', 'axis-aligned direction', 'full-rank covariance matrix', 'distribution', 'sigmoid function', 'softplus function', 'normal distribution')","('Gaussian mixture model', 'instance of', 'distribution')
('Gaussian mixture model', 'based on', 'variance')
('Gaussian mixture model', 'based on', 'diagonal covariance matrix')
('Gaussian mixture model', 'based on', 'axis-aligned direction')
('Gaussian mixture model', 'based on', 'full-rank covariance matrix')
('isotropic covariance matrix', 'subclass of', 'covariance matrix')
('variance', 'subclass of', 'statistical dispersion')
('diagonal covariance matrix', 'subclass of', 'covariance matrix')
('axis-aligned direction', 'subset of', 'direction')
('full-rank covariance matrix', 'subclass of', 'covariance matrix')
('sigmoid function', 'instance of', 'activation function')
('softplus function', 'instance of', 'activation function')
('normal distribution', 'instance of', 'distribution')"
4.3,1,"('logistic sigmoid function', 'softplus function')","('logistic sigmoid function', 'instance of', 'activation function')
('softplus function', 'instance of', 'activation function')"
4.3,2,"('logit', 'softplus', 'Bayes’ rule')","('logit', 'instance of', 'activation function')
('softplus', 'instance of', 'activation function')
('Bayes’ rule', 'instance of', 'probability theory')"
4.3,3,"('Bayes’ rule', 'measure theory')","('Bayes’ rule', 'based on', 'measure theory')"
4.3,4,"('continuous variables', 'measure zero', 'probabilitydistribution', 'Jacobian matrix', 'derivative')","('continuous variables', 'subclass of', 'random variables')
('measure zero', 'instance of', 'measure')
('probability distribution', 'instance of', 'distribution')
('Jacobian matrix', 'instance of', 'matrix')
('derivative', 'instance of', 'mathematical concept')"
4.3,5,"('Information Theory', 'applied mathematics', 'signal', 'discrete alphabets', 'noisy channel', 'radio transmission', 'codes', 'probability distributions', 'encoding schemes', 'machine learning', 'continuous variables', 'electrical engineering', 'computer science', 'probability distributions', 'similarity', 'Cover and Thomas (2006)', 'MacKay (2003)', 'unlikely event', 'likely event', 'solar eclipse', 'information content', 'tossed coin')","('Information Theory', 'applied mathematics', 'signal')"
4.3,6,"('Shannon entropy', 'bits', 'shannons', 'information content', 'uncertainty', 'distribution', 'average', 'encode symbols', 'differential entropy', 'Kullback-Leibler divergence', 'measure', 'non-negative', 'distance measure')","('Shannon entropy', 'information content', 'bits')
('information content', 'shannons', 'bits')
('Shannon entropy', 'uncertainty', 'distribution')
('information content', 'uncertainty', 'distribution')
('Shannon entropy', 'average', 'distribution')
('information content', 'average', 'distribution')
('Shannon entropy', 'encode symbols', 'bits')
('information content', 'encode symbols', 'bits')
('Shannon entropy', 'differential entropy', 'Kullback-Leibler divergence')
('information content', 'differential entropy', 'Kullback-Leibler divergence')
('Shannon entropy', 'measure', 'non-negative')
('information content', 'measure', 'non-negative')
('Shannon entropy', 'distance measure', 'non-negative')
('information content', 'distance measure', 'non-negative')"
4.3,7,"('Shannon entropy', 'binary random variable', 'entropy', 'deterministic', 'uniform distribution', 'asymmetry', 'KL divergence', 'cross-entropy', 'structured probabilistic models')","('Shannon entropy', 'binary random variable', 'entropy')
('Shannon entropy', 'entropy', 'binary random variable')
('Shannon entropy', 'entropy', 'deterministic')
('Shannon entropy', 'entropy', 'uniform distribution')
('Shannon entropy', 'asymmetry', 'uniform distribution')
('Shannon entropy', 'KL divergence', 'cross-entropy')
('Shannon entropy', 'cross-entropy', 'KL divergence')
('Shannon entropy', 'structured probabilistic models', 'entropy')"
4.3,8,"('KL divergence', 'asymmetric', 'approximation', 'Gaussians', 'probability distribution', 'modes', 'blur')","('KL divergence', 'asymmetric', 'approximation')
('KL divergence', 'Gaussians', 'probability distribution')
('KL divergence', 'probability distribution', 'Gaussians')
('KL divergence', 'probability distribution', 'modes')
('KL divergence', 'blur', 'probability distribution')"
4.3,9,"('joint probability distribution', 'inefficient', 'computationally', 'statistically', 'probability distribution', 'factors', 'product of probability distributions', 'influences', 'independent', 'factorization', 'graphs', 'structured probabilistic models', 'directed models', 'undirected models', 'conditional probability distributions', 'direct interactions', 'random variables', 'parent nodes', 'functions')","('joint probability distribution', 'inefficient', 'computationally')
('joint probability distribution', 'statistically', 'probability distribution')
('probability distribution', 'factors', 'product of probability distributions')
('probability distribution', 'influences', 'independent')
('probability distribution', 'factorization', 'product of probability distributions')
('probability distribution', 'graphs', 'structured probabilistic models')
('structured probabilistic models', 'directed models', 'graphs')
('structured probabilistic models', 'undirected models', 'graphs')
('structured probabilistic models', 'conditional probability distributions', 'random variables')
('structured probabilistic models', 'direct interactions', 'random variables')
('structured probabilistic models', 'parent nodes', 'random variables')
('structured probabilistic models', 'functions', 'random variables')"
4.3,10,"('PROBABILITY', 'INFORMATION THEORY', 'graphical model', 'random variables', 'probability distributions', 'factor', 'clique', 'undirected graph', 'normalized probability distribution')","('PROBABILITY', 'part of', 'INFORMATION THEORY')
('random variables', 'instance of', 'PROBABILITY')
('probability distributions', 'instance of', 'PROBABILITY')
('factor', 'use', 'probability distributions')
('clique', 'use', 'factor')
('undirected graph', 'instance of', 'graphical model')
('normalized probability distribution', 'subclass of', 'probability distributions')"
4.4,0,"('PROBABILITY AND INFORMATION THEORY', 'Figure 3.8: An undirected graphical model', 'random variables', 'graph', 'probability distributions', 'φ(1)', 'φ(2)', 'φ(3)', 'Z', 'distribution', 'probability distribution', 'structured probabilistic models', 'language', 'direct probabilistic relationships', 'machine learning algorithms', 'research topics', 'part III', 'basic concepts of probability theory', 'deep learning', 'fundamental mathematical tools', 'numerical methods')","('PROBABILITY AND INFORMATION THEORY', 'instance of', 'Figure 3.8: An undirected graphical model')
('random variables', 'instance of', 'graph')
('probability distributions', 'instance of', 'graph')
('φ(1)', 'instance of', 'graph')
('φ(2)', 'instance of', 'graph')
('φ(3)', 'instance of', 'graph')
('Z', 'instance of', 'graph')
('distribution', 'instance of', 'graph')
('probability distribution', 'instance of', 'graph')
('structured probabilistic models', 'instance of', 'graph')
('language', 'instance of', 'graph')
('direct probabilistic relationships', 'instance of', 'graph')
('machine learning algorithms', 'instance of', 'graph')
('research topics', 'instance of', 'graph')
('part III', 'instance of', 'graph')
('basic concepts of probability theory', 'instance of', 'graph')
('deep learning', 'instance of', 'graph')
('fundamental mathematical tools', 'instance of', 'graph')
('numerical methods', 'instance of', 'graph')"
4.4,1,"('Numerical Computation Machine learning algorithms', 'numerical computation', 'algorithms', 'mathematical problems', 'iterative process', 'formula', 'symbolic expression', 'optimization', 'solving systems of linear equations', 'evaluating a mathematical function', 'digital computer', 'real numbers', 'finite amount of memory', 'Overflow and Underflow', 'continuous math', 'bit patterns', 'approximation error', 'rounding error', 'algorithms', 'theory', 'practice', 'rounding error', 'underflow')","('Numerical Computation', 'instance of', 'Machine learning algorithms') 
('numerical computation', 'instance of', 'algorithms') 
('algorithms', 'instance of', 'mathematical problems') 
('iterative process', 'instance of', 'algorithms')
('formula', 'instance of', 'symbolic expression') 
('symbolic expression', 'instance of', 'algorithms') 
('optimization', 'instance of', 'algorithms') 
('solving systems of linear equations', 'instance of', 'algorithms') 
('evaluating a mathematical function', 'instance of', 'algorithms') 
('digital computer', 'instance of', 'algorithms') 
('real numbers', 'instance of', 'algorithms') 
('finite amount of memory', 'instance of', 'algorithms') 
('Overflow and Underflow', 'instance of', 'algorithms') 
('continuous math', 'instance of', 'algorithms') 
('bit patterns', 'instance of', 'algorithms') 
('approximation error', 'instance of', 'algorithms') 
('rounding error', 'instance of', 'algorithms') 
('algorithms', 'instance of', 'theory') 
('algorithms', 'instance of', 'practice') 
('rounding error', 'instance of', 'algorithms') 
('underflow', 'instance of', 'algorithms')"
4.4,2,"('NUMERICAL COMPUTATION', 'software environments', 'exceptions', 'logarithm of zero', 'numerical error', 'overflow', 'softmax function', 'probabilities', 'multinoulli distribution', 'constant c', 'underflow', 'undefined', 'adding or subtracting a scalar', 'logsoftmax function', 'numerically stable', 'low-level libraries', 'deep learning algorithms')","('NUMERICAL COMPUTATION', 'instance of', 'software environments')
('exceptions', 'instance of', 'software environments')
('logarithm of zero', 'instance of', 'numerical error')
('numerical error', 'instance of', 'software environments')
('overflow', 'instance of', 'software environments')
('softmax function', 'instance of', 'software environments')
('probabilities', 'instance of', 'software environments')
('multinoulli distribution', 'instance of', 'software environments')
('constant c', 'instance of', 'software environments')
('underflow', 'instance of', 'software environments')
('undefined', 'instance of', 'software environments')
('adding or subtracting a scalar', 'instance of', 'software environments')
('logsoftmax function', 'instance of', 'software environments')
('numerically stable', 'instance of', 'software environments')
('low-level libraries', 'instance of', 'software environments')
('deep learning algorithms', 'instance of', 'software environments')"
4.5,0,"('Theano', 'Bergstra et al., 2010', 'Bastien et al., 2012')","('Theano', 'based on', 'Bergstra et al., 2010')
('Theano', 'based on', 'Bastien et al., 2012')"
4.5,1,"('gradient descent', 'derivative', 'local minimum', 'local maximum')","('gradient descent', 'based on', 'derivative')
('derivative', 'use', 'gradient descent')
('local minimum', 'based on', 'gradient descent')
('local maximum', 'based on', 'gradient descent')"
4.5,2,"('saddle point', 'global minimum', 'local minimum', 'global minima', 'local minima', 'gradient', 'partial derivatives')","('saddle point', 'based on', 'gradient')
('global minimum', 'based on', 'gradient')
('local minimum', 'based on', 'gradient')
('global minima', 'based on', 'gradient')
('local minima', 'based on', 'gradient')
('gradient', 'use', 'partial derivatives')
('partial derivatives', 'use', 'gradient')"
5.1,0,"('NUMERICAL COMPUTATION', 'halting point', 'global minimum', 'local minimum', 'optimization algorithms', 'plateaus', 'deep learning', 'critical points', 'gradient', 'directional derivative', 'chain rule', 'slope', 'cost function', 'minimizing f', 'method of steepest descent', 'gradient descent', 'new point')","('NUMERICAL COMPUTATION', 'instance of', 'halting point')
('NUMERICAL COMPUTATION', 'instance of', 'global minimum')
('NUMERICAL COMPUTATION', 'instance of', 'local minimum')
('NUMERICAL COMPUTATION', 'instance of', 'optimization algorithms')
('NUMERICAL COMPUTATION', 'instance of', 'plateaus')
('NUMERICAL COMPUTATION', 'instance of', 'deep learning')
('NUMERICAL COMPUTATION', 'instance of', 'critical points')
('NUMERICAL COMPUTATION', 'instance of', 'gradient')
('NUMERICAL COMPUTATION', 'instance of', 'directional derivative')
('NUMERICAL COMPUTATION', 'instance of', 'chain rule')
('NUMERICAL COMPUTATION', 'instance of', 'slope')
('NUMERICAL COMPUTATION', 'instance of', 'cost function')
('NUMERICAL COMPUTATION', 'instance of', 'minimizing f')
('NUMERICAL COMPUTATION', 'instance of', 'method of steepest descent')
('NUMERICAL COMPUTATION', 'instance of', 'gradient descent')
('NUMERICAL COMPUTATION', 'instance of', 'new point')"
5.1,1,"('Jacobian matrix', 'second derivative', 'quadratic function')","('Jacobian matrix', 'instance of', 'second derivative')
('Jacobian matrix', 'instance of', 'quadratic function')"
5.1,2,"('curvature', 'Hessian matrix', 'eigenvalues', 'orthogonal basis')","('curvature', 'instance of', 'Hessian matrix')
('curvature', 'instance of', 'eigenvalues')
('curvature', 'instance of', 'orthogonal basis')"
5.1,3,"('eigenvectors', 'Taylor series', 'learning rate', 'optimal step size', 'critical point', 'local maximum', 'local minimum', 'saddle point')","('eigenvectors', 'instance of', 'Taylor series')
('eigenvectors', 'instance of', 'learning rate')
('eigenvectors', 'instance of', 'optimal step size')
('eigenvectors', 'instance of', 'critical point')
('eigenvectors', 'instance of', 'local maximum')
('eigenvectors', 'instance of', 'local minimum')
('eigenvectors', 'instance of', 'saddle point')"
5.1,4,"('second derivative test', 'positive definite', 'negative definite', 'saddle points', 'condition number')","('second derivative test', 'instance of', 'positive definite')
('second derivative test', 'instance of', 'negative definite')
('second derivative test', 'instance of', 'saddle points')
('second derivative test', 'instance of', 'condition number')"
5.1,5,"('NUMERICAL COMPUTATION', 'eigenvalues', 'local maximum', 'local minimum')","('NUMERICAL COMPUTATION', 'instance of', 'eigenvalues')
('NUMERICAL COMPUTATION', 'instance of', 'local maximum')
('NUMERICAL COMPUTATION', 'instance of', 'local minimum')"
5.1,6,"('NUMERICAL COMPUTATION', 'Hessian matrix', 'condition number', 'quadratic function', 'curvature', 'gradient descent', 'optimization algorithm')","('NUMERICAL COMPUTATION', 'instance of', 'Hessian matrix')
('NUMERICAL COMPUTATION', 'part of', 'condition number')
('NUMERICAL COMPUTATION', 'part of', 'quadratic function')
('NUMERICAL COMPUTATION', 'part of', 'curvature')
('NUMERICAL COMPUTATION', 'part of', 'gradient descent')
('NUMERICAL COMPUTATION', 'part of', 'optimization algorithm')"
5.1,7,"('NUMERICAL COMPUTATION', 'Newton’s method', 'Taylor series expansion', 'critical point', 'positive definite quadratic function', 'gradient descent', 'saddle point', 'Hessian matrix', 'first-order optimization algorithms', 'second-order optimization algorithms', 'Lipschitz continuous function', 'Lipschitz constant')","('NUMERICAL COMPUTATION', 'part of', 'Newton’s method')
('NUMERICAL COMPUTATION', 'part of', 'Taylor series expansion')
('NUMERICAL COMPUTATION', 'part of', 'critical point')
('NUMERICAL COMPUTATION', 'part of', 'positive definite quadratic function')
('NUMERICAL COMPUTATION', 'part of', 'gradient descent')
('NUMERICAL COMPUTATION', 'part of', 'saddle point')
('NUMERICAL COMPUTATION', 'part of', 'Hessian matrix')
('NUMERICAL COMPUTATION', 'part of', 'first-order optimization algorithms')
('NUMERICAL COMPUTATION', 'part of', 'second-order optimization algorithms')
('NUMERICAL COMPUTATION', 'part of', 'Lipschitz continuous function')
('NUMERICAL COMPUTATION', 'part of', 'Lipschitz constant')"
5.1,8,"('NUMERICAL COMPUTATION', 'Lipschitz continuity', 'convex optimization', 'positive semidefinite', 'constrained optimization', 'feasible points', 'norm constraint', 'gradient descent', 'projection', 'line search', 'tangent space', 'unconstrained optimization problem')","('NUMERICAL COMPUTATION', 'part of', 'Lipschitz continuity')
('NUMERICAL COMPUTATION', 'part of', 'convex optimization')
('NUMERICAL COMPUTATION', 'part of', 'positive semidefinite')
('NUMERICAL COMPUTATION', 'part of', 'constrained optimization')
('NUMERICAL COMPUTATION', 'part of', 'feasible points')
('NUMERICAL COMPUTATION', 'part of', 'norm constraint')
('NUMERICAL COMPUTATION', 'part of', 'gradient descent')
('NUMERICAL COMPUTATION', 'part of', 'projection')
('NUMERICAL COMPUTATION', 'part of', 'line search')
('NUMERICAL COMPUTATION', 'part of', 'tangent space')
('NUMERICAL COMPUTATION', 'part of', 'unconstrained optimization problem')"
5.1,9,"('NUMERICAL COMPUTATION', 'constrained optimization', 'L2 norm', 'generalized Lagrangian', 'equality constraints', 'inequality constraints', 'KKT multipliers')","('NUMERICAL COMPUTATION', 'part of', 'constrained optimization')
('NUMERICAL COMPUTATION', 'part of', 'L2 norm')
('NUMERICAL COMPUTATION', 'part of', 'generalized Lagrangian')
('NUMERICAL COMPUTATION', 'part of', 'equality constraints')
('NUMERICAL COMPUTATION', 'part of', 'inequality constraints')
('NUMERICAL COMPUTATION', 'part of', 'KKT multipliers')"
5.1,10,"('NUMERICAL COMPUTATION', 'constrained maximization', 'generalized La- grange function', 'optimization problem', 'equality constraints', 'inequality constraints', 'active constraint', 'local solution', 'inactive constraint', 'stationary point', 'KKT multiplier', 'Karush-Kuhn-Tucker conditions', 'optimal point', 'gradient of the generalized Lagrangian')","('NUMERICAL COMPUTATION', 'instance of', 'constrained maximization')
('generalized La- grange function', 'instance of', 'optimization problem')
('equality constraints', 'instance of', 'optimization problem')
('inequality constraints', 'instance of', 'optimization problem')
('active constraint', 'instance of', 'local solution')
('inactive constraint', 'instance of', 'local solution')
('stationary point', 'instance of', 'local solution')
('KKT multiplier', 'instance of', 'stationary point')
('Karush-Kuhn-Tucker conditions', 'instance of', 'stationary point')
('optimal point', 'instance of', 'stationary point')
('gradient of the generalized Lagrangian', 'instance of', 'stationary point')"
5.2,0,"('NUMERICAL COMPUTATION', 'complementary slackness', 'KKT approach', 'Linear Least Squares', 'gradient-based optimization', 'arbitrary value', 'step size', 'tolerance', 'gradient descent', 'Newton’s method', 'global minimum', 'Lagrangian')","('NUMERICAL COMPUTATION', 'complementary slackness', 'KKT approach')
('NUMERICAL COMPUTATION', 'Linear Least Squares', 'gradient-based optimization')
('gradient-based optimization', 'arbitrary value', 'step size')
('gradient-based optimization', 'tolerance', 'gradient descent')
('gradient-based optimization', 'Newton’s method', 'global minimum')
('gradient-based optimization', 'Lagrangian')"
5.2,1,"('Moore-Penrose pseudoinverse', 'constrained problem', 'active constraint', 'Lagrangian', 'gradient ascent', 'linear equation', 'mathematical preliminaries', 'machine learning algorithms')","('Moore-Penrose pseudoinverse', 'constrained problem', 'active constraint')
('constrained problem', 'Lagrangian', 'gradient ascent')
('Lagrangian', 'linear equation', 'mathematical preliminaries')
('mathematical preliminaries', 'machine learning algorithms')"
5.2,2,"('deep learning', 'machine learning', 'basic principles', 'learning algorithm', 'linear regression algorithm', 'training data', 'generalize to new data', 'hyperparameters', 'applied statistics', 'frequentist estimators', 'Bayesian inference', 'supervised learning', 'unsupervised learning', 'stochastic gradient descent', 'optimization algorithm')","('deep learning', 'machine learning', 'basic principles')
('machine learning', 'learning algorithm', 'linear regression algorithm')
('learning algorithm', 'training data', 'generalize to new data')
('learning algorithm', 'hyperparameters')
('applied statistics', 'frequentist estimators')
('applied statistics', 'Bayesian inference')
('machine learning', 'supervised learning')
('machine learning', 'unsupervised learning')
('learning algorithm', 'stochastic gradient descent')
('learning algorithm', 'optimization algorithm')"
5.2,3,"('learning algorithm', 'experience', 'class of tasks', 'performance measure', 'machine learning tasks', 'quantitatively measured features', 'vector')","('learning algorithm', 'experience', 'class of tasks')
('learning algorithm', 'performance measure', 'machine learning tasks')
('machine learning tasks', 'quantitatively measured features', 'vector')"
5.2,4,"('classification', 'object recognition', 'probabilistic model', 'missing inputs', 'medical diagnosis')","('classification', 'object recognition', 'probabilistic model')
('classification', 'missing inputs', 'probabilistic model')
('classification', 'medical diagnosis')"
5.2,5,"('MACHINE LEARNING BASICS', 'Regression', 'classification', 'transcription', 'optical character recognition', 'ASCII', 'Unicode', 'Google Street View', 'deep learning', 'speech recognition', 'audio waveform', 'machine translation', 'natural languages', 'English', 'French', 'Structured output', 'parsing', 'Collobert', 'pixel-wise segmentation')","('MACHINE LEARNING BASICS', 'instance of', 'Regression')
('MACHINE LEARNING BASICS', 'instance of', 'classification')
('MACHINE LEARNING BASICS', 'instance of', 'transcription')
('MACHINE LEARNING BASICS', 'instance of', 'optical character recognition')
('MACHINE LEARNING BASICS', 'instance of', 'ASCII')
('MACHINE LEARNING BASICS', 'instance of', 'Unicode')
('MACHINE LEARNING BASICS', 'instance of', 'Google Street View')
('MACHINE LEARNING BASICS', 'instance of', 'deep learning')
('MACHINE LEARNING BASICS', 'instance of', 'speech recognition')
('MACHINE LEARNING BASICS', 'instance of', 'audio waveform')
('MACHINE LEARNING BASICS', 'instance of', 'machine translation')
('MACHINE LEARNING BASICS', 'instance of', 'natural languages')
('MACHINE LEARNING BASICS', 'instance of', 'English')
('MACHINE LEARNING BASICS', 'instance of', 'French')
('MACHINE LEARNING BASICS', 'instance of', 'Structured output')
('MACHINE LEARNING BASICS', 'instance of', 'parsing')
('MACHINE LEARNING BASICS', 'instance of', 'Collobert')
('MACHINE LEARNING BASICS', 'instance of', 'pixel-wise segmentation')"
5.2,6,"('anomaly detection', 'credit card fraud detection', 'Synthesis and sampling', 'media applications', 'video games', 'textures', 'speech synthesis', 'Imputation of missing values')","('anomaly detection', 'instance of', 'credit card fraud detection')
('anomaly detection', 'instance of', 'Synthesis and sampling')
('anomaly detection', 'instance of', 'media applications')
('anomaly detection', 'instance of', 'video games')
('anomaly detection', 'instance of', 'textures')
('anomaly detection', 'instance of', 'speech synthesis')
('anomaly detection', 'instance of', 'Imputation of missing values')"
5.2,7,"('Denoising', 'corruption process', 'Density estimation', 'probability density function', 'probability mass function', 'performance measure', 'accuracy')","('Denoising', 'instance of', 'corruption process')
('Denoising', 'instance of', 'Density estimation')
('Denoising', 'instance of', 'probability density function')
('Denoising', 'instance of', 'probability mass function')
('Denoising', 'instance of', 'performance measure')
('Denoising', 'instance of', 'accuracy')"
5.2,8,"('0-1 loss', 'average log-probability', 'test set', 'performance measure', 'transcription task', 'regression task', 'density estimation', 'unsupervised', 'supervised', 'learning algorithms', 'dataset')","('0-1 loss', 'instance of', 'average log-probability')
('0-1 loss', 'instance of', 'test set')
('0-1 loss', 'instance of', 'performance measure')
('0-1 loss', 'instance of', 'transcription task')
('0-1 loss', 'instance of', 'regression task')
('0-1 loss', 'instance of', 'density estimation')
('0-1 loss', 'instance of', 'unsupervised')
('0-1 loss', 'instance of', 'supervised')
('0-1 loss', 'instance of', 'learning algorithms')
('0-1 loss', 'instance of', 'dataset')"
5.2,9,"('Iris dataset', 'features', 'unsupervised learning', 'density estimation', 'clustering', 'supervised learning', 'target', 'probability distribution', 'instructor', 'observations')","('Iris dataset', 'instance of', 'features')
('Iris dataset', 'instance of', 'unsupervised learning')
('Iris dataset', 'instance of', 'density estimation')
('Iris dataset', 'instance of', 'clustering')
('Iris dataset', 'instance of', 'supervised learning')
('Iris dataset', 'instance of', 'target')
('Iris dataset', 'instance of', 'probability distribution')
('Iris dataset', 'instance of', 'instructor')
('Iris dataset', 'instance of', 'observations')"
5.3,0,"('MACHINE LEARNING BASICS', 'supervised learning', 'unsupervised learning', 'regression', 'classification', 'structured output problems', 'Density estimation', 'support of other tasks', 'semi-supervised learning', 'multi-instance learning', 'deep models', 'reinforcement learning', 'design matrix', 'Iris dataset')","('MACHINE LEARNING BASICS', 'supervised learning', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'regression', 'classification')
('MACHINE LEARNING BASICS', 'semi-supervised learning', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'multi-instance learning', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'deep models', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'reinforcement learning', 'unsupervised learning')
('MACHINE LEARNING BASICS', 'Iris dataset', 'unsupervised learning')"
5.3,1,"('MACHINE LEARNING BASICS', 'linear regression', 'regression')","('MACHINE LEARNING BASICS', 'linear regression', 'regression')"
5.4,0,"('MACHINE LEARNING BASICS', 'test set', 'mean squared error', 'predictions', 'targets', 'Euclidean distance', 'machine learning algorithm', 'weights', 'training set', 'gradient')","('MACHINE LEARNING BASICS', 'based on', 'test set')
('test set', 'facet of', 'mean squared error')
('predictions', 'instance of', 'mean squared error')
('targets', 'instance of', 'mean squared error')
('Euclidean distance', 'based on', 'mean squared error')
('machine learning algorithm', 'instance of', 'mean squared error')
('weights', 'part of', 'machine learning algorithm')
('training set', 'based on', 'machine learning algorithm')
('gradient', 'instance of', 'machine learning algorithm')"
5.4,1,"('MACHINE LEARNING BASICS', 'linear regression problem', 'training set', 'weight vector', 'mean squared error', 'normal equations', 'learning algorithm', 'linear regression')","('MACHINE LEARNING BASICS', 'based on', 'linear regression problem')
('linear regression problem', 'facet of', 'training set')
('weight vector', 'part of', 'linear regression problem')
('mean squared error', 'facet of', 'linear regression problem')
('normal equations', 'instance of', 'learning algorithm')
('learning algorithm', 'instance of', 'linear regression problem')
('linear regression', 'instance of', 'learning algorithm')"
5.4,2,"('MACHINE LEARNING BASICS', 'linear regression', 'learning algorithm', 'capacity', 'overfitting', 'underfitting', 'generalization error', 'test error', 'training error', 'optimization problem', 'test set')","('MACHINE LEARNING BASICS', 'based on', 'linear regression')
('linear regression', 'instance of', 'learning algorithm')
('learning algorithm', 'facet of', 'capacity')
('capacity', 'part of', 'overfitting')
('overfitting', 'part of', 'generalization error')
('underfitting', 'part of', 'generalization error')
('generalization error', 'facet of', 'test error')
('test error', 'facet of', 'optimization problem')
('training error', 'part of', 'optimization problem')
('optimization problem', 'facet of', 'test set')"
5.4,3,"('MACHINE LEARNING BASICS', 'statistical learning theory', 'data generating process', 'i.i.d. assumptions', 'data generating distribution', 'training error', 'test error', 'underfitting', 'overfitting', 'model capacity')","('MACHINE LEARNING BASICS', 'based on', 'statistical learning theory')
('statistical learning theory', 'facet of', 'data generating process')
('data generating process', 'facet of', 'i.i.d. assumptions')
('i.i.d. assumptions', 'facet of', 'data generating distribution')
('data generating distribution', 'facet of', 'training error')
('training error', 'facet of', 'test error')
('test error', 'part of', 'underfitting')
('test error', 'part of', 'overfitting')
('underfitting', 'part of', 'model capacity')
('overfitting', 'part of', 'model capacity')"
5.4,4,"('MACHINE LEARNING BASICS', 'model capacity', 'hypothesis space', 'linear regression', 'polynomials', 'quadratic function', 'degree', 'overfitting', 'underfitting')","('MACHINE LEARNING BASICS', 'based on', 'model capacity')
('model capacity', 'facet of', 'hypothesis space')
('linear regression', 'instance of', 'hypothesis space')
('polynomials', 'instance of', 'hypothesis space')
('quadratic function', 'instance of', 'polynomials')
('degree', 'facet of', 'polynomials')
('overfitting', 'part of', 'degree')
('underfitting', 'part of', 'degree')"
5.4,5,"('MACHINE LEARNING', 'QUADRATIC MODEL', 'MOORE-PENROSE PSEUDOINVERSE')","('MACHINE LEARNING', 'subclass of', 'QUADRATIC MODEL')
('QUADRATIC MODEL', 'use', 'MACHINE LEARNING')
('MOORE-PENROSE PSEUDOINVERSE', 'subject of', 'QUADRATIC MODEL')"
5.4,6,"('MACHINE LEARNING', 'OPTIMIZATION ALGORITHM', 'OCCAM’S RAZOR', 'STATISTICAL LEARNING THEORY', 'VAPNIK-CHERVONENKIS DIMENSION', 'BINARY CLASSIFIER', 'GENERALIZATION ERROR', 'DEEP LEARNING', 'NON-CONVEX OPTIMIZATION')","('MACHINE LEARNING', 'subclass of', 'OPTIMIZATION ALGORITHM')
('OPTIMIZATION ALGORITHM', 'instance of', 'MACHINE LEARNING')
('OPTIMIZATION ALGORITHM', 'based on', 'OCCAM’S RAZOR')
('STATISTICAL LEARNING THEORY', 'part of', 'OCCAM’S RAZOR')
('VAPNIK-CHERVONENKIS DIMENSION', 'based on', 'STATISTICAL LEARNING THEORY')
('VAPNIK-CHERVONENKIS DIMENSION', 'use', 'BINARY CLASSIFIER')
('BINARY CLASSIFIER', 'instance of', 'MACHINE LEARNING')
('BINARY CLASSIFIER', 'based on', 'GENERALIZATION ERROR')
('DEEP LEARNING', 'subclass of', 'MACHINE LEARNING')
('DEEP LEARNING', 'based on', 'NON-CONVEX OPTIMIZATION')"
5.4,7,"('NON-PARAMETRIC MODELS', 'NEAREST NEIGHBOR REGRESSION', 'L2 NORM', 'LEARNED DISTANCE METRICS')","('NON-PARAMETRIC MODELS', 'subclass of', 'NEAREST NEIGHBOR REGRESSION')
('NEAREST NEIGHBOR REGRESSION', 'based on', 'L2 NORM')
('LEARNED DISTANCE METRICS', 'based on', 'NEAREST NEIGHBOR REGRESSION')
('LEARNED DISTANCE METRICS', 'subclass of', 'NON-PARAMETRIC MODELS')"
5.4,8,"('BAYES ERROR', 'NON-PARAMETRIC MODELS', 'GENERALIZATION ERROR')","('BAYES ERROR', 'based on', 'NON-PARAMETRIC MODELS')
('GENERALIZATION ERROR', 'based on', 'NON-PARAMETRIC MODELS')
('GENERALIZATION ERROR', 'instance of', 'BAYES ERROR')"
5.5,0,"('MACHINE LEARNING BASICS', 'training dataset', 'train and test error', 'optimal model capacity', 'synthetic regression problem', 'training set', 'test set', 'training sets', 'error bars', '95 percent confidence intervals', 'MSE', 'quadratic model', 'test error', 'closed form', 'Bayes error', 'memorize specific instances', 'fixed-capacity model', 'optimal polynomial regressor', 'optimal capacity', 'sufficient complexity')","('MACHINE LEARNING BASICS', 'training dataset', 'train and test error')
('training dataset', 'instance of', 'train and test error')
('training dataset', 'part of', 'optimal model capacity')
('synthetic regression problem', 'instance of', 'test set')
('training set', 'instance of', 'training sets')
('test set', 'subclass of', 'training sets')
('test set', 'subclass of', 'training set')
('test set', 'instance of', 'error bars')
('error bars', 'part of', '95 percent confidence intervals')
('MSE', 'instance of', 'quadratic model')
('test error', 'instance of', 'MSE')
('closed form', 'subclass of', 'quadratic model')
('Bayes error', 'instance of', 'test error')
('memorize specific instances', 'part of', 'fixed-capacity model')
('fixed-capacity model', 'part of', 'optimal polynomial regressor')
('optimal polynomial regressor', 'part of', 'optimal capacity')
('optimal capacity', 'part of', 'sufficient complexity')"
5.5,1,"('machine learning algorithms', 'learning algorithm', 'data generating distributions', 'real-world applications', 'probability distributions', 'universal learning algorithm', 'best learning algorithm', 'machine learning research', 'AI agent', 'regularization', 'no free lunch theorem', 'hypothesis space', 'representational capacity', 'linear regression', 'nonlinear fashion', 'sin(x)')","('machine learning algorithms', 'instance of', 'learning algorithm')
('learning algorithm', 'part of', 'data generating distributions')
('real-world applications', 'instance of', 'data generating distributions')
('probability distributions', 'instance of', 'data generating distributions')
('universal learning algorithm', 'subclass of', 'best learning algorithm')
('machine learning research', 'subject of', 'AI agent')
('regularization', 'subclass of', 'best learning algorithm')
('no free lunch theorem', 'subclass of', 'best learning algorithm')
('hypothesis space', 'part of', 'representational capacity')
('linear regression', 'subclass of', 'best learning algorithm')
('nonlinear fashion', 'instance of', 'linear regression')
('sin(x)', 'subclass of', 'best learning algorithm')"
5.5,0,"('MACHINE LEARNING', 'BASICS', 'MATHEMATICS', 'COMPUTER SCIENCE')","('MACHINE LEARNING', 'part of', 'BASICS')
('MACHINE LEARNING', 'based on', 'MATHEMATICS')
('MACHINE LEARNING', 'based on', 'COMPUTER SCIENCE')"
5.5,1,"('MACHINE LEARNING', 'REGULARIZATION')","('MACHINE LEARNING', 'use', 'REGULARIZATION')"
5.5,2,"('MACHINE LEARNING', 'WEIGHT DECAY')","('MACHINE LEARNING', 'use', 'WEIGHT DECAY')"
5.5,3,"('HYPERPARAMETERS', 'VALIDATION SETS')","('HYPERPARAMETERS', 'use', 'VALIDATION SETS')"
5.6,0,"('Machine Learning', 'hyperparameter', 'model capacity', 'overfitting', 'figure 5.3', 'polynomial', 'weight decay', 'validation set', 'generalization error', 'learner', 'test set', 'parameters', 'training set', 'optimization', 'scientific community', 'state-of-the-art', 'benchmarks', 'field performance', 'trained system', 'benchmark datasets')","('Machine Learning', 'field performance', 'state-of-the-art')
('model capacity', 'hyperparameter', 'Machine Learning')
('overfitting', 'part of', 'Machine Learning')
('figure 5.3', 'based on', 'Machine Learning')
('weight decay', 'part of', 'Machine Learning')
('validation set', 'part of', 'Machine Learning')
('generalization error', 'part of', 'Machine Learning')
('learner', 'part of', 'Machine Learning')
('test set', 'part of', 'Machine Learning')
('parameters', 'part of', 'Machine Learning')
('training set', 'part of', 'Machine Learning')
('optimization', 'part of', 'Machine Learning')
('scientific community', 'use', 'Machine Learning')
('state-of-the-art', 'instance of', 'Machine Learning')
('benchmarks', 'part of', 'Machine Learning')
('field performance', 'facet of', 'Machine Learning')
('trained system', 'facet of', 'Machine Learning')
('benchmark datasets', 'part of', 'Machine Learning')"
5.6,1,"('Cross-Validation', 'test set', 'test error', 'algorithm A', 'algorithm B', 'estimation', 'mean test error', 'computational cost', 'k-fold cross-validation', 'partition', 'non-overlapping subsets', 'estimators', 'variance', 'statistics', 'parameter estimation', 'bias', 'generalization', 'underfitting', 'overfitting', 'Point Estimation', 'parametric model', 'linear regression')","('Cross-Validation', 'part of', 'Machine Learning')
('test set', 'part of', 'Cross-Validation')
('test error', 'part of', 'Cross-Validation')
('algorithm A', 'part of', 'Cross-Validation')
('algorithm B', 'part of', 'Cross-Validation')
('estimation', 'part of', 'Cross-Validation')
('mean test error', 'part of', 'Cross-Validation')
('computational cost', 'part of', 'Cross-Validation')
('k-fold cross-validation', 'part of', 'Cross-Validation')
('partition', 'part of', 'Cross-Validation')
('non-overlapping subsets', 'part of', 'Cross-Validation')
('estimators', 'part of', 'Cross-Validation')
('variance', 'part of', 'Cross-Validation')
('statistics', 'part of', 'Cross-Validation')
('parameter estimation', 'part of', 'Cross-Validation')
('bias', 'part of', 'Cross-Validation')
('generalization', 'part of', 'Cross-Validation')
('underfitting', 'part of', 'Cross-Validation')
('overfitting', 'part of', 'Cross-Validation')
('Point Estimation', 'part of', 'Cross-Validation')
('parametric model', 'based on', 'Cross-Validation')
('linear regression', 'part of', 'Cross-Validation')"
5.6,2,"('Algorithm 5.1', 'k-fold cross-validation', 'generalization error', 'learning algorithm', 'dataset D', 'abstract examples', '(input,target) pair', 'supervised learning', 'unsupervised learning', 'vector of errors', 'confidence interval', 'confidence intervals', 'declare', 'KFoldXV', 'mutually exclusive subsets', 'scalar')","('Algorithm 5.1', 'instance of', 'Machine Learning')
('k-fold cross-validation', 'part of', 'Machine Learning')
('generalization error', 'part of', 'Machine Learning')
('learning algorithm', 'part of', 'Machine Learning')
('dataset D', 'part of', 'Machine Learning')
('abstract examples', 'part of', 'Machine Learning')
('(input,target) pair', 'part of', 'Machine Learning')
('supervised learning', 'facet of', 'Machine Learning')
('unsupervised learning', 'facet of', 'Machine Learning')
('vector of errors', 'part of', 'Machine Learning')
('confidence interval', 'part of', 'Machine Learning')
('confidence intervals', 'part of', 'Machine Learning')
('declare', 'use', 'Machine Learning')
('KFoldXV', 'part of', 'Machine Learning')
('mutually exclusive subsets', 'part of', 'Machine Learning')
('scalar', 'part of', 'Machine Learning')"
5.6,3,"('(i.i.d.)', 'point estimator', 'statistic', 'function of the data', 'true θ', 'range', 'good estimator', 'frequentist perspective', 'random variable', 'function estimation', 'function approximations', 'input vector', 'function f(x)', 'variable y', 'estimate f', 'linear regression', 'polynomial regression', 'parameter', 'bias')","('(i.i.d.)', 'part of', 'Machine Learning')
('point estimator', 'part of', 'Machine Learning')
('statistic', 'part of', 'Machine Learning')
('function of the data', 'part of', 'Machine Learning')
('true θ', 'part of', 'Machine Learning')
('range', 'part of', 'Machine Learning')
('good estimator', 'part of', 'Machine Learning')
('frequentist perspective', 'part of', 'Machine Learning')
('random variable', 'part of', 'Machine Learning')
('function estimation', 'part of', 'Machine Learning')
('function approximations', 'part of', 'Machine Learning')
('input vector', 'part of', 'Machine Learning')
('function f(x)', 'part of', 'Machine Learning')
('variable y', 'part of', 'Machine Learning')
('estimate f', 'part of', 'Machine Learning')
('linear regression', 'part of', 'Machine Learning')
('polynomial regression', 'part of', 'Machine Learning')
('parameter', 'part of', 'Machine Learning')
('bias', 'part of', 'Machine Learning')"
5.6,4,"('expectation', 'data generating distribution', 'unbiased estimator', 'asymptotically unbiased estimator', 'Bernoulli Distribution', 'mean', 'Gaussian Distribution', 'estimator of the mean', 'samples', 'independently and identically distributed')","('expectation', 'part of', 'Machine Learning')
('data generating distribution', 'part of', 'Machine Learning')
('unbiased estimator', 'part of', 'Machine Learning')
('asymptotically unbiased estimator', 'part of', 'Machine Learning')
('Bernoulli Distribution', 'part of', 'Machine Learning')
('mean', 'part of', 'Machine Learning')
('Gaussian Distribution', 'part of', 'Machine Learning')
('estimator of the mean', 'part of', 'Machine Learning')
('samples', 'part of', 'Machine Learning')
('independently and identically distributed', 'part of', 'Machine Learning')"
5.7,0,"('Gaussian', 'probability density function', 'estimator', 'sample mean', 'bias', 'expectation', 'variance parameter', 'biased', 'sample variance')","('Gaussian', 'probability density function', 'estimator')
('sample mean', 'bias', 'expectation')
('variance parameter', 'biased', 'sample variance')"
5.7,1,"('estimator', 'bias', 'sample variance', 'unbiased sample variance estimator', 'variance', 'standard error')","('estimator', 'bias', 'sample variance')
('unbiased sample variance estimator', 'variance', 'standard error')"
5.7,2,"('variance', 'standard error', 'estimator', 'bias', 'mean', 'generalization error', 'confidence interval')","('variance', 'standard error', 'estimator')
('bias', 'mean')
('generalization error', 'confidence interval')"
5.7,3,"('Bernoulli distribution', 'variance', 'estimator', 'bias', 'mean squared error', 'cross-validation', 'mean squared error')","('Bernoulli distribution', 'variance', 'estimator')
('bias', 'mean squared error', 'cross-validation')"
5.7,4,"('mean squared error', 'estimators', 'bias', 'variance', 'capacity', 'underfitting', 'overfitting', 'consistency')","('mean squared error', 'estimators', 'bias')
('variance', 'capacity', 'underfitting')
('overfitting', 'consistency')"
5.7,5,"('MACHINE LEARNING BASICS', 'θ', 'plim', 'θ', 'm', 'convergence', 'probability', 'P', 'θˆ', 'θ', 'consistency', 'estimating', 'mean parameter', 'normal distribution', 'dataset', 'µ', 'σ2', 'estimator', 'x(1)', 'unbiased', 'maximum likelihood estimation', 'examples', 'X', 'x(1)', 'x(m)', 'independently', 'true but unknown data generating distribution p (x)', 'p (x;θ)', 'parametric family', 'probability distributions', 'space', 'index', 'θ', 'real number')","('MACHINE LEARNING BASICS', 'instance of', 'θ')
('θ', 'based on', 'plim')
('θ', 'facet of', 'm')
('convergence', 'part of', 'probability')
('P', 'part of', 'θˆ')
('θ', 'subclass of', 'consistency')
('estimating', 'use', 'mean parameter')
('normal distribution', 'based on', 'dataset')
('µ', 'facet of', 'σ2')
('estimator', 'part of', 'x(1)')
('unbiased', 'subclass of', 'maximum likelihood estimation')
('examples', 'facet of', 'X')
('X', 'based on', 'x(1)')
('x(m)', 'part of', 'independently')
('true but unknown data generating distribution p (x)', 'instance of', 'p (x;θ)')
('parametric family', 'subclass of', 'probability distributions')
('probability distributions', 'based on', 'space')
('space', 'part of', 'index')
('θ', 'subclass of', 'real number')"
5.8,0,"('MACHINE LEARNING', 'NUMERICAL UNDERFLOW', 'OPTIMIZATION PROBLEM', 'LIKELIHOOD', 'ARGMAX', 'CRITERION', 'EMPIRICAL DISTRIBUTION', 'TRAINING DATA', 'MAXIMUM LIKELIHOOD ESTIMATION', 'DISSIMILARITY', 'KL DIVERGENCE', 'DATA GENERATING PROCESS', 'CROSS-ENTROPY', 'NEGATIVE LOG-LIKELIHOOD', 'BERNOULLI DISTRIBUTION', 'SOFTMAX DISTRIBUTION', 'MEAN SQUARED ERROR')","('MACHINE LEARNING', 'instance of', 'NUMERICAL UNDERFLOW')
('MACHINE LEARNING', 'based on', 'OPTIMIZATION PROBLEM')
('OPTIMIZATION PROBLEM', 'instance of', 'LIKELIHOOD')
('LIKELIHOOD', 'instance of', 'ARGMAX')
('LIKELIHOOD', 'based on', 'CRITERION')
('CRITERION', 'based on', 'EMPIRICAL DISTRIBUTION')
('EMPIRICAL DISTRIBUTION', 'based on', 'TRAINING DATA')
('CRITERION', 'instance of', 'MAXIMUM LIKELIHOOD ESTIMATION')
('DISSIMILARITY', 'instance of', 'KL DIVERGENCE')
('KL DIVERGENCE', 'based on', 'DATA GENERATING PROCESS')
('KL DIVERGENCE', 'based on', 'CROSS-ENTROPY')
('CROSS-ENTROPY', 'based on', 'NEGATIVE LOG-LIKELIHOOD')
('NEGATIVE LOG-LIKELIHOOD', 'instance of', 'BERNOULLI DISTRIBUTION')
('BERNOULLI DISTRIBUTION', 'subclass of', 'SOFTMAX DISTRIBUTION')
('SOFTMAX DISTRIBUTION', 'subclass of', 'MEAN SQUARED ERROR')"
5.8,1,"('MACHINE LEARNING', 'COST FUNCTION', 'NEGATIVE LOG-LIKELIHOOD', 'CROSS ENTROPY', 'KL DIVERGENCE', 'MAXIMUM LIKELIHOOD', 'CONDITIONAL PROBABILITY', 'SUPERVISED LEARNING', 'LINEAR REGRESSION')","('MACHINE LEARNING', 'based on', 'COST FUNCTION')
('COST FUNCTION', 'based on', 'NEGATIVE LOG-LIKELIHOOD')
('NEGATIVE LOG-LIKELIHOOD', 'based on', 'CROSS ENTROPY')
('CROSS ENTROPY', 'based on', 'KL DIVERGENCE')
('KL DIVERGENCE', 'based on', 'MAXIMUM LIKELIHOOD')
('MAXIMUM LIKELIHOOD', 'based on', 'CONDITIONAL PROBABILITY')
('CONDITIONAL PROBABILITY', 'based on', 'SUPERVISED LEARNING')
('SUPERVISED LEARNING', 'based on', 'LINEAR REGRESSION')"
5.8,2,"('MACHINE LEARNING', 'I.I.D.', 'CONDITIONAL LOG-LIKELIHOOD', 'LINEAR REGRESSION', 'MEAN SQUARED ERROR', 'MAXIMUM LIKELIHOOD', 'PARAMETERS', 'ESTIMATOR', 'CONSISTENCY')","('MACHINE LEARNING', 'based on', 'I.I.D.')
('I.I.D.', 'based on', 'CONDITIONAL LOG-LIKELIHOOD')
('CONDITIONAL LOG-LIKELIHOOD', 'based on', 'LINEAR REGRESSION')
('LINEAR REGRESSION', 'based on', 'MEAN SQUARED ERROR')
('MEAN SQUARED ERROR', 'based on', 'MAXIMUM LIKELIHOOD')
('MAXIMUM LIKELIHOOD', 'based on', 'PARAMETERS')
('PARAMETERS', 'based on', 'ESTIMATOR')
('ESTIMATOR', 'based on', 'CONSISTENCY')"
5.8,3,"('CONSISTENT ESTIMATORS', 'STATISTICAL EFFICIENCY', 'PARAMETRIC CASE', 'MEAN SQUARED ERROR', 'CRAMÉR-RAO LOWER BOUND', 'MAXIMUM LIKELIHOOD', 'BAYESIAN STATISTICS', 'PRIOR PROBABILITY DISTRIBUTION')","('CONSISTENT ESTIMATORS', 'based on', 'STATISTICAL EFFICIENCY')
('STATISTICAL EFFICIENCY', 'based on', 'PARAMETRIC CASE')
('PARAMETRIC CASE', 'based on', 'MEAN SQUARED ERROR')
('MEAN SQUARED ERROR', 'based on', 'CRAMÉR-RAO LOWER BOUND')
('CRAMÉR-RAO LOWER BOUND', 'based on', 'MAXIMUM LIKELIHOOD')
('MAXIMUM LIKELIHOOD', 'based on', 'BAYESIAN STATISTICS')
('BAYESIAN STATISTICS', 'based on', 'PRIOR PROBABILITY DISTRIBUTION')"
5.8,4,"('PRIOR PROBABILITY DISTRIBUTION', 'BAYES\' RULE', 'POSTERIOR DISTRIBUTION', 'BAYESIAN ESTIMATION', 'MAXIMUM LIKELIHOOD ESTIMATION')","('PRIOR PROBABILITY DISTRIBUTION', 'based on', 'BAYES\' RULE')
('BAYES\' RULE', 'based on', 'POSTERIOR DISTRIBUTION')
('POSTERIOR DISTRIBUTION', 'based on', 'BAYESIAN ESTIMATION')
('BAYESIAN ESTIMATION', 'based on', 'MAXIMUM LIKELIHOOD ESTIMATION')"
5.9,0,"('MACHINE LEARNING BASICS', 'Bayesian Linear Regression')","('MACHINE LEARNING BASICS', 'instance of', 'Bayesian Linear Regression')"
5.9,1,"('Bayesian Linear Regression', 'MAP Estimation')","('Bayesian Linear Regression', 'based on', 'MAP Estimation')"
5.10,0,"('MACHINE LEARNING', 'Bayesian', 'MAP', 'posterior probability', 'likelihood', 'Gaussian', 'weight decay', 'regularization', 'objective function', 'penalty term', 'prior probability distribution', 'Gaussians')","('MACHINE LEARNING', 'based on', 'Bayesian')
('Bayesian', 'based on', 'MAP')
('MAP', 'instance of', 'posterior probability')
('posterior probability', 'based on', 'likelihood')
('likelihood', 'based on', 'Gaussian')
('Gaussian', 'based on', 'weight decay')
('weight decay', 'based on', 'regularization')
('regularization', 'based on', 'objective function')
('objective function', 'based on', 'penalty term')
('penalty term', 'based on', 'prior probability distribution')
('prior probability distribution', 'based on', 'Gaussians')"
5.10,1,"('supervised learning', 'probability distribution', 'likelihood estimation', 'linear regression', 'classification', 'parametric family', 'binary variable', 'logistic sigmoid function', 'logistic regression', 'normal equations', 'optimal weights', 'log-likelihood', 'negative log-likelihood', 'gradient descent')","('supervised learning', 'based on', 'probability distribution')
('probability distribution', 'based on', 'likelihood estimation')
('likelihood estimation', 'based on', 'linear regression')
('linear regression', 'based on', 'classification')
('classification', 'based on', 'parametric family')
('parametric family', 'based on', 'binary variable')
('binary variable', 'based on', 'logistic sigmoid function')
('logistic sigmoid function', 'based on', 'logistic regression')
('logistic regression', 'based on', 'normal equations')
('normal equations', 'based on', 'optimal weights')
('optimal weights', 'based on', 'log-likelihood')
('log-likelihood', 'based on', 'negative log-likelihood')
('negative log-likelihood', 'based on', 'gradient descent')"
5.11,0,"('MACHINE LEARNING BASICS', 'support vector machine', 'logistic regression', 'kernel trick')","('MACHINE LEARNING BASICS', 'based on', 'support vector machine')
('MACHINE LEARNING BASICS', 'based on', 'logistic regression')
('support vector machine', 'subclass of', 'kernel trick')"
5.11,1,"('kernel trick', 'Gaussian kernel', 'support vector machines', 'kernel machines', 'linear models')","('kernel trick', 'based on', 'Gaussian kernel')
('Gaussian kernel', 'part of', 'support vector machines')
('kernel trick', 'subclass of', 'kernel machines')
('kernel trick', 'use', 'linear models')"
5.11,2,"('deep learning', 'neural network', 'RBF kernel SVM', 'k-nearest neighbors')","('deep learning', 'subclass of', 'neural network')
('neural network', 'based on', 'RBF kernel SVM')
('neural network', 'based on', 'k-nearest neighbors')"
5.11,3,There are no additional entity annotations in this passage.,No additional entity annotations are found.
5.11,4,"('decision tree', 'internal node', 'leaf node', 'binary string identifier', '2D plane')","('decision tree', 'based on', 'internal node')
('decision tree', 'based on', 'leaf node')
('internal node', 'instance of', 'binary string identifier')
('internal node', 'based on', '2D plane')"
5.11,5,"('machine learning basics', 'decision tree', 'Breiman et al.', 'input space', 'learning algorithm', 'region', 'parameters', 'figure 5.7', 'node', 'axis-aligned cut', 'leaf node', 'output', 'specialized algorithms', 'scope', 'non-parametric', 'size constraints', 'parametric models', 'logistic regression', 'decision boundary', 'axis-aligned splits', 'nearest neighbor predictors', 'computational resources', 'intuition', 'sophisticated algorithms', 'k-NN', 'baselines', 'Murphy (2012)', 'Bishop (2006)', 'Hastie et al. (2001)', 'machine learning textbooks', 'unsupervised learning algorithms', 'section 5.1.3', 'features', 'supervision signal', 'value', 'feature', 'target', 'supervisor', 'distribution', 'human labor', 'annotate examples', 'density estimation', 'sample drawing', 'denoise data', 'manifold', 'clustering', 'groups')","('machine learning basics', 'instance of', 'decision tree')
('decision tree', 'based on', 'Breiman et al.')
('decision tree', 'facet of', 'input space')
('decision tree', 'facet of', 'learning algorithm')
('input space', 'part of', 'region')
('learning algorithm', 'part of', 'region')
('region', 'based on', 'parameters')
('region', 'part of', 'figure 5.7')
('region', 'part of', 'node')
('region', 'part of', 'axis-aligned cut')
('region', 'part of', 'leaf node')
('axis-aligned cut', 'part of', 'output')
('leaf node', 'part of', 'output')
('output', 'based on', 'specialized algorithms')
('output', 'facet of', 'scope')
('specialized algorithms', 'facet of', 'scope')
('specialized algorithms', 'facet of', 'size constraints')
('size constraints', 'part of', 'parametric models')
('parametric models', 'based on', 'logistic regression')
('output', 'part of', 'decision boundary')
('decision boundary', 'facet of', 'axis-aligned splits')
('axis-aligned splits', 'facet of', 'nearest neighbor predictors')
('nearest neighbor predictors', 'based on', 'computational resources')
('nearest neighbor predictors', 'based on', 'intuition')
('nearest neighbor predictors', 'based on', 'sophisticated algorithms')
('sophisticated algorithms', 'facet of', 'k-NN')
('k-NN', 'based on', 'baselines')
('decision tree', 'based on', 'Murphy (2012)')
('decision tree', 'based on', 'Bishop (2006)')
('decision tree', 'based on', 'Hastie et al. (2001)')
('machine learning basics', 'based on', 'machine learning textbooks')
('unsupervised learning algorithms', 'based on', 'section 5.1.3')
('region', 'based on', 'features')
('output', 'based on', 'supervision signal')
('features', 'part of', 'value')
('value', 'part of', 'feature')
('supervision signal', 'part of', 'target')
('supervision signal', 'part of', 'supervisor')
('region', 'part of', 'distribution')
('distribution', 'based on', 'human labor')
('distribution', 'based on', 'annotate examples')
('distribution', 'based on', 'density estimation')
('distribution', 'based on', 'sample drawing')
('distribution', 'based on', 'denoise data')
('region', 'part of', 'manifold')
('manifold', 'based on', 'clustering')
('clustering', 'based on', 'groups')"
5.11,6,"('machine learning basics', 'unsupervised learning task', 'representation of the data', 'sparse representations', 'Barlow (1989)', 'Olshausen and Field (1996)', 'Hinton and Ghahramani (1997)', 'dimensionality', 'independent representations', 'sources of variation', 'data distribution', 'statistics', 'low-dimensional representations', 'dependencies', 'high-dimensional data', 'redundancies', 'deep learning', 'principal components analysis', 'compression', 'unsupervised learning algorithm')","('machine learning basics', 'based on', 'unsupervised learning task')
('unsupervised learning task', 'facet of', 'representation of the data')
('representation of the data', 'based on', 'sparse representations')
('sparse representations', 'based on', 'Barlow (1989)')
('sparse representations', 'based on', 'Olshausen and Field (1996)')
('sparse representations', 'based on', 'Hinton and Ghahramani (1997)')
('representation of the data', 'facet of', 'dimensionality')
('dimensionality', 'facet of', 'independent representations')
('independent representations', 'based on', 'sources of variation')
('data distribution', 'facet of', 'statistics')
('statistics', 'facet of', 'low-dimensional representations')
('low-dimensional representations', 'based on', 'dependencies')
('low-dimensional representations', 'facet of', 'high-dimensional data')
('high-dimensional data', 'based on', 'redundancies')
('redundancies', 'based on', 'deep learning')
('redundancies', 'based on', 'principal components analysis')
('low-dimensional representations', 'facet of', 'compression')
('compression', 'based on', 'unsupervised learning algorithm')"
5.11,7,"('machine learning basics', 'linear projection', 'variance', 'new space', 'original data', 'axis-aligned', 'transformed data', 'variance', 'linear correlation', 'representation learning algorithm', 'nonlinear relationships', 'orthogonal', 'transformation', 'input', 'representation', 'dimensionality reduction method', 'information', 'least-squares reconstruction error', 'PCA representation', 'decorrelation', 'design matrix', 'mean', 'sample covariance matrix')","('machine learning basics', 'based on', 'linear projection')
('linear projection', 'facet of', 'variance')
('linear projection', 'facet of', 'new space')
('new space', 'facet of', 'original data')
('linear projection', 'facet of', 'axis-aligned')
('original data', 'facet of', 'transformed data')
('transformed data', 'facet of', 'variance')
('transformed data', 'facet of', 'linear correlation')
('representation learning algorithm', 'facet of', 'nonlinear relationships')
('transformed data', 'facet of', 'orthogonal')
('orthogonal', 'part of', 'transformation')
('input', 'facet of', 'representation')
('representation', 'facet of', 'dimensionality reduction method')
('dimensionality reduction method', 'facet of', 'information')
('dimensionality reduction method', 'facet of', 'least-squares reconstruction error')
('least-squares reconstruction error', 'based on', 'PCA representation')
('PCA representation', 'facet of', 'decorrelation')
('original data', 'facet of', 'design matrix')
('design matrix', 'facet of', 'mean')
('design matrix', 'facet of', 'sample covariance matrix')"
5.11,8,"('machine learning basics', 'linear transformation', 'representation', 'variance', 'design matrix', 'principal components', 'eigenvectors', 'singular value decomposition', 'right singular vectors', 'variance of X', 'covariance of z')","('machine learning basics', 'based on', 'linear transformation')
('linear transformation', 'facet of', 'representation')
('representation', 'facet of', 'variance')
('representation', 'facet of', 'design matrix')
('design matrix', 'facet of', 'principal components')
('principal components', 'based on', 'eigenvectors')
('principal components', 'based on', 'singular value decomposition')
('singular value decomposition', 'based on', 'right singular vectors')
('variance of X', 'part of', 'representation')
('representation', 'facet of', 'covariance of z')"
5.11,9,"('linear transformation', 'diagonal covariance matrix', 'uncorrelated', 'unknown factors of variation', 'rotation', 'principal axes of variance', 'basis', 'correlation', 'dependency', 'k-means clustering', 'clusters', 'one-hot code vector', 'sparse representation', 'distributed representation', 'centroids', 'convergence', 'training examples')","('linear transformation', 'facet of', 'diagonal covariance matrix')
('diagonal covariance matrix', 'facet of', 'uncorrelated')
('uncorrelated', 'facet of', 'unknown factors of variation')
('linear transformation', 'facet of', 'rotation')
('rotation', 'facet of', 'principal axes of variance')
('rotation', 'facet of', 'basis')
('correlation', 'facet of', 'dependency')
('k-means clustering', 'based on', 'clusters')
('clusters', 'based on', 'one-hot code vector')
('sparse representation', 'facet of', 'distributed representation')
('clusters', 'based on', 'centroids')
('centroids', 'based on', 'convergence')
('convergence', 'based on', 'training examples')"
5.11,10,"('MACHINE LEARNING', 'clustering', 'Euclidean distance', 'training data', 'cluster assignments', 'real world', 'clustering algorithms', 'dataset', 'images', 'red trucks', 'red cars', 'gray trucks', 'gray cars', 'number of clusters', 'attributes', 'distributed representation', 'learning algorithm', 'color', 'car', 'truck', 'manufacturer', 'age', 'optimal distributed representation', 'learning algorithm', 'many attributes', 'similarity', 'objects', 'fine-grained way', 'testing', 'Stochastic Gradient Descent')","('clustering', 'based on', 'Euclidean distance')
('clustering', 'use', 'training data')
('clustering', 'use', 'cluster assignments')
('clustering', 'part of', 'real world')
('clustering', 'use', 'clustering algorithms')
('clustering', 'use', 'dataset')
('dataset', 'instance of', 'images')
('dataset', 'part of', 'red trucks')
('dataset', 'part of', 'red cars')
('dataset', 'part of', 'gray trucks')
('dataset', 'part of', 'gray cars')
('clustering', 'use', 'number of clusters')
('clustering', 'use', 'attributes')
('learning algorithm', 'instance of', 'distributed representation')
('learning algorithm', 'use', 'color')
('learning algorithm', 'subclass of', 'car')
('learning algorithm', 'subclass of', 'truck')
('learning algorithm', 'use', 'manufacturer')
('learning algorithm', 'use', 'age')
('learning algorithm', 'use', 'optimal distributed representation')
('learning algorithm', 'use', 'many attributes')
('learning algorithm', 'use', 'similarity')
('learning algorithm', 'use', 'objects')
('learning algorithm', 'use', 'fine-grained way')
('learning algorithm', 'facet of', 'testing')
('learning algorithm', 'use', 'Stochastic Gradient Descent')"
5.11,11,"('MACHINE LEARNING', 'gradient descent algorithm', 'training sets', 'generalization', 'computational cost', 'per-example loss function', 'conditional log-likelihood', 'training data', 'additive cost functions', 'gradient step', 'stochastic gradient descent', 'expectation', 'sample', 'minibatch', 'training set size', 'estimate of the gradient', 'learning rate')","('gradient descent algorithm', 'use', 'training sets')
('gradient descent algorithm', 'use', 'generalization')
('gradient descent algorithm', 'use', 'computational cost')
('gradient descent algorithm', 'use', 'per-example loss function')
('gradient descent algorithm', 'use', 'conditional log-likelihood')
('gradient descent algorithm', 'use', 'training data')
('additive cost functions', 'use', 'gradient step')
('additive cost functions', 'use', 'stochastic gradient descent')
('stochastic gradient descent', 'use', 'expectation')
('stochastic gradient descent', 'use', 'sample')
('stochastic gradient descent', 'use', 'minibatch')
('stochastic gradient descent', 'use', 'training set size')
('stochastic gradient descent', 'use', 'estimate of the gradient')
('stochastic gradient descent', 'use', 'learning rate')"
5.11,12,"('MACHINE LEARNING', 'gradient descent', 'non-convex optimization problems', 'machine learning models', 'cost function', 'stochastic gradient descent', 'linear models', 'linear model', 'training set size', 'test error', 'asymptotic cost', 'kernel trick', 'kernel learning algorithms', 'deep learning', 'new examples', 'competiting algorithms', 'datasets', 'tens of thousands of examples', 'scalable way', 'enhancements', 'building a machine learning algorithm', 'linear regression algorithm', 'dataset')","('gradient descent', 'use', 'non-convex optimization problems')
('gradient descent', 'use', 'machine learning models')
('gradient descent', 'use', 'cost function')
('gradient descent', 'use', 'stochastic gradient descent')
('linear models', 'use', 'linear model')
('linear models', 'use', 'training set size')
('linear models', 'use', 'test error')
('linear models', 'use', 'asymptotic cost')
('linear models', 'use', 'kernel trick')
('kernel trick', 'use', 'kernel learning algorithms')
('machine learning models', 'use', 'deep learning')
('machine learning models', 'use', 'new examples')
('machine learning models', 'use', 'competiting algorithms')
('machine learning models', 'use', 'datasets')
('competiting algorithms', 'use', 'tens of thousands of examples')
('building a machine learning algorithm', 'use', 'scalable way')
('building a machine learning algorithm', 'use', 'enhancements')
('linear regression algorithm', 'instance of', 'building a machine learning algorithm')
('linear regression algorithm', 'use', 'dataset')"
5.11,13,"('MACHINE LEARNING', 'cost function', 'maximum likelihood estimation', 'regularization terms', 'weight decay', 'linear regression', 'closed-form optimization', 'iterative numerical optimization procedure', 'gradient descent', 'supervised learning', 'unsupervised learning', 'PCA vector', 'loss function', 'reconstruction function', 'approximating gradients', 'unique')","('cost function', 'use', 'maximum likelihood estimation')
('cost function', 'use', 'regularization terms')
('regularization terms', 'use', 'weight decay')
('linear regression', 'use', 'closed-form optimization')
('linear regression', 'use', 'iterative numerical optimization procedure')
('iterative numerical optimization procedure', 'use', 'gradient descent')
('supervised learning', 'use', 'loss function')
('unsupervised learning', 'use', 'loss function')
('unsupervised learning', 'use', 'reconstruction function')
('reconstruction function', 'use', 'approximating gradients')
('PCA vector', 'part of', 'unique')"
5.11,14,"('MACHINE LEARNING', 'special-case optimizer', 'decision trees', 'k-means', 'gradient-based optimizers', 'taxonomy of methods', 'challenges motivating deep learning', 'AI tasks', 'generalization', 'high-dimensional data', 'complicated functions', 'curse of dimensionality', 'distinct configurations', 'exponentially')","('special-case optimizer', 'subclass of', 'decision trees')
('special-case optimizer', 'subclass of', 'k-means')
('special-case optimizer', 'subclass of', 'gradient-based optimizers')
('taxonomy of methods', 'use', 'challenges motivating deep learning')
('AI tasks', 'use', 'generalization')
('AI tasks', 'use', 'high-dimensional data')
('AI tasks', 'use', 'complicated functions')
('complicated functions', 'facet of', 'curse of dimensionality')
('curse of dimensionality', 'use', 'distinct configurations')
('curse of dimensionality', 'use', 'exponentially')"
5.11,15,"('machine learning', 'dimensions', 'learning algorithms', 'target function', 'regression', 'curse of dimensionality', 'statistical challenge', 'input space')","('machine learning', 'facet of', 'dimensions')
('learning algorithms', 'part of', 'machine learning')
('target function', 'facet of', 'learning algorithms')
('regression', 'facet of', 'learning algorithms')
('curse of dimensionality', 'facet of', 'statistical challenge')
('statistical challenge', 'facet of', 'learning algorithms')
('input space', 'facet of', 'learning algorithms')"
6.1,0,"('MACHINE LEARNING BASICS', 'machine learning algorithms', 'smoothness prior', 'local constancy prior')","('MACHINE LEARNING BASICS', 'machine learning algorithms', 'smoothness prior')

('MACHINE LEARNING BASICS', 'machine learning algorithms', 'local constancy prior')"
6.1,1,"('local kernels', 'deep learning', 'decision trees')","('local kernels', 'deep learning', 'decision trees')"
6.1,2,"('nearest neighbor algorithm', 'Voronoi diagram')","('nearest neighbor algorithm', 'based on', 'Voronoi diagram')"
6.1,3,"('deep learning algorithms', 'data generating distribution')","('deep learning algorithms', 'based on', 'data generating distribution')"
6.1,4,('manifold'),"('manifold', 'instance of', 'mathematical concept')"
6.1,5,"('MACHINE LEARNING', 'Rn', 'Manifold learning', 'continuous-valued data', 'unsupervised learning', 'probability concentration', 'discrete data', 'supervised learning', 'AI tasks', 'images', 'sounds', 'text', 'manifold assumption', 'probability distribution', 'real life', 'Uniform noise', 'analog television sets', 'document', 'English-language text', 'natural language sequence', 'total space', 'sequences of letters')","('MACHINE LEARNING', 'instance of', 'Rn')
('MACHINE LEARNING', 'instance of', 'Manifold learning')
('Rn', 'part of', 'Manifold learning')
('continuous-valued data', 'instance of', 'Rn')
('unsupervised learning', 'instance of', 'MACHINE LEARNING')
('probability concentration', 'subclass of', 'probability distribution')
('discrete data', 'instance of', 'Rn')
('supervised learning', 'instance of', 'MACHINE LEARNING')
('AI tasks', 'instance of', 'MACHINE LEARNING')
('images', 'instance of', 'AI tasks')
('sounds', 'instance of', 'AI tasks')
('text', 'instance of', 'AI tasks')
('manifold assumption', 'part of', 'MACHINE LEARNING')
('probability distribution', 'part of', 'MACHINE LEARNING')
('real life', 'part of', 'MACHINE LEARNING')
('Uniform noise', 'instance of', 'AI tasks')
('analog television sets', 'instance of', 'AI tasks')
('document', 'instance of', 'text')
('English-language text', 'part of', 'text')
('natural language sequence', 'instance of', 'sequences of letters')
('total space', 'part of', 'Rn')
('sequences of letters', 'subclass of', 'Rn')"
6.2,0,"('MACHINE LEARNING BASICS', 'sampling images', 'uniform distribution', 'noisy images', 'face', 'object', 'AI applications', 'image space', 'probability distributions', 'data', 'manifolds', 'examples')","('MACHINE LEARNING BASICS', 'instance of', 'sampling images')
('sampling images', 'based on', 'uniform distribution')
('sampling images', 'facet of', 'noisy images')
('noisy images', 'instance of', 'face')
('noisy images', 'instance of', 'object')
('noisy images', 'subject of', 'AI applications')
('uniform distribution', 'based on', 'probability distributions')
('probability distributions', 'part of', 'data')
('data', 'subclass of', 'manifolds')
('examples', 'use', 'manifolds')"
6.2,1,"('MACHINE LEARNING BASICS', 'manifold hypothesis', 'transformation', 'image space', 'images', 'human faces', 'cat faces', 'thought experiments', 'rigorous experiments', 'low-dimensional manifold', 'coordinates', 'machine learning algorithms', 'datasets', 'address numbers', 'manifold coordinates', 'improve', 'manifold structure', 'deep learning')","('MACHINE LEARNING BASICS', 'instance of', 'manifold hypothesis')
('manifold hypothesis', 'based on', 'transformation')
('transformation', 'instance of', 'image space')
('images', 'instance of', 'human faces')
('images', 'instance of', 'cat faces')
('manifold hypothesis', 'subject of', 'thought experiments')
('thought experiments', 'subject of', 'rigorous experiments')
('low-dimensional manifold', 'instance of', 'coordinates')
('machine learning algorithms', 'based on', 'datasets')
('datasets', 'address numbers', 'manifold coordinates')
('manifold coordinates', 'improve', 'manifold structure')
('manifold structure', 'use', 'deep learning')"
6.2,2,"('MACHINE LEARNING BASICS', 'Training examples', 'QMUL Multiview Face Dataset', 'subjects', 'two-dimensional manifold', 'angles of rotation', 'learning algorithms', 'manifold coordinates', 'feat')","('MACHINE LEARNING BASICS', 'instance of', 'Training examples')
('Training examples', 'based on', 'QMUL Multiview Face Dataset')
('QMUL Multiview Face Dataset', 'subject of', 'subjects')
('subjects', 'instance of', 'two-dimensional manifold')
('two-dimensional manifold', 'based on', 'angles of rotation')
('learning algorithms', 'based on', 'manifold coordinates')
('manifold coordinates', 'facet of', 'feat')"
6.2,3,"('Deep Networks', 'Modern Practices')","('Deep Networks', 'instance of', 'Modern Practices')"
6.2,4,"('Deep learning', 'aspirations', 'approaches', 'fruit', 'ambitious goals', 'less-developed branches', 'working technologies', 'industry', 'supervised learning', 'deep network', 'functions', 'complexity', 'input vector', 'output vector', 'large models', 'large datasets', 'labeled training examples', 'core parametric function approximation technology', 'feedforward deep network model', 'advanced techniques', 'regularization', 'optimization', 'scaling', 'convolutional network', 'recurrent neural network', 'practical methodology', 'designing', 'building', 'configuring', 'real-world problems', 'practitioner')","('Deep learning', 'instance of', 'aspirations')
('deep network', 'facet of', 'approaches')
('fruit', 'instance of', 'ambitious goals')
('less-developed branches', 'subject of', 'working technologies')
('industry', 'subclass of', 'working technologies')
('supervised learning', 'based on', 'deep network')
('deep network', 'based on', 'functions')
('functions', 'based on', 'complexity')
('input vector', 'based on', 'complexity')
('output vector', 'based on', 'complexity')
('large models', 'based on', 'complexity')
('large datasets', 'based on', 'complexity')
('labeled training examples', 'based on', 'core parametric function approximation technology')
('core parametric function approximation technology', 'instance of', 'feedforward deep network model')
('advanced techniques', 'based on', 'core parametric function approximation technology')
('regularization', 'facet of', 'core parametric function approximation technology')
('optimization', 'facet of', 'core parametric function approximation technology')
('scaling', 'primitive part of', 'core parametric function approximation technology')
('convolutional network', 'instance of', 'core parametric function approximation technology')
('recurrent neural network', 'instance of', 'core parametric function approximation technology')
('practical methodology', 'instance of', 'designing')
('designing', 'facet of', 'building')
('building', 'facet of', 'configuring')
('real-world problems', 'instance of', 'configuring')
('practitioner', 'use', 'real-world problems')"
6.2,5,"('Deep Feedforward Networks', 'feedforward neural networks', 'multilayer perceptrons (MLPs)', 'classifier', 'feedforward network', 'function approximation', 'parameters', 'θ', 'feedback connections', 'recurrent neural networks', 'machine learning practitioners', 'commercial applications', 'convolutional networks', 'object recognition', 'photos', 'natural language applications', 'directed acyclic graph', 'neural networks', 'first layer', 'second layer')","('Deep Feedforward Networks', 'instance of', 'feedforward neural networks')
('multilayer perceptrons (MLPs)', 'instance of', 'feedforward neural networks')
('classifier', 'instance of', 'feedforward neural networks')
('feedforward network', 'instance of', 'feedforward neural networks')
('function approximation', 'instance of', 'feedforward neural networks')
('parameters', 'instance of', 'feedforward neural networks')
('θ', 'instance of', 'feedforward neural networks')
('feedback connections', 'instance of', 'recurrent neural networks')
('recurrent neural networks', 'subclass of', 'neural networks')
('machine learning practitioners', 'use', 'neural networks')
('commercial applications', 'use', 'neural networks')
('convolutional networks', 'subclass of', 'neural networks')
('object recognition', 'use', 'convolutional networks')
('photos', 'instance of', 'objects')
('natural language applications', 'use', 'neural networks')
('directed acyclic graph', 'subclass of', 'neural networks')
('neural networks', 'instance of', 'Deep Feedforward Networks')
('neural networks', 'use', 'machine learning practitioners')
('neural networks', 'use', 'commercial applications')
('neural networks', 'use', 'natural language applications')
('neural networks', 'use', 'directed acyclic graph')
('first layer', 'part of', 'feedforward network')
('second layer', 'part of', 'feedforward network')"
6.2,6,"('neural network training', 'output layer', 'training data', 'learning algorithm', 'hidden layers', 'neuron', 'vector-valued representation', 'functions', 'biological neurons', 'mathematical', 'engineering disciplines', 'function approximation machines', 'statistical generalization', 'linear models', 'logistic regression', 'linear regression', 'model capacity', 'nonlinear functions', 'transformed input')","('neural network training', 'use', 'learning algorithm')
('output layer', 'part of', 'neural network training')
('training data', 'part of', 'neural network training')
('learning algorithm', 'use', 'neural network training')
('hidden layers', 'part of', 'neural network training')
('neuron', 'part of', 'neural network training')
('vector-valued representation', 'part of', 'neural network training')
('functions', 'part of', 'neural network training')
('biological neurons', 'instance of', 'neuron')
('mathematical', 'part of', 'engineering disciplines')
('engineering disciplines', 'instance of', 'functions')
('function approximation machines', 'instance of', 'functions')
('statistical generalization', 'part of', 'functions')
('linear models', 'subclass of', 'functions')
('logistic regression', 'subclass of', 'linear models')
('linear regression', 'subclass of', 'linear models')
('model capacity', 'part of', 'functions')
('nonlinear functions', 'subclass of', 'functions')
('transformed input', 'part of', 'functions')"
6.2,7,"('kernel trick', 'nonlinear learning algorithm', 'features', 'deep learning', 'model', 'parameters', 'representation', 'optimization algorithm', 'benefits outweigh the harms', 'parametrize the representation', 'knowledge', 'designing families', 'improving models', 'recurring theme', 'learning deterministic')","('kernel trick', 'instance of', 'nonlinear learning algorithm')
('features', 'part of', 'nonlinear learning algorithm')
('deep learning', 'subclass of', 'model')
('model', 'part of', 'nonlinear learning algorithm')
('parameters', 'part of', 'nonlinear learning algorithm')
('representation', 'part of', 'nonlinear learning algorithm')
('optimization algorithm', 'part of', 'nonlinear learning algorithm')
('benefits outweigh the harms', 'part of', 'nonlinear learning algorithm')
('parametrize the representation', 'part of', 'nonlinear learning algorithm')
('knowledge', 'part of', 'nonlinear learning algorithm')
('designing families', 'part of', 'nonlinear learning algorithm')
('improving models', 'part of', 'nonlinear learning algorithm')
('recurring theme', 'part of', 'nonlinear learning algorithm')
('learning deterministic', 'part of', 'nonlinear learning algorithm')"
6.2,8,"('hidden layer', 'activation functions', 'architecture', 'back-propagation algorithm', 'historical perspective', 'XOR function', 'binary values', 'target function', 'learning algorithm', 'parameters', 'statistical generalization', 'training set', 'regression problem', 'mean squared error loss function')","('hidden layer', 'part of', 'architecture')
('activation functions', 'part of', 'hidden layer')
('architecture', 'part of', 'back-propagation algorithm')
('back-propagation algorithm', 'part of', 'learning algorithm')
('historical perspective', 'part of', 'back-propagation algorithm')
('XOR function', 'part of', 'back-propagation algorithm')
('binary values', 'part of', 'target function')
('target function', 'part of', 'back-propagation algorithm')
('learning algorithm', 'use', 'back-propagation algorithm')
('parameters', 'part of', 'learning algorithm')
('statistical generalization', 'part of', 'learning algorithm')
('training set', 'part of', 'learning algorithm')
('regression problem', 'part of', 'learning algorithm')
('mean squared error loss function', 'part of', 'learning algorithm')"
6.2,9,"('cost function', 'model', 'linear model', 'hidden layer', 'hidden units', 'feedforward network', 'input', 'output layer', 'function', 'chained together', 'affine transformation', 'activation function', 'weights', 'biases', 'linear regression')","('cost function', 'part of', 'model')
('model', 'instance of', 'linear model')
('linear model', 'part of', 'feedforward network')
('hidden layer', 'part of', 'feedforward network')
('hidden units', 'part of', 'hidden layer')
('feedforward network', 'use', 'chained together')
('input', 'part of', 'feedforward network')
('output layer', 'part of', 'feedforward network')
('function', 'part of', 'affine transformation')
('chained together', 'part of', 'affine transformation')
('affine transformation', 'part of', 'activation function')
('activation function', 'part of', 'hidden layer')
('weights', 'part of', 'affine transformation')
('biases', 'part of', 'affine transformation')
('linear regression', 'part of', 'linear model')"
6.2,10,"('DEEP FEEDFORWARD NETWORKS', 'XOR', 'x', 'h', 'linear model')","('DEEP FEEDFORWARD NETWORKS', 'instance of', 'XOR')
('XOR', 'head', 'x')
('XOR', 'head', 'h')
('XOR', 'head', 'linear model')"
6.2,11,"('DEEP FEEDFORWARD NETWORKS', 'XOR', 'feedforward network', 'hidden layer', 'activations', 'matrix W', 'vector w', 'affine transformation', 'input vector', 'output scalar', 'bias parameter', 'activation function', 'rectified linear unit', 'ReLU', 'figure 6.3', 'network', 'solution to the XOR problem')","('DEEP FEEDFORWARD NETWORKS', 'instance of', 'XOR')
('XOR', 'head', 'feedforward network')
('feedforward network', 'part of', 'hidden layer')
('hidden layer', 'part of', 'activations')
('activations', 'part of', 'matrix W')
('activations', 'part of', 'vector w')
('matrix W', 'part of', 'affine transformation')
('vector w', 'part of', 'affine transformation')
('affine transformation', 'based on', 'input vector')
('affine transformation', 'based on', 'output scalar')
('affine transformation', 'based on', 'bias parameter')
('affine transformation', 'based on', 'activation function')
('activation function', 'subclass of', 'rectified linear unit')
('rectified linear unit', 'subclass of', 'ReLU')
('ReLU', 'part of', 'figure 6.3')
('figure 6.3', 'part of', 'network')
('network', 'instance of', 'solution to the XOR problem')"
6.2,12,"('rectified linear activation function', 'linear transformation', 'nonlinear transformation', 'piecewise linear function', 'gradient-based methods', 'linear models', 'universal function approximator')","('rectified linear activation function', 'subclass of', 'linear transformation')
('linear transformation', 'subclass of', 'nonlinear transformation')
('nonlinear transformation', 'subclass of', 'piecewise linear function')
('piecewise linear function', 'use', 'gradient-based methods')
('linear models', 'subclass of', 'universal function approximator')"
6.2,13,"('weight matrix', 'bias vector', 'input matrix', 'neural network', 'linear model', 'rectified linear transformation', 'output', 'slope', 'examples', 'space', 'weight vector')","('weight matrix', 'part of', 'neural network')
('bias vector', 'part of', 'neural network')
('input matrix', 'part of', 'neural network')
('neural network', 'instance of', 'linear model')
('linear model', 'based on', 'rectified linear transformation')
('rectified linear transformation', 'output', 'output')
('rectified linear transformation', 'output', 'slope')
('linear model', 'based on', 'examples')
('examples', 'part of', 'space')
('space', 'part of', 'weight vector')"
6.3,0,"('Deep Feedforward Networks', 'neural network', 'batch', 'solution', 'error', 'model parameters', 'training examples', 'gradient-based optimization algorithm', 'XOR problem', 'loss function', 'gradient descent', 'initial values', 'parameters', 'machine learning model', 'nonlinearity', 'non-convex', 'iterative', 'optimizers', 'cost function', 'model family', 'linear models', 'linear regression models', 'convex optimization', 'global convergence', 'stochastic gradient descent', 'biases', 'random values', 'feedforward neural networks', 'weights', 'iterative gradient-based optimization algorithms', 'deep models', 'parameter initialization', 'training algorithm', 'gradient', 'cost function', 'specific algorithms', 'gradient descent')","('Deep Feedforward Networks', 'instance of', 'neural network')
('neural network', 'subclass of', 'Deep Feedforward Networks')
('batch', 'part of', 'Deep Feedforward Networks')
('solution', 'based on', 'Deep Feedforward Networks')
('error', 'based on', 'Deep Feedforward Networks')
('model parameters', 'based on', 'Deep Feedforward Networks')
('training examples', 'based on', 'Deep Feedforward Networks')
('gradient-based optimization algorithm', 'based on', 'Deep Feedforward Networks')
('XOR problem', 'based on', 'Deep Feedforward Networks')
('loss function', 'based on', 'Deep Feedforward Networks')
('gradient descent', 'based on', 'Deep Feedforward Networks')
('initial values', 'based on', 'Deep Feedforward Networks')
('parameters', 'based on', 'Deep Feedforward Networks')
('machine learning model', 'based on', 'Deep Feedforward Networks')
('nonlinearity', 'based on', 'Deep Feedforward Networks')
('non-convex', 'based on', 'Deep Feedforward Networks')
('iterative', 'based on', 'Deep Feedforward Networks')
('optimizers', 'based on', 'Deep Feedforward Networks')
('cost function', 'based on', 'Deep Feedforward Networks')
('model family', 'based on', 'Deep Feedforward Networks')
('linear models', 'based on', 'Deep Feedforward Networks')
('linear regression models', 'based on', 'Deep Feedforward Networks')
('convex optimization', 'based on', 'Deep Feedforward Networks')
('global convergence', 'based on', 'Deep Feedforward Networks')
('stochastic gradient descent', 'based on', 'Deep Feedforward Networks')
('biases', 'based on', 'Deep Feedforward Networks')
('random values', 'based on', 'Deep Feedforward Networks')
('feedforward neural networks', 'based on', 'Deep Feedforward Networks')
('weights', 'based on', 'Deep Feedforward Networks')
('iterative gradient-based optimization algorithms', 'based on', 'Deep Feedforward Networks')
('deep models', 'based on', 'Deep Feedforward Networks')
('parameter initialization', 'based on', 'Deep Feedforward Networks')
('training algorithm', 'based on', 'Deep Feedforward Networks')
('gradient', 'based on', 'Deep Feedforward Networks')
('cost function', 'based on', 'Deep Feedforward Networks')
('specific algorithms', 'based on', 'Deep Feedforward Networks')
('gradient descent', 'based on', 'Deep Feedforward Networks')"
6.3,1,"('Deep Feedforward Networks', 'stochastic gradient descent algorithm', 'linear regression', 'support vector machines', 'neural network', 'gradient', 'back-propagation algorithm', 'generalizations', 'cost function', 'parametric models', 'distribution', 'maximum likelihood', 'cross-entropy', 'training data', 'model predictions', 'predict', 'probability distribution', 'specialized loss functions', 'total cost function', 'regularization term', 'weight decay approach', 'advanced regularization strategies', 'learning', 'conditional distributions', 'negative log-likelihood')","('Deep Feedforward Networks', 'instance of', 'neural network')
('stochastic gradient descent algorithm', 'based on', 'Deep Feedforward Networks')
('linear regression', 'based on', 'Deep Feedforward Networks')
('support vector machines', 'based on', 'Deep Feedforward Networks')
('neural network', 'subclass of', 'Deep Feedforward Networks')
('gradient', 'based on', 'Deep Feedforward Networks')
('back-propagation algorithm', 'based on', 'Deep Feedforward Networks')
('generalizations', 'based on', 'Deep Feedforward Networks')
('cost function', 'based on', 'Deep Feedforward Networks')
('parametric models', 'based on', 'Deep Feedforward Networks')
('distribution', 'based on', 'Deep Feedforward Networks')
('maximum likelihood', 'based on', 'Deep Feedforward Networks')
('cross-entropy', 'based on', 'Deep Feedforward Networks')
('training data', 'based on', 'Deep Feedforward Networks')
('model predictions', 'based on', 'Deep Feedforward Networks')
('predict', 'based on', 'Deep Feedforward Networks')
('probability distribution', 'based on', 'Deep Feedforward Networks')
('specialized loss functions', 'based on', 'Deep Feedforward Networks')
('total cost function', 'based on', 'Deep Feedforward Networks')
('regularization term', 'based on', 'Deep Feedforward Networks')
('weight decay approach', 'based on', 'Deep Feedforward Networks')
('advanced regularization strategies', 'based on', 'Deep Feedforward Networks')
('learning', 'based on', 'Deep Feedforward Networks')
('conditional distributions', 'based on', 'Deep Feedforward Networks')
('negative log-likelihood', 'based on', 'Deep Feedforward Networks')"
6.3,2,"('Deep Feedforward Networks', 'cross-entropy', 'training data', 'model distribution', 'cost function', 'J(θ)', 'logp', 'model parameters', 'mean squared error cost', 'output distribution', 'maximum likelihood estimation', 'linear model', 'output units', 'activation functions', 'negative log-likelihood', 'guide', 'learning algorithm', 'saturate', 'gradient', 'hidden units', 'output units', 'exp function', 'log function', 'maximum likelihood estimation', 'minimum value', 'discrete output variables', 'parametrized', 'probability', 'Logistic regression', 'real-valued output variables')","('Deep Feedforward Networks', 'instance of', 'neural network')
('cross-entropy', 'based on', 'Deep Feedforward Networks')
('training data', 'based on', 'Deep Feedforward Networks')
('model distribution', 'based on', 'Deep Feedforward Networks')
('cost function', 'based on', 'Deep Feedforward Networks')
('J(θ)', 'based on', 'Deep Feedforward Networks')
('logp', 'based on', 'Deep Feedforward Networks')
('model parameters', 'based on', 'Deep Feedforward Networks')
('mean squared error cost', 'based on', 'Deep Feedforward Networks')
('output distribution', 'based on', 'Deep Feedforward Networks')
('maximum likelihood estimation', 'based on', 'Deep Feedforward Networks')
('linear model', 'based on', 'Deep Feedforward Networks')
('output units', 'based on', 'Deep Feedforward Networks')
('activation functions', 'based on', 'Deep Feedforward Networks')
('negative log-likelihood', 'based on', 'Deep Feedforward Networks')
('guide', 'based on', 'Deep Feedforward Networks')
('learning algorithm', 'based on', 'Deep Feedforward Networks')
('saturate', 'based on', 'Deep Feedforward Networks')
('gradient', 'based on', 'Deep Feedforward Networks')
('hidden units', 'based on', 'Deep Feedforward Networks')
('output units', 'based on', 'Deep Feedforward Networks')
('exp function', 'based on', 'Deep Feedforward Networks')
('log function', 'based on', 'Deep Feedforward Networks')
('maximum likelihood estimation', 'based on', 'Deep Feedforward Networks')
('minimum value', 'based on', 'Deep Feedforward Networks')
('discrete output variables', 'based on', 'Deep Feedforward Networks')
('parametrized', 'based on', 'Deep Feedforward Networks')
('probability', 'based on', 'Deep Feedforward Networks')
('Logistic regression', 'based on', 'Deep Feedforward Networks')
('real-valued output variables', 'based on', 'Deep Feedforward Networks')"
6.3,3,"('Deep Feedforward Networks', 'density', 'output distribution', 'variance parameter', 'Gaussian output distribution', 'training set outputs', 'cross-entropy', 'negative infinity', 'regularization techniques', 'learning problem', 'conditional statistics', 'predictor', 'neural network', 'function', 'parametric form', 'cost functional', 'minimum', 'optimization problem', 'mathematical tool', 'calculus of variations', 'optimization problem', 'mean squared error cost function', 'data generating distribution')","('Deep Feedforward Networks', 'instance of', 'neural network')
('density', 'based on', 'Deep Feedforward Networks')
('output distribution', 'based on', 'Deep Feedforward Networks')
('variance parameter', 'based on', 'Deep Feedforward Networks')
('Gaussian output distribution', 'based on', 'Deep Feedforward Networks')
('training set outputs', 'based on', 'Deep Feedforward Networks')
('cross-entropy', 'based on', 'Deep Feedforward Networks')
('negative infinity', 'based on', 'Deep Feedforward Networks')
('regularization techniques', 'based on', 'Deep Feedforward Networks')
('learning problem', 'based on', 'Deep Feedforward Networks')
('conditional statistics', 'based on', 'Deep Feedforward Networks')
('predictor', 'based on', 'Deep Feedforward Networks')
('neural network', 'subclass of', 'Deep Feedforward Networks')
('function', 'based on', 'Deep Feedforward Networks')
('parametric form', 'based on', 'Deep Feedforward Networks')
('cost functional', 'based on', 'Deep Feedforward Networks')
('minimum', 'based on', 'Deep Feedforward Networks')
('optimization problem', 'based on', 'Deep Feedforward Networks')
('mathematical tool', 'based on', 'Deep Feedforward Networks')
('calculus of variations', 'based on', 'Deep Feedforward Networks')
('optimization problem', 'based on', 'Deep Feedforward Networks')
('mean squared error cost function', 'based on', 'Deep Feedforward Networks')
('data generating distribution', 'based on', 'Deep Feedforward Networks')"
6.3,4,"('Deep Feedforward Networks', 'cost functions', 'statistics', 'calculus of variations', 'mean squared error', 'mean absolute error', 'gradient-based optimization', 'output units', 'cross-entropy', 'output unit', 'data distribution', 'model distribution', 'neural network unit', 'hidden unit', 'output layer', 'features', 'linear units', 'affine transformation', 'nonlinearity', 'linear output units', 'Gaussian output distributions', 'conditional Gaussian distribution')","('Deep Feedforward Networks', 'instance of', 'neural network')
('cost functions', 'based on', 'Deep Feedforward Networks')
('statistics', 'based on', 'Deep Feedforward Networks')
('calculus of variations', 'based on', 'Deep Feedforward Networks')
('mean squared error', 'based on', 'Deep Feedforward Networks')
('mean absolute error', 'based on', 'Deep Feedforward Networks')
('gradient-based optimization', 'based on', 'Deep Feedforward Networks')
('output units', 'based on', 'Deep Feedforward Networks')
('cross-entropy', 'based on', 'Deep Feedforward Networks')
('output unit', 'based on', 'Deep Feedforward Networks')
('data distribution', 'based on', 'Deep Feedforward Networks')
('model distribution', 'based on', 'Deep Feedforward Networks')
('neural network unit', 'based on', 'Deep Feedforward Networks')
('hidden unit', 'based on', 'Deep Feedforward Networks')
('output layer', 'based on', 'Deep Feedforward Networks')
('features', 'based on', 'Deep Feedforward Networks')
('linear units', 'based on', 'Deep Feedforward Networks')
('affine transformation', 'based on', 'Deep Feedforward Networks')
('nonlinearity', 'based on', 'Deep Feedforward Networks')
('linear output units', 'based on', 'Deep Feedforward Networks')
('Gaussian output distributions', 'based on', 'Deep Feedforward Networks')
('conditional Gaussian distribution', 'based on', 'Deep Feedforward Networks')"
6.3,5,"('deep feedforward networks', 'log-likelihood', 'mean squared error', 'maximum likelihood framework', 'Gaussian', 'input', 'covariance', 'positive definite matrix', 'linear output layer', 'output units', 'parametrize', 'modeling the covariance', 'linear units', 'gradient- based optimization algorithms', 'optimization algorithms', 'sigmoid units', 'Bernoulli output distributions', 'binary variable', 'Bernoulli distribution', 'neural net', 'valid probability', 'interval [0, 1]', 'careful design effort', 'linear unit', 'valid conditional distribution', 'gradient descent', 'unit interval', 'output of the model', 'learning algorithm', 'parameters', 'sigmoid output units', 'maximum likelihood', 'sigmoid output unit')","('deep feedforward networks', 'instance of', 'log-likelihood')
('mean squared error', 'subclass of', 'log-likelihood')
('maximum likelihood framework', 'part of', 'log-likelihood')
('Gaussian', 'instance of', 'log-likelihood')
('input', 'based on', 'log-likelihood')
('covariance', 'facet of', 'log-likelihood')
('positive definite matrix', 'part of', 'covariance')
('linear output layer', 'facet of', 'log-likelihood')
('output units', 'part of', 'linear output layer')
('parametrize', 'based on', 'log-likelihood')
('modeling the covariance', 'part of', 'log-likelihood')
('linear units', 'facet of', 'log-likelihood')
('gradient- based optimization algorithms', 'based on', 'log-likelihood')
('optimization algorithms', 'subclass of', 'gradient- based optimization algorithms')
('sigmoid units', 'part of', 'log-likelihood')
('Bernoulli output distributions', 'subclass of', 'log-likelihood')
('binary variable', 'facet of', 'Bernoulli output distributions')
('Bernoulli distribution', 'instance of', 'Bernoulli output distributions')
('neural net', 'based on', 'log-likelihood')
('valid probability', 'facet of', 'Bernoulli distribution')
('interval [0, 1]', 'facate of', 'valid probability')
('careful design effort', 'part of', 'log-likelihood')
('linear unit', 'subclass of', 'linear units')
('valid conditional distribution', 'part of', 'Bernoulli distribution')
('gradient descent', 'based on', 'log-likelihood')
('unit interval', 'based on', 'valid probability')
('output of the model', 'based on', 'neural net')
('learning algorithm', 'based on', 'log-likelihood')
('parameters', 'part of', 'learning algorithm')
('sigmoid output units', 'part of', 'log-likelihood')
('maximum likelihood', 'subclass of', 'maximum likelihood framework')
('sigmoid output unit', 'part of', 'sigmoid output units')"
6.4,0,"('deep feedforward networks', 'logistic sigmoid function', 'sigmoid output unit', 'linear layer', 'probability distribution over y', 'Bernoulli distribution', 'sigmoidal transformation', 'logit', 'cost function', 'saturation of the sigmoid', 'gradient-based learning', 'loss function', 'softplus function')","('deep feedforward networks', 'part of', 'logistic sigmoid function')
('logistic sigmoid function', 'part of', 'sigmoid output unit')
('sigmoid output unit', 'part of', 'linear layer')
('linear layer', 'part of', 'probability distribution over y')
('probability distribution over y', 'based on', 'Bernoulli distribution')
('sigmoidal transformation', 'part of', 'logit')
('logit', 'part of', 'cost function')
('cost function', 'based on', 'saturation of the sigmoid')
('gradient-based learning', 'part of', 'loss function')
('loss function', 'based on', 'softplus function')"
6.4,1,"('deep feedforward networks', 'sigmoid function', 'loss functions', 'mean squared error', 'maximum likelihood', 'sigmoid output units', 'softmax function', 'probability distribution', 'binary variable', 'multinoulli output distributions', 'softmax units')","('deep feedforward networks', 'part of', 'sigmoid function')
('sigmoid function', 'part of', 'loss functions')
('loss functions', 'based on', 'mean squared error')
('loss functions', 'based on', 'maximum likelihood')
('sigmoid output units', 'part of', 'softmax function')
('softmax function', 'part of', 'probability distribution')
('probability distribution', 'based on', 'binary variable')
('probability distribution', 'based on', 'multinoulli output distributions')
('multinoulli output distributions', 'part of', 'softmax units')"
6.4,2,"('discrete variable', 'vector y', 'unnormalized log probabilities', 'softmax function', 'exponentiate and normalize', 'multinoulli distribution', 'linear layer', 'maximum log-likelihood', 'cost function', 'approximation', 'log-likelihood')","('discrete variable', 'part of', 'vector y')
('vector y', 'part of', 'unnormalized log probabilities')
('unnormalized log probabilities', 'based on', 'softmax function')
('softmax function', 'based on', 'exponentiate and normalize')
('exponentiate and normalize', 'based on', 'multinoulli distribution')
('multinoulli distribution', 'part of', 'linear layer')
('maximum log-likelihood', 'part of', 'cost function')
('cost function', 'based on', 'approximation')
('cost function', 'based on', 'log-likelihood')"
6.4,3,"('maximum likelihood', 'model capacity', 'optimization', 'fractions of each outcome', 'objective functions', 'squared error', 'softmax function', 'saturation', 'numerically stable variant')","('maximum likelihood', 'based on', 'model capacity')
('model capacity', 'part of', 'optimization')
('optimization', 'based on', 'fractions of each outcome')
('objective functions', 'based on', 'squared error')
('squared error', 'based on', 'softmax function')
('softmax function', 'based on', 'saturation')
('saturation', 'based on', 'numerically stable variant')"
6.4,4,"('linear layer', 'overparametrized version', 'restricted version', 'learning dynamics', 'competition between units', 'winner-take-all', 'softmax function', 'argmax function', 'maximum function', 'other output types', 'maximum likelihood')","('linear layer', 'part of', 'overparametrized version')
('linear layer', 'part of', 'restricted version')
('learning dynamics', 'based on', 'competition between units')
('competition between units', 'based on', 'winner-take-all')
('softmax function', 'based on', 'argmax function')
('argmax function', 'based on', 'maximum function')
('maximum function', 'based on', 'other output types')
('other output types', 'based on', 'maximum likelihood')"
6.4,5,"('deep feedforward networks', 'conditional distribution', 'maximum likelihood', 'neural network', 'function', 'parameters', 'loss function', 'conditional Gaussian', 'variance', 'closed form expression', 'maximum likelihood estimator', 'mean', 'squared difference', 'obs...","('deep feedforward networks', 'instance of', 'neural network')
('maximum likelihood', 'instance of', 'loss function')
('neural network', 'subclass of', 'function')
('parameters', 'based on', 'loss function')
('loss function', 'based on', 'neural network')
('conditional Gaussian', 'instance of', 'distribution')
('variance', 'part of', 'conditional Gaussian')
('closed form expression', 'based on', 'distribution')
('maximum likelihood estimator', 'based on', 'maximum likelihood')
('mean', 'based on', 'squared difference')
('squared difference', 'based on', 'observed and estimated values')"
6.4,6,"('deep feedforward networks', 'standard deviation', 'variance', 'precision', 'covariance matrix', 'positive definite', 'diagonal matrix', 'model', 'activation', 'softplus function', 'positive precision vector', 'identity', 'full rank', 'multimodal regression', 'conditional distribution', 'Gaussian mixture', 'mixture density networks', 'components', 'conditional probability distribution', 'latent variable', 'multinoulli distribution', 'Gaussian component')","('variance', 'instance of', 'covariance matrix')
('precision', 'instance of', 'inverse of variance')
('covariance matrix', 'subclass of', 'diagonal matrix')
('model', 'instance of', 'deep feedforward networks')
('activation', 'instance of', 'softplus function')
('positive precision vector', 'subclass of', 'precision vector')
('full rank', 'instance of', 'identity')
('conditional distribution', 'subclass of', 'mixture density networks')
('Gaussian mixture', 'instance of', 'conditional distribution')
('components', 'part of', 'Gaussian mixture')
('conditional probability distribution', 'instance of', 'conditional distribution')
('latent variable', 'instance of', 'multinoulli distribution')
('Gaussian component', 'instance of', 'conditional probability distribution')"
6.5,0,"('deep feedforward networks', 'softmax', 'means', 'Gaussian component', 'negative log-likelihood', 'covariances', 'diagonal matrix', 'gradient-based optimization', 'conditional Gaussian mixtures', 'clip gradients', 'scale the gradients', 'generative models', 'mixture density', 'real-valued domains', 'mixture density network', 'neural network', 'sequence of characters', 'maximum likelihood', 'model')","('deep feedforward networks', 'instance of', 'neural network')
('conditional Gaussian mixtures', 'instance of', 'generative models')
('mixture density network', 'based on', 'mixture density')
('mixture density network', 'subclass of', 'neural network')
('sequence of characters', 'part of', 'model')"
6.5,1,"('deep feedforward networks', 'neural network', 'mixture density output layer', 'input x', 'output y', 'parameters', 'mixture components', 'Gaussian', 'mean', 'variance', 'hidden units', 'parametric machine learning models', 'gradient-based optimization', 'rectified linear units')","('deep feedforward networks', 'instance of', 'neural network')
('mixture density output layer', 'subject of', 'neural network')
('input x', 'subject of', 'neural network')
('output y', 'subject of', 'neural network')
('parameters', 'part of', 'neural network')
('mixture components', 'part of', 'mixture density output layer')
('Gaussian', 'part of', 'mixture components')
('mean', 'part of', 'Gaussian')
('variance', 'part of', 'Gaussian')
('hidden units', 'part of', 'neural network')
('parametric machine learning models', 'subclass of', 'neural network')
('gradient-based optimization', 'use', 'neural network')
('rectified linear units', 'use', 'neural network')"
6.5,2,"('deep feedforward networks', 'hidden units', 'intuitions', 'trial and error', 'validation set', 'differentiable', 'gradient-based learning algorithm', 'cost function', 'minima', 'undefined gradient', 'left derivative', 'right derivative', 'neural network training', 'one-sided derivatives', 'numerical error', 'affine transformation', 'activation function')","('deep feedforward networks', 'part of', 'hidden units')
('intuitions', 'part of', 'deep feedforward networks')
('trial and error', 'part of', 'deep feedforward networks')
('validation set', 'part of', 'deep feedforward networks')
('differentiable', 'part of', 'gradient-based learning algorithm')
('gradient-based learning algorithm', 'use', 'deep feedforward networks')
('cost function', 'part of', 'gradient-based learning algorithm')
('minima', 'part of', 'gradient-based learning algorithm')
('undefined gradient', 'part of', 'gradient-based learning algorithm')
('left derivative', 'part of', 'gradient-based learning algorithm')
('right derivative', 'part of', 'gradient-based learning algorithm')
('neural network training', 'part of', 'deep feedforward networks')
('one-sided derivatives', 'part of', 'gradient-based learning algorithm')
('numerical error', 'part of', 'gradient-based learning algorithm')
('affine transformation', 'part of', 'activation function')
('activation function', 'part of', 'hidden units')"
6.5,3,"('rectified linear units', 'linear units', 'derivatives', 'second derivative', 'gradient direction', 'affine transformation', 'generalizations', 'absolute value rectification', 'object recognition', 'leaky ReLU', 'parametric ReLU', 'PReLU', 'maxout units')","('rectified linear units', 'subclass of', 'linear units')
('derivatives', 'part of', 'rectified linear units')
('second derivative', 'part of', 'derivatives')
('gradient direction', 'part of', 'derivatives')
('affine transformation', 'part of', 'linear units')
('generalizations', 'part of', 'rectified linear units')
('absolute value rectification', 'part of', 'generalizations')
('object recognition', 'part of', 'generalizations')
('leaky ReLU', 'part of', 'generalizations')
('parametric ReLU', 'part of', 'generalizations')
('PReLU', 'part of', 'generalizations')
('maxout units', 'part of', 'generalizations')"
6.5,4,"('maxout units', 'piecewise linear function', 'convex function', 'parametrized', 'regularization', 'statistical and computational advantages', 'catastrophic forgetting', 'deep linear networks', 'recurrent networks')","('maxout units', 'subclass of', 'piecewise linear function')
('convex function', 'part of', 'maxout units')
('parametrized', 'part of', 'maxout units')
('regularization', 'part of', 'maxout units')
('statistical and computational advantages', 'part of', 'maxout units')
('catastrophic forgetting', 'part of', 'recurrent networks')
('deep linear networks', 'part of', 'recurrent networks')"
6.5,5,"('deep feedforward networks', 'LSTM', 'sigmoid', 'hyperbolic tangent', 'rectified linear units', 'neural networks', 'activation functions', 'output units', 'binary variable', 'piecewise linear units', 'gradient-based learning', 'hidden units', 'feedforward networks', 'cost function', 'hyperbolic tangent activation function', 'logistic sigmoid', 'identity function', 'deep neural network', 'linear model', 'probabilistic models', 'autoencoders', 'recurrent networks')","('deep feedforward networks', 'instance of', 'neural networks')
('deep feedforward networks', 'use', 'activation functions')
('deep feedforward networks', 'use', 'output units')
('deep feedforward networks', 'use', 'hidden units')
('LSTM', 'instance of', 'recurrent networks')
('sigmoid', 'instance of', 'activation functions')
('hyperbolic tangent', 'instance of', 'activation functions')"
6.5,6,"('hidden units', 'differentiable functions', 'feedforward network', 'cosine activation function', 'MNIST dataset', 'error rate', 'standard practice', 'significant improvement', 'linear unit', 'linear transformations', 'weight matrix', 'factored approach', 'low-rank relationships', 'number of parameters', 'softmax units', 'probability distribution', 'discrete variable')","('hidden units', 'use', 'differentiable functions')
('feedforward network', 'instance of', 'neural networks')
('cosine activation function', 'instance of', 'activation functions')
('MNIST dataset', 'instance of', 'datasets')
('error rate', 'instance of', 'evaluation metrics')
('standard practice', 'instance of', 'best practices')
('significant improvement', 'instance of', 'improvements')
('linear unit', 'instance of', 'activation functions')
('weight matrix', 'instance of', 'linear transformations')
('factored approach', 'instance of', 'learning approaches')
('low-rank relationships', 'instance of', 'relationship types')
('number of parameters', 'instance of', 'model complexity')
('softmax units', 'instance of', 'activation functions')
('probability distribution', 'instance of', 'statistical concepts')
('discrete variable', 'instance of', 'variable types')"
6.5,7,"('Radial basis function', 'softplus', 'rectifier', 'hard tanh', 'neural network architectures', 'layers', 'chain structure')","('Radial basis function', 'instance of', 'activation functions')
('softplus', 'instance of', 'activation functions')
('rectifier', 'instance of', 'activation functions')
('hard tanh', 'instance of', 'activation functions')
('neural network architectures', 'use', 'layers')
('layers', 'instance of', 'neural network architectures')
('chain structure', 'instance of', 'network topologies')"
6.5,8,"('linear model', 'nonlinear functions', 'feedforward networks', 'hidden layers', 'universal approximation theorem', 'squashing activation function', 'Borel measurable function', 'derivatives', 'continuous function', 'finite dimensional discrete space', 'rectified linear unit', 'multilayer perceptron', 'training algorithm', 'optimization algorithm')","('linear model', 'use', 'nonlinear functions')
('feedforward networks', 'use', 'hidden layers')
('hidden layers', 'instance of', 'layers')
('universal approximation theorem', 'instance of', 'mathematical theorems')
('squashing activation function', 'instance of', 'activation functions')
('Borel measurable function', 'instance of', 'mathematical functions')
('derivatives', 'instance of', 'mathematical concepts')
('continuous function', 'instance of', 'mathematical functions')
('finite dimensional discrete space', 'instance of', 'mathematical spaces')
('rectified linear unit', 'instance of', 'activation functions')
('multilayer perceptron', 'instance of', 'neural networks')
('training algorithm', 'instance of', 'algorithms')
('optimization algorithm', 'instance of', 'algorithms')"
6.5,9,"('training algorithm', 'overfitting', 'no free lunch theorem', 'universal approximation theorem', 'function representation', 'size of network', 'deep models', 'generalization error', 'efficient approximation', 'depth of network', 'logic gates', 'linear threshold units', 'continuous-valued activations', 'rectified linear units')","('training algorithm', 'result in', 'overfitting')
('no free lunch theorem', 'instance of', 'mathematical theorems')
('universal approximation theorem', 'instance of', 'mathematical theorems')
('function representation', 'instance of', 'mathematical concepts')
('size of network', 'affects', 'function representation')
('deep models', 'instance of', 'neural networks')
('generalization error', 'instance of', 'error metrics')
('efficient approximation', 'instance of', 'approximation techniques')
('depth of network', 'affects', 'function representation')
('logic gates', 'instance of', 'computing devices')
('linear threshold units', 'instance of', 'activation functions')
('continuous-valued activations', 'instance of', 'activation functions')
('rectified linear units', 'instance of', 'activation functions')"
6.5,10,"('deep feedforward networks', 'piecewise linear networks', 'rectifier nonlinearities', 'maxout units', 'absolute value rectification', 'regular patterns', 'hyperplane', 'weights', 'bias', 'linear regions', 'inputs', 'hidden layer', 'linear regions', 'depth', 'inputs', 'hidden layer', 'maxout networks', 'filters')","('deep feedforward networks', 'subclass of', 'piecewise linear networks')
('piecewise linear networks', 'subclass of', 'rectifier nonlinearities')
('rectifier nonlinearities', 'use', 'maxout units')
('maxout units', 'subclass of', 'absolute value rectification')
('regular patterns', 'subclass of', 'linear regions')
('linear regions', 'based on', 'hyperplane')
('hyperplane', 'use', 'weights')
('hyperplane', 'use', 'bias')
('inputs', 'part of', 'linear regions')
('inputs', 'part of', 'hidden layer')
('hidden layer', 'subclass of', 'linear regions')
('linear regions', 'based on', 'depth')
('inputs', 'part of', 'linear regions')
('inputs', 'part of', 'hidden layer')
('hidden layer', 'subclass of', 'maxout networks')
('maxout networks', 'subclass of', 'filters')"
6.5,11,"('machine learning', 'AI', 'deep model', 'statistical reasons', 'machine learning algorithm', 'prior beliefs', 'composition of functions', 'representation learning', 'factors of variation', 'computer program', 'internal processing', 'empirical results', 'neural network architectures', 'convolutional networks', 'recurrent neural networks', 'sequence processing', 'skip connections')","('machine learning', 'instance of', 'AI')
('deep model', 'instance of', 'AI')
('deep model', 'subclass of', 'statistical reasons')
('machine learning algorithm', 'instance of', 'AI')
('machine learning algorithm', 'based on', 'prior beliefs')
('composition of functions', 'instance of', 'AI')
('composition of functions', 'based on', 'representation learning')
('factors of variation', 'instance of', 'AI')
('factors of variation', 'based on', 'computer program')
('internal processing', 'instance of', 'AI')
('internal processing', 'based on', 'empirical results')
('neural network architectures', 'instance of', 'AI')
('neural network architectures', 'subclass of', 'deep model')
('convolutional networks', 'instance of', 'AI')
('convolutional networks', 'subclass of', 'neural network architectures')
('recurrent neural networks', 'instance of', 'AI')
('recurrent neural networks', 'subclass of', 'neural network architectures')
('sequence processing', 'subclass of', 'recurrent neural networks')
('skip connections', 'instance of', 'AI')"
6.5,12,"('multi-digit numbers', 'photographs of addresses', 'test set accuracy', 'model size', 'architecture design', 'neural network layer', 'linear transformation', 'matrix W', 'specialized networks', 'input layer', 'output layer', 'number of connections', 'parameters', 'computation', 'convolutional networks', 'computer vision problems', 'generic neural network', 'architectural strategies', 'application domains')","('multi-digit numbers', 'subclass of', 'photographs of addresses')
('test set accuracy', 'instance of', 'model size')
('model size', 'based on', 'architecture design')
('neural network layer', 'based on', 'linear transformation')
('neural network layer', 'based on', 'matrix W')
('specialized networks', 'subclass of', 'generic neural network')
('input layer', 'subclass of', 'neural network layer')
('output layer', 'subclass of', 'neural network layer')
('number of connections', 'based on', 'parameters')
('computation', 'based on', 'parameters')
('convolutional networks', 'subclass of', 'generic neural network')
('convolutional networks', 'based on', 'computer vision problems')
('generic neural network', 'subclass of', 'architectural strategies')
('architectural strategies', 'based on', 'application domains')"
6.5,13,"('convolutional networks', 'fully connected layers', 'number of parameters', 'test set performance', 'depth of network', 'size of the convolutional', 'shallow models', 'overfit', 'deep models', 'preference over the space of functions', 'simpler functions', 'composed representations', 'sequential dependent steps', 'locate a set of objects', 'segment them from each other', 'recognize them')","('convolutional networks', 'based on', 'fully connected layers')
('number of parameters', 'based on', 'fully connected layers')
('test set performance', 'based on', 'number of parameters')
('depth of network', 'based on', 'size of the convolutional')
('size of the convolutional', 'instance of', 'shallow models')
('shallow models', 'subclass of', 'overfit')
('deep models', 'subclass of', 'overfit')
('preference over the space of functions', 'subclass of', 'simpler functions')
('preference over the space of functions', 'based on', 'composed representations')
('composed representations', 'based on', 'sequential dependent steps')
('locate a set of objects', 'based on', 'composed representations')
('segment them from each other', 'based on', 'composed representations')
('recognize them', 'based on', 'composed representations')"
6.5,14,"('feedforward neural network', 'input x', 'output yˆ', 'forward propagation', 'hidden units', 'scalar cost J(θ)', 'back-propagation algorithm', 'gradient', 'analytical expression', 'numerical evaluation', 'learning algorithm', 'multi-layer neural networks', 'stochastic gradient descent', 'function f', 'variables x', 'variables y', 'derivative', 'cost function', 'parameters θ', 'machine learning tasks', 'Jacobian', 'multiple outputs')","('feedforward neural network', 'instance of', 'function f')
('input x', 'part of', 'function f')
('output yˆ', 'part of', 'function f')
('forward propagation', 'part of', 'feedforward neural network')
('hidden units', 'part of', 'feedforward neural network')
('scalar cost J(θ)', 'instance of', 'cost function')
('back-propagation algorithm', 'use', 'gradient')
('gradient', 'obtained via', 'analytical expression')
('gradient', 'obtained via', 'numerical evaluation')
('learning algorithm', 'subclass of', 'machine learning tasks')
('multi-layer neural networks', 'instance of', 'feedforward neural network')
('stochastic gradient descent', 'subclass of', 'learning algorithm')
('function f', 'related to', 'variables x')
('function f', 'related to', 'variables y')
('derivative', 'obtained via', 'analytical expression')
('derivative', 'obtained via', 'numerical evaluation')
('cost function', 'instance of', 'machine learning tasks')
('cost function', 'related to', 'variables y')
('parameters θ', 'part of', 'feedforward neural network')
('Jacobian', 'based on', 'multiple outputs')"
6.5,15,"('deep feedforward networks', 'computational graphs', 'back-propagation algorithm', 'computational graph language', 'variable', 'scalar', 'vector', 'matrix', 'tensor', 'operation', 'function', 'graph language', 'allowable operations', 'software implementations', 'output variable', 'directed edge', 'name of the operation', 'chain rule of calculus', 'chain rule of probability', 'derivatives of functions', 'back-propagation algorithm', 'order of operations', 'real number')","('deep feedforward networks', 'instance of', 'computational graphs')
('back-propagation algorithm', 'instance of', 'computational graph language')
('variable', 'instance of', 'computational graph language')
('scalar', 'instance of', 'variable')
('vector', 'instance of', 'variable')
('matrix', 'instance of', 'variable')
('tensor', 'instance of', 'variable')
('operation', 'instance of', 'computational graph language')
('function', 'instance of', 'computational graph language')
('graph language', 'subclass of', 'computational graph language')
('allowable operations', 'instance of', 'computational graph language')
('software implementations', 'instance of', 'computational graph language')
('output variable', 'instance of', 'computational graph language')
('directed edge', 'instance of', 'computational graph language')
('name of the operation', 'instance of', 'computational graph language')
('chain rule of calculus', 'instance of', 'computational graph language')
('chain rule of probability', 'instance of', 'computational graph language')
('derivatives of functions', 'instance of', 'computational graph language')
('back-propagation algorithm', 'instance of', 'computational graph language')
('order of operations', 'instance of', 'computational graph language')
('real number', 'instance of', 'computational graph language')"
6.5,16,"('deep feedforward networks', 'computational graphs', 'operation', 'compute', 'logistic regression prediction', 'sigmoid function', 'intermediate expressions', 'algebraic expression', 'graph', 'variable', 'design matrix', 'rectified linear unit activation', 'minibatch', 'input', 'linear regression model', 'weight decay penalty')","('deep feedforward networks', 'instance of', 'computational graphs')
('operation', 'instance of', 'computational graphs')
('compute', 'instance of', 'operation')

('logistic regression prediction', 'instance of', 'computational graphs')
('sigmoid function', 'instance of', 'operation')
('logistic regression prediction', 'use', 'sigmoid function')

('intermediate expressions', 'instance of', 'computational graphs')
('algebraic expression', 'instance of', 'operation')
('intermediate expressions', 'use', 'algebraic expression')

('graph', 'instance of', 'computational graphs')
('variable', 'instance of', 'computational graphs')
('graph', 'based on', 'variable')

('design matrix', 'instance of', 'computational graphs')
('rectified linear unit activation', 'instance of', 'operation')
('design matrix', 'use', 'rectified linear unit activation')

('minibatch', 'instance of', 'computational graphs')
('input', 'instance of', 'computational graphs')
('minibatch', 'based on', 'input')

('linear regression model', 'instance of', 'computational graphs')
('weight decay penalty', 'instance of', 'operation')
('linear regression model', 'use', 'weight decay penalty')"
6.5,17,"('deep feedforward networks', 'back-propagation algorithm', 'Jacobian matrix', 'gradient', 'operation', 'graph', 'vectors', 'tensors', 'arbitrary dimensionality', 'grid', 'tensor rearrangement', 'chain rule', 'backprop', 'computational graph', 'scalar', 'algebraic expression', 'computer evaluation', 'repeated subexpressions')","('deep feedforward networks', 'instance of', 'back-propagation algorithm')
('Jacobian matrix', 'instance of', 'back-propagation algorithm')
('gradient', 'instance of', 'back-propagation algorithm')
('operation', 'instance of', 'back-propagation algorithm')
('graph', 'instance of', 'back-propagation algorithm')
('vectors', 'instance of', 'back-propagation algorithm')
('tensors', 'instance of', 'back-propagation algorithm')
('arbitrary dimensionality', 'instance of', 'back-propagation algorithm')
('grid', 'instance of', 'back-propagation algorithm')
('tensor rearrangement', 'instance of', 'back-propagation algorithm')
('chain rule', 'instance of', 'back-propagation algorithm')
('backprop', 'instance of', 'back-propagation algorithm')
('computational graph', 'instance of', 'back-propagation algorithm')
('scalar', 'instance of', 'back-propagation algorithm')
('algebraic expression', 'instance of', 'back-propagation algorithm')
('computer evaluation', 'instance of', 'back-propagation algorithm')
('repeated subexpressions', 'instance of', 'back-propagation algorithm')"
6.5,18,"('deep feedforward networks', 'back-propagation algorithm', 'repeated subexpressions', 'memory consumption', 'chain rule', 'wasted computations', 'naive implementation', 'computational graph', 'gradient computation', 'symbolic graph', 'computational graph order', 'scalar', 'input nodes', 'parameters', 'cost function', 'forward propagation computation', 'back-propagation', 'gradient descent', 'model parameters', 'operation', 'function evaluation', 'graph construction', 'subgraph', 'reverse computation', 'derivative computation')","('deep feedforward networks', 'instance of', 'back-propagation algorithm')
('repeated subexpressions', 'instance of', 'back-propagation algorithm')
('memory consumption', 'instance of', 'back-propagation algorithm')
('chain rule', 'instance of', 'back-propagation algorithm')
('wasted computations', 'instance of', 'back-propagation algorithm')
('naive implementation', 'instance of', 'back-propagation algorithm')
('computational graph', 'instance of', 'back-propagation algorithm')
('gradient computation', 'instance of', 'back-propagation algorithm')
('symbolic graph', 'instance of', 'back-propagation algorithm')
('computational graph order', 'instance of', 'back-propagation algorithm')
('scalar', 'instance of', 'back-propagation algorithm')
('input nodes', 'instance of', 'back-propagation algorithm')
('parameters', 'instance of', 'back-propagation algorithm')
('cost function', 'instance of', 'back-propagation algorithm')
('forward propagation computation', 'instance of', 'back-propagation algorithm')
('back-propagation', 'instance of', 'back-propagation algorithm')
('gradient descent', 'instance of', 'back-propagation algorithm')
('model parameters', 'instance of', 'back-propagation algorithm')
('operation', 'instance of', 'back-propagation algorithm')
('function evaluation', 'instance of', 'back-propagation algorithm')
('graph construction', 'instance of', 'back-propagation algorithm')
('subgraph', 'instance of', 'back-propagation algorithm')
('reverse computation', 'instance of', 'back-propagation algorithm')
('derivative computation', 'instance of', 'back-propagation algorithm')"
6.5,19,"('deep feedforward networks', 'computational graph', 'node', 'function', 'arguments', 'input', 'output', 'chain rule', 'partial derivative', 'edge', 'back-propagation algorithm', 'common subexpressions', 'Jacobian product', 'memory efficiency')","('deep feedforward networks', 'instance of', 'computational graph')
('node', 'instance of', 'computational graph')
('function', 'instance of', 'computational graph')
('arguments', 'instance of', 'computational graph')
('input', 'instance of', 'computational graph')
('output', 'instance of', 'computational graph')
('chain rule', 'instance of', 'computational graph')
('partial derivative', 'instance of', 'computational graph')
('edge', 'instance of', 'computational graph')
('back-propagation algorithm', 'instance of', 'computational graph')
('common subexpressions', 'instance of', 'computational graph')
('Jacobian product', 'instance of', 'computational graph')
('memory efficiency', 'instance of', 'computational graph')"
6.6,0,"('deep feedforward networks', 'back-propagation algorithm', 'variables', 'graph', 'computational cost', 'forward propagation', 'activations', 'network', 'grad_table', 'derivatives', 'data structure', 'subexpressions', 'fully-connected MLP', 'parameters', 'supervised loss', 'neural network', 'training example')","('deep feedforward networks', 'part of', 'neural network')
('back-propagation algorithm', 'use', 'neural network')
('variables', 'part of', 'computational cost')
('graph', 'instance of', 'data structure')
('forward propagation', 'part of', 'neural network')
('activations', 'part of', 'neural network')
('network', 'part of', 'neural network')
('grad_table', 'part of', 'back-propagation algorithm')
('derivatives', 'part of', 'back-propagation algorithm')
('data structure', 'subclass of', 'variables')
('subexpressions', 'part of', 'computational cost')
('fully-connected MLP', 'instance of', 'neural network')
('parameters', 'part of', 'neural network')
('supervised loss', 'part of', 'neural network')
('neural network', 'part of', 'training example')"
6.6,1,"('computational graph', 'gradient', 'input', 'function', 'chain', 'compute', 'implementation', 'back-propagation algorithm', 'alternative approach', 'memory', 'chain rule')","('computational graph', 'part of', 'back-propagation algorithm')
('gradient', 'part of', 'back-propagation algorithm')
('input', 'part of', 'function')
('function', 'part of', 'compute')
('chain', 'part of', 'chain rule')
('compute', 'part of', 'implementation')
('implementation', 'part of', 'alternative approach')
('back-propagation algorithm', 'part of', 'memory')
('alternative approach', 'part of', 'back-propagation algorithm')
('memory', 'part of', 'back-propagation algorithm')
('chain rule', 'part of', 'back-propagation algorithm')"
6.6,2,"('back-propagation algorithm', 'deep neural network', 'cost function', 'loss function', 'regularizer', 'gradients', 'weight matrices', 'bias parameters', 'input example', 'minibatch', 'symbolic representations', 'numeric value')","('back-propagation algorithm', 'use', 'deep neural network')
('deep neural network', 'part of', 'cost function')
('cost function', 'part of', 'loss function')
('loss function', 'part of', 'regularizer')
('gradients', 'part of', 'weight matrices')
('weight matrices', 'part of', 'deep neural network')
('bias parameters', 'part of', 'deep neural network')
('input example', 'part of', 'minibatch')
('minibatch', 'part of', 'deep neural network')
('symbolic representations', 'part of', 'cost function')
('numeric value', 'part of', 'cost function')"
6.6,3,"('deep neural network', 'input', 'target', 'gradients', 'activations', 'output layer', 'hidden layer', 'weights', 'biases', 'stochastic gradient update', 'optimization methods', 'forward computation', 'gradient on output layer', 'pre-nonlinear activation', 'gradients on weights and biases', 'regularization term', 'lower-level hidden layer')","('deep neural network', 'part of', 'input')
('input', 'part of', 'target')
('target', 'part of', 'gradients')
('gradients', 'part of', 'activations')
('activations', 'part of', 'output layer')
('output layer', 'part of', 'hidden layer')
('hidden layer', 'part of', 'weights')
('weights', 'part of', 'biases')
('biases', 'part of', 'deep neural network')
('stochastic gradient update', 'use', 'deep neural network')
('optimization methods', 'use', 'deep neural network')
('forward computation', 'part of', 'deep neural network')
('gradient on output layer', 'part of', 'deep neural network')
('pre-nonlinear activation', 'part of', 'deep neural network')
('gradients on weights and biases', 'part of', 'deep neural network')
('regularization term', 'part of', 'deep neural network')
('lower-level hidden layer', 'part of', 'hidden layer')"
6.6,4,"('symbol-to-symbol approach', 'computational graph', 'derivatives', 'generic graph evaluation engine', 'symbolic description', 'desired result', 'symbol-to-number differentiation', 'libraries', 'Torch', 'Caffe', 'Theano', 'TensorFlow', 'higher derivatives', 'back-propagation algorithm')","('symbol-to-symbol approach', 'part of', 'computational graph')
('computational graph', 'part of', 'derivatives')
('generic graph evaluation engine', 'part of', 'symbolic description')
('symbolic description', 'part of', 'desired result')
('desired result', 'part of', 'symbol-to-number differentiation')
('symbol-to-number differentiation', 'part of', 'libraries')
('libraries', 'part of', 'Torch')
('libraries', 'part of', 'Caffe')
('libraries', 'part of', 'Theano')
('libraries', 'part of', 'TensorFlow')
('higher derivatives', 'part of', 'back-propagation algorithm')"
6.6,5,"('Deep Feedforward Networks', 'computational graph', 'derivatives', 'numerical values', 'graph evaluation engine', 'symbol-to-symbol approach', 'symbol-to-number approach', 'back-propagation algorithm', 'scalar', 'ancestor', 'gradient', 'Jacobian', 'node', 'variable', 'tensor', 'get_operation', 'get_consumers', 'get_inputs')","('Deep Feedforward Networks', 'instance of', 'computational graph')
('computational graph', 'based on', 'derivatives')
('computational graph', 'based on', 'numerical values')
('computational graph', 'based on', 'graph evaluation engine')
('computational graph', 'based on', 'symbol-to-symbol approach')
('computational graph', 'based on', 'symbol-to-number approach')
('graph evaluation engine', 'part of', 'back-propagation algorithm')
('back-propagation algorithm', 'based on', 'scalar')
('derivatives', 'subclass of', 'ancestor')
('scalar', 'subclass of', 'gradient')
('scalar', 'subclass of', 'Jacobian')
('node', 'subclass of', 'variable')
('variable', 'subclass of', 'tensor')
('tensor', 'use', 'get_operation')
('tensor', 'use', 'get_consumers')
('tensor', 'use', 'get_inputs')"
7.1,0,"('Deep Feedforward Networks', 'Jacobian-vector product', 'back-propagation algorithm', 'back-propagation rules', 'matrix multiplication operation', 'variable C', 'scalar z', 'matrix operation', 'differentiation rules', 'chain rule', 'inputs', 'mathematical function')","('Deep Feedforward Networks', 'subclass of', 'mathematical function'),
('Jacobian-vector product', 'use', 'matrix multiplication operation'),
('back-propagation algorithm', 'based on', 'back-propagation rules'),
('back-propagation rules', 'use', 'matrix operation'),
('matrix multiplication operation', 'based on', 'scalar z'),
('variable C', 'instance of', 'matrix operation'),
('scalar z', 'part of', 'variable C'),
('matrix operation', 'based on', 'differentiation rules'),
('differentiation rules', 'use', 'chain rule'),
('inputs', 'facet of', 'mathematical function')"
7.1,1,"('back-propagation algorithm', 'build_grad subroutine', 'computational graph', 'variable to be differentiated', 'pruned', 'ancestors', 'descendants', 'grad_table', 'Naive algorithm', 'repeated subexpressions', 'computational cost', 'operation evaluation', 'number of operations', 'graph with n nodes', 'fundamental unit', 'matrix multiplication', 'O(n2) operations', 'runtime of each operation', 'multiplying two matrices', 'forward propagation stage', 'Jacobian-vector product', 'directed acyclic graph', 'neural network cost functions')","('back-propagation algorithm', 'based on', 'computational graph'),
('build_grad subroutine', 'part of', 'back-propagation algorithm'),
('computational graph', 'instance of', 'directed acyclic graph'),
('variable to be differentiated', 'facet of', 'computational graph'),
('pruned', 'part of', 'back-propagation algorithm'),
('ancestors', 'facet of', 'computational graph'),
('descendants', 'facet of', 'computational graph'),
('grad_table', 'part of', 'back-propagation algorithm'),
('Naive algorithm', 'instance of', 'back-propagation algorithm'),
('repeated subexpressions', 'part of', 'back-propagation algorithm'),
('computational cost', 'facet of', 'back-propagation algorithm'),
('operation evaluation', 'facet of', 'back-propagation algorithm'),
('number of operations', 'part of', 'back-propagation algorithm'),
('graph with n nodes', 'part of', 'computational graph'),
('fundamental unit', 'facet of', 'matrix multiplication'),
('matrix multiplication', 'based on', 'fundamental unit'),
('O(n^2) operations', 'part of', 'matrix multiplication'),
('runtime of each operation', 'part of', 'matrix multiplication'),
('multiplying two matrices', 'part of', 'matrix multiplication'),
('forward propagation stage', 'facet of', 'matrix multiplication'),
('Jacobian-vector product', 'based on', 'matrix multiplication'),
('directed acyclic graph', 'subclass of', 'computational graph'),
('neural network cost functions', 'facet of', 'back-propagation algorithm')"
7.1,2,"('build_grad subroutine', 'back-propagation algorithm', 'graph', 'variable', 'grad_table', 'get_consumers', 'get_operation', 'op.bprop', 'get_inputs', 'Insert G', 'recursive chain rule', 'path(u(π1),u(π2),...,u(πt))', 'exponential cost', 'forward propagation graph', 'table-filling algorithm', 'intermediate results', 'table entries')","('build_grad subroutine', 'part of', 'back-propagation algorithm'),
('back-propagation algorithm', 'based on', 'graph'),
('graph', 'instance of', 'directed acyclic graph'),
('variable', 'facet of', 'graph'),
('grad_table', 'part of', 'back-propagation algorithm'),
('get_consumers', 'part of', 'graph'),
('get_operation', 'part of', 'graph'),
('op.bprop', 'part of', 'back-propagation algorithm'),
('get_inputs', 'part of', 'graph'),
('Insert G', 'part of', 'back-propagation algorithm'),
('recursive chain rule', 'part of', 'back-propagation algorithm'),
('path(u(π1),u(π2),...,u(πt))', 'facet of', 'back-propagation algorithm'),
('exponential cost', 'facet of', 'back-propagation algorithm'),
('forward propagation graph', 'based on', 'graph'),
('table-filling algorithm', 'part of', 'back-propagation algorithm'),
('intermediate results', 'part of', 'table-filling algorithm'),
('table entries', 'part of', 'table-filling algorithm')"
7.1,3,"('back-propagation', 'dynamic programming', 'multilayer perceptron', 'minibatch stochastic gradient descent', 'design matrix X', 'class labels y', 'hidden features H', 'relu operation', 'unnormalized log probabilities', 'cross-entropy operation', 'cost J', 'regularization term', 'total cost J', 'weight decay term', 'computational graph', 'gradient')","('back-propagation', 'part of', 'dynamic programming'),
('multilayer perceptron', 'part of', 'back-propagation'),
('minibatch stochastic gradient descent', 'part of', 'back-propagation'),
('design matrix X', 'facet of', 'back-propagation'),
('class labels y', 'facet of', 'back-propagation'),
('hidden features H', 'facet of', 'back-propagation'),
('relu operation', 'part of', 'back-propagation'),
('unnormalized log probabilities', 'facet of', 'back-propagation'),
('cross-entropy operation', 'part of', 'back-propagation'),
('cost J', 'facet of', 'back-propagation'),
('regularization term', 'facet of', 'cost J'),
('total cost J', 'part of', 'back-propagation'),
('weight decay term', 'facet of', 'total cost J'),
('computational graph', 'facet of', 'back-propagation'),
('gradient', 'part of', 'back-propagation')"
7.1,4,"('computational graph', 'cost', 'single-layer MLP', 'cross-entropy loss', 'weight decay', 'gradient', 'back-propagation rule', 'matrix multiplication operation', 'relu operation', 'gradient descent algorithm', 'optimization algorithm', 'parameters', 'forward propagation', 'matrix multiplication')","('computational graph', 'facet of', 'cost'),
('single-layer MLP', 'facet of', 'computational graph'),
('cross-entropy loss', 'facet of', 'cost'),
('weight decay', 'part of', 'cost'),
('gradient', 'part of', 'back-propagation rule'),
('back-propagation rule', 'part of', 'computational graph'),
('matrix multiplication operation', 'part of', 'computational graph'),
('relu operation', 'part of', 'computational graph'),
('gradient descent algorithm', 'part of', 'optimization algorithm'),
('optimization algorithm', 'part of', 'computational graph'),
('parameters', 'facet of', 'computational graph'),
('forward propagation', 'part of', 'computational graph'),
('matrix multiplication', 'part of', 'computational graph')"
7.1,5,"('DEEP FEEDFORWARD NETWORKS', 'matrix', 'back-propagation', 'implementation', 'operation', 'tensor', 'memory consumption', 'summation', 'buffer', 'data types', 'gradients', 'differentiation', 'Deep Learning Community', 'computer science community')","('DEEP FEEDFORWARD NETWORKS', 'instance of', 'matrix')
('matrix', 'use', 'back-propagation')
('back-propagation', 'instance of', 'implementation')
('implementation', 'instance of', 'operation')
('operation', 'instance of', 'tensor')
('tensor', 'instance of', 'memory consumption')
('memory consumption', 'instance of', 'summation')
('summation', 'instance of', 'buffer')
('buffer', 'instance of', 'data types')
('data types', 'instance of', 'gradients')
('gradients', 'instance of', 'differentiation')
('differentiation', 'instance of', 'Deep Learning Community')
('Deep Learning Community', 'instance of', 'computer science community')"
7.1,6,"('automatic differentiation', 'back-propagation algorithm', 'reverse mode accumulation', 'chain rule', 'computational cost', 'softmax function', 'cross-entropy loss', 'graph', 'algebraic substitution', 'partial derivative', 'computation', 'forward computation', 'software libraries', 'heuristics', 'simplification patterns', 'scalar output', 'Jacobian')","('automatic differentiation', 'instance of', 'back-propagation algorithm')
('back-propagation algorithm', 'instance of', 'reverse mode accumulation')
('reverse mode accumulation', 'instance of', 'chain rule')
('chain rule', 'instance of', 'computational cost')
('softmax function', 'instance of', 'computational cost')
('cross-entropy loss', 'instance of', 'computational cost')
('graph', 'instance of', 'algebraic substitution')
('algebraic substitution', 'instance of', 'partial derivative')
('partial derivative', 'instance of', 'computation')
('forward computation', 'instance of', 'computation')
('software libraries', 'instance of', 'heuristics')
('heuristics', 'instance of', 'simplification patterns')
('scalar output', 'instance of', 'Jacobian')"
7.2,0,"('Deep Feedforward Networks', 'automatic differentiation', 'forward mode accumulation', 'real-time computation', 'recurrent networks', 'Williams and Zipser', 'computational efficiency', 'memory', 'Jacobian matrices', 'machine learning', 'differentiation software', 'Python', 'C code', 'computational graphs', 'bprop methods', 'back-propagation', 'gradient', 'deep learning community', 'differentiation technology', 'deep networks')","('Deep Feedforward Networks', 'instance of', 'automatic differentiation')
('Deep Feedforward Networks', 'instance of', 'forward mode accumulation')
('Deep Feedforward Networks', 'instance of', 'real-time computation')
('Deep Feedforward Networks', 'instance of', 'recurrent networks')
('Williams and Zipser', 'instance of', 'computational efficiency')
('Williams and Zipser', 'instance of', 'memory')
('Williams and Zipser', 'instance of', 'Jacobian matrices')
('Python', 'instance of', 'machine learning')
('differentiation software', 'instance of', 'Python')
('C code', 'instance of', 'machine learning')
('computational graphs', 'instance of', 'bprop methods')
('computational graphs', 'instance of', 'back-propagation')
('computational graphs', 'instance of', 'gradient')
('deep learning community', 'instance of', 'differentiation technology')
('deep networks', 'instance of', 'deep learning community')"
7.2,1,"('Theano', 'TensorFlow', 'symbolic differentiation machinery', 'Hessian matrix', 'deep learning applications', 'Krylov methods', 'Hessian vector products', 'gradient descent')","('Theano', 'instance of', 'symbolic differentiation machinery')
('TensorFlow', 'instance of', 'symbolic differentiation machinery')
('symbolic differentiation machinery', 'instance of', 'Hessian matrix')
('deep learning applications', 'instance of', 'Hessian matrix')
('deep learning applications', 'instance of', 'Krylov methods')
('deep learning applications', 'instance of', 'Hessian vector products')
('gradient descent', 'instance of', 'Hessian vector products')"
7.3,0,"('deep learning', 'feedforward network', 'back-propagation algorithm', 'chain rule', 'function approximation', 'perceptron', 'neural network approach', 'multilayer perceptron', 'dynamic programming', 'sensitivity analysis', 'artificial neural networks', 'distributed representation', 'connectionism', 'cognition', 'learning', 'memory', 'neurons', 'machine learning techniques', 'deep learning renaissance')","('deep learning', 'instance of', 'neural network approach'),
('feedforward network', 'subclass of', 'neural network approach'),
('back-propagation algorithm', 'use', 'perceptron'),
('chain rule', 'part of', 'back-propagation algorithm'),
('function approximation', 'based on', 'neural network approach'),
('perceptron', 'instance of', 'neural network approach'),
('neural network approach', 'use', 'artificial neural networks'),
('multilayer perceptron', 'subclass of', 'neural network approach'),
('dynamic programming', 'use', 'neural network approach'),
('sensitivity analysis', 'based on', 'neural network approach'),
('artificial neural networks', 'instance of', 'neural network approach'),
('distributed representation', 'subclass of', 'neural network approach'),
('connectionism', 'part of', 'neural network approach'),
('cognition', 'instance of', 'neural network approach'),
('learning', 'based on', 'neural network approach'),
('memory', 'based on', 'neural network approach'),
('neurons', 'subclass of', 'neural network approach'),
('machine learning techniques', 'based on', 'neural network approach'),
('deep learning renaissance', 'instance of', 'neural network approach')"
7.4,0,"('deep feedforward networks', 'gradient descent', 'neural network', 'statistical generalization', 'datasets', 'cross-entropy family', 'loss function', 'mean squared error', 'maximum likelihood', 'sigmoid', 'softmax outputs', 'saturation', 'slow learning', 'sigmoid hidden units', 'piecewise linear hidden units', 'rectified linear units', 'Cognitron', 'Neocognitron', 'activation functions', 'recognition system', 'neural network architecture design', 'random weights', 'classifier layer', 'feature vectors', 'class identities', 'parameters', 'glorot et al.', 'curvature')","('deep feedforward networks', 'instance of', 'neural network')
('gradient descent', 'instance of', 'optimization algorithm')
('neural network', 'instance of', 'statistical model')
('statistical generalization', 'instance of', 'learning principle')
('cross-entropy family', 'instance of', 'loss function')
('loss function', 'instance of', 'function')
('mean squared error', 'instance of', 'loss function')
('maximum likelihood', 'instance of', 'estimation method')
('sigmoid', 'instance of', 'activation function')
('softmax outputs', 'instance of', 'activation function')
('saturation', 'instance of', 'neural network property')
('sigmoid hidden units', 'instance of', 'hidden units')
('piecewise linear hidden units', 'instance of', 'hidden units')
('rectified linear units', 'instance of', 'activation function')
('Cognitron', 'instance of', 'neural network architecture')
('Neocognitron', 'instance of', 'neural network architecture')
('activation functions', 'instance of', 'functions')
('recognition system', 'instance of', 'system')
('neural network architecture design', 'instance of', 'design process')
('random weights', 'instance of', 'weight initialization method')
('classifier layer', 'instance of', 'layer')
('feature vectors', 'instance of', 'vectors')
('class identities', 'instance of', 'identities')
('parameters', 'instance of', 'variables')
('glorot et al.', 'instance of', 'researchers')
('curvature', 'instance of', 'mathematical property')"
7.4,1,"('rectified linear units', 'neuroscience', 'deep learning algorithms', 'half-rectifying nonlinearity', 'biological neurons', 'sparse activations', 'resurgence of deep learning', 'probabilistic models', 'gradient-based learning', 'variational autoencoder', 'generative adversarial networks', 'unsupervised learning', 'supervised learning', 'optimization algorithms', 'model design')","('rectified linear units', 'instance of', 'activation function')
('neuroscience', 'instance of', 'science')
('deep learning algorithms', 'instance of', 'algorithms')
('half-rectifying nonlinearity', 'instance of', 'nonlinearity')
('biological neurons', 'instance of', 'neurons')
('sparse activations', 'instance of', 'activations')
('resurgence of deep learning', 'instance of', 'trend')
('probabilistic models', 'instance of', 'models')
('gradient-based learning', 'instance of', 'learning')
('variational autoencoder', 'instance of', 'autoencoder')
('generative adversarial networks', 'instance of', 'networks')
('unsupervised learning', 'instance of', 'learning')
('supervised learning', 'instance of', 'learning')
('optimization algorithms', 'instance of', 'algorithms')
('model design', 'instance of', 'design process')"
7.5,0,"('regularization', 'machine learning', 'generalization', 'underfitting', 'overfitting', 'bias', 'variance', 'neural networks')","('regularization', 'part of', 'machine learning')
('generalization', 'part of', 'machine learning')
('underfitting', 'part of', 'machine learning')
('overfitting', 'part of', 'machine learning')
('bias', 'part of', 'machine learning')
('variance', 'part of', 'machine learning')
('neural networks', 'part of', 'machine learning')"
7.6,0,"('regularization', 'deep learning', 'constraints', 'penalties', 'prior knowledge', 'model class', 'generalization', 'ensemble methods', 'estimators', 'bias', 'variance', 'underfitting', 'overfitting', 'estimation error', 'target function', 'true data generating process', 'model family', 'complexity', 'parameters', 'fitting model')","('regularization', 'instance of', 'deep learning')
('constraints', 'part of', 'regularization')
('penalties', 'part of', 'regularization')
('prior knowledge', 'part of', 'regularization')
('model class', 'based on', 'prior knowledge')
('generalization', 'use', 'ensemble methods')
('ensemble methods', 'use', 'estimators')
('bias', 'part of', 'estimation error')
('variance', 'part of', 'estimation error')
('underfitting', 'part of', 'estimation error')
('overfitting', 'part of', 'estimation error')
('estimation error', 'facet of', 'target function')
('target function', 'based on', 'true data generating process')
('true data generating process', 'instance of', 'model family')
('model family', 'based on', 'complexity')
('parameters', 'part of', 'fitting model')
('fitting model', 'instance of', 'model class')"
7.7,0,"('deep learning', 'machine learning', 'mathematics', 'computer science', 'linear regression', 'logistic regression', 'neural networks', 'parameter norm penalty', 'regularization strategies', 'objective function', 'hyperparameter', 'training algorithm', 'model parameters', 'biases', 'weights', 'affine transformation', 'underfitting', 'vector w', 'vector θ')","('deep learning', 'subclass of', 'machine learning')
('linear regression', 'subclass of', 'machine learning')
('logistic regression', 'subclass of', 'machine learning')
('neural networks', 'subclass of', 'machine learning')
('parameter norm penalty', 'facet of', 'regularization strategies')
('regularization strategies', 'part of', 'machine learning')
('objective function', 'part of', 'machine learning')
('hyperparameter', 'part of', 'machine learning')
('training algorithm', 'part of', 'machine learning')
('model parameters', 'part of', 'machine learning')
('biases', 'part of', 'neural networks')
('weights', 'part of', 'neural networks')
('affine transformation', 'part of', 'neural networks')
('underfitting', 'facet of', 'machine learning')
('vector w', 'use', 'linear regression')
('vector θ', 'use', 'logistic regression')"
7.7,1,"('deep learning', 'parameter norm penalty', 'weight decay', 'L2 parameter regularization', 'ridge regression', 'Tikhonov regularization', 'objective function', 'parameter gradient', 'learning rule', 'quadratic approximation', 'linear regression model')","('parameter norm penalty', 'use', 'deep learning')
('weight decay', 'use', 'deep learning')
('L2 parameter regularization', 'use', 'deep learning')
('ridge regression', 'use', 'linear regression model')
('Tikhonov regularization', 'use', 'linear regression model')
('objective function', 'part of', 'deep learning')
('parameter gradient', 'part of', 'deep learning')
('learning rule', 'part of', 'deep learning')
('quadratic approximation', 'part of', 'deep learning')"
7.8,0,"('regularization', 'deep learning', 'mean squared error', 'approximation', 'J', 'θ', 'w', 'Hessian matrix', 'first-order term', 'quadratic approximation', 'minimum', 'gradient', 'weight decay', 'regularized version', 'α', 'location', 'real', 'symmetric', 'decomposition', 'diagonal matrix', 'orthonormal basis', 'eigenvectors', 'axes', 'rescale', 'effect', 'larger eigenvalues', 'relatively small', 'shrunk', 'zero magnitude')","('regularization', 'part of', 'deep learning')
('theta', 'instance of', 'regularized version')
('w', 'instance of', 'regularized version')
('Hessian matrix', 'subclass of', 'matrix')
('J', 'instance of', 'mean squared error')
('J', 'instance of', 'approximation')
('J', 'instance of', 'quadratic approximation')
('J', 'instance of', 'minimum')
('gradient', 'instance of', 'first-order term')
('weight decay', 'instance of', 'regularized version')
('alpha', 'instance of', 'regularized version')
('location', 'instance of', 'real')
('location', 'instance of', 'symmetric')
('location', 'instance of', 'diagonal matrix')
('location', 'instance of', 'orthonormal basis')
('location', 'instance of', 'eigenvectors')
('location', 'instance of', 'axes')
('effect', 'instance of', 'rescale')
('effect', 'instance of', 'larger eigenvalues')
('effect', 'instance of', 'relatively small')
('effect', 'instance of', 'shrunk')
('effect', 'instance of', 'zero magnitude')"
7.8,1,"('L2 regularization', 'weight decay', 'optimal w', 'unregularized objective', 'L2 regularizer', 'equilibrium', 'Hessian of J', 'objective function', 'curvature', 'parameters', 'gradient', 'weight vector', 'quadratic cost function', 'linear regression', 'training data', 'cost function')","('L2 regularization', 'subclass of', 'weight decay')
('optimal w', 'instance of', 'unregularized objective')
('L2 regularizer', 'instance of', 'L2 regularization')
('equilibrium', 'instance of', 'Hessian of J')
('equilibrium', 'instance of', 'objective function')
('equilibrium', 'instance of', 'curvature')
('parameters', 'instance of', 'gradient')
('weight vector', 'instance of', 'gradient')
('weight vector', 'instance of', 'quadratic cost function')
('weight vector', 'instance of', 'linear regression')
('quadratic cost function', 'subclass of', 'training data')
('cost function', 'instance of', 'quadratic cost function')"
7.8,2,"('sum of squared errors', 'L2 regularization', 'objective function', 'normal equations', 'covariance matrix', 'variance', 'input feature', 'L1 regularization', 'model parameters', 'absolute values', 'linear regression model', 'bias parameter', 'differences')","('sum of squared errors', 'instance of', 'objective function')
('L2 regularization', 'instance of', 'objective function')
('covariance matrix', 'instance of', 'variance')
('input feature', 'subclass of', 'covariance matrix')
('L1 regularization', 'instance of', 'objective function')
('model parameters', 'instance of', 'linear regression model')
('model parameters', 'instance of', 'L2 regularization')
('model parameters', 'instance of', 'L1 regularization')
('model parameters', 'instance of', 'normal equations')
('model parameters', 'instance of', 'bias parameter')
('absolute values', 'instance of', 'L1 regularization')
('linear regression model', 'instance of', 'objective function')
('differences', 'instance of', 'sum of squared errors')"
7.8,3,"('L1 weight decay', 'regularized objective function', 'gradient', 'sign', 'quadratic approximations', 'Taylor series', 'Hessian matrix', 'diagonal', 'linear regression problem', 'preprocessed', 'correlation', 'PCA', 'analytical solution')","('L1 weight decay', 'instance of', 'regularized objective function')
('gradient', 'instance of', 'sign')
('quadratic approximations', 'instance of', 'Taylor series')
('Hessian matrix', 'subclass of', 'diagonal')
('linear regression problem', 'instance of', 'preprocessed')
('correlation', 'instance of', 'PCA')
('analytical solution', 'instance of', 'linear regression problem')"
7.8,4,"('optimal value', 'regularized objective', 'sparse', 'sparsity', 'feature selection', 'LASSO', 'least squares cost function', 'linear model', 'MAP Bayesian inference', 'Gaussian prior', 'isotropic Laplace distribution', 'log-prior term')","('optimal value', 'instance of', 'regularized objective')
('sparse', 'subclass of', 'sparsity')
('feature selection', 'instance of', 'LASSO')
('least squares cost function', 'instance of', 'linear model')
('MAP Bayesian inference', 'instance of', 'Gaussian prior')
('MAP Bayesian inference', 'instance of', 'isotropic Laplace distribution')
('MAP Bayesian inference', 'instance of', 'log-prior term')"
7.8,5,"('deep learning', 'machine learning', 'mathematics', 'computer science')","('deep learning', 'part of', 'machine learning')
('deep learning', 'part of', 'computer science')"
7.8,6,"('deep learning', 'machine learning', 'mathematics', 'computer science')","('deep learning', 'subclass of', 'machine learning')
('machine learning', 'part of', 'mathematics')
('machine learning', 'part of', 'computer science')"
7.9,0,"('regularization', 'deep learning', 'neural net layer', 'Frobenius norm', 'weight matrix', 'column norm limitation', 'reprojection', 'linear regression', 'PCA', 'inverting the matrix', 'closed form solutions', 'underdetermined problems', 'logistic regression', 'weight vector', 'stochastic gradient descent', 'weight decay', 'likelihood coefficient')","('regularization', 'instance of', 'deep learning')
('deep learning', 'subclass of', 'neural net layer')
('neural net layer', 'based on', 'Frobenius norm')
('weight matrix', 'subclass of', 'Frobenius norm')
('column norm limitation', 'subclass of', 'Frobenius norm')
('reprojection', 'based on', 'linear regression')
('linear regression', 'based on', 'PCA')
('PCA', 'based on', 'inverting the matrix')
('inverting the matrix', 'based on', 'closed form solutions')
('closed form solutions', 'based on', 'underdetermined problems')
('logistic regression', 'based on', 'linear regression')
('weight vector', 'instance of', 'stochastic gradient descent')
('weight matrix', 'subclass of', 'weight decay')
('likelihood coefficient', 'use', 'stochastic gradient descent')"
7.10,0,"('Moore-Penrose pseudoinverse', 'X+', 'matrix X', 'X', 'αI')","('Moore-Penrose pseudoinverse', 'instance of', 'matrix X')
('X+', 'subclass of', 'matrix X')
('X', 'relation not found', 'None')
('αI', 'subclass of', 'matrix X')"
7.10,1,"('speech recognition tasks', 'Jaitly and Hinton, 2013', 'neural network', 'Sietsma and Dow, 1991', 'denoising autoencoder', 'Vincent et al., 2008', 'Poole et al., 2014', 'dropout', 'section 7.12', 'machine learning benchmark', 'hand-designed dataset augmentation schemes', 'machine learning algorithm A', 'machine learning algorithm B', 'synthetic transformations of the input', 'Gaussian noise')","('speech recognition tasks', 'instance of', 'Jaitly and Hinton, 2013')
('neural network', 'instance of', 'Sietsma and Dow, 1991')
('denoising autoencoder', 'instance of', 'Vincent et al., 2008')
('denoising autoencoder', 'instance of', 'Poole et al., 2014')
('dropout', 'instance of', 'section 7.12')
('machine learning benchmark', 'subclass of', 'hand-designed dataset augmentation schemes')
('machine learning algorithm A', 'instance of', 'machine learning algorithm B')
('synthetic transformations of the input', 'instance of', 'Gaussian noise')"
7.11,0,"('regularization', 'deep learning', 'noise robustness', 'dataset augmentation strategy', 'penalty on the norm of the weights', 'dropout algorithm', 'recurrent neural networks', 'Bayesian inference', 'traditional form of regularization', 'regression setting', 'least-squares cost function', 'labeled examples', 'random perturbation', 'network weights', 'standard l-layer MLP', 'squared error', 'objective function', 'minimization', 'weight noise', 'covariance', 'additional regularization term')","('regularization', 'instance of', 'deep learning')
('penalty on the norm of the weights', 'instance of', 'regularization')
('dropout algorithm', 'instance of', 'regularization')
('traditional form of regularization', 'instance of', 'regularization')
('dataset augmentation strategy', 'instance of', 'regularization')
('Bayesian inference', 'instance of', 'regularization')
('recurrent neural networks', 'instance of', 'deep learning')
('least-squares cost function', 'instance of', 'regression setting')
('squared error', 'instance of', 'regression setting')
('objective function', 'instance of', 'regression setting')
('labeled examples', 'instance of', 'dataset augmentation strategy')
('random perturbation', 'instance of', 'dataset augmentation strategy')
('network weights', 'instance of', 'regularization')
('standard l-layer MLP', 'instance of', 'regularization')
('minimization', 'instance of', 'objective function')
('weight noise', 'instance of', 'regularization')
('covariance', 'instance of', 'regularization')
('additional regularization term', 'instance of', 'regularization')"
7.11,1,"('regularization', 'deep learning', 'small perturbations', 'parameter space', 'weights', 'minima', 'linear regression', 'parameters', 'injecting noise', 'output targets', 'labels', 'label smoothing', 'cross-entropy loss', 'maximum likelihood learning', 'softmax classifier', 'hard targets', 'convergence', 'weight decay', 'semi-supervised learning', 'unlabeled examples', 'labeled examples', 'representation')","('regularization', 'instance of', 'deep learning')
('small perturbations', 'instance of', 'regularization')
('weights', 'instance of', 'parameter space')
('minima', 'instance of', 'parameter space')
('linear regression', 'instance of', 'regression setting')
('parameters', 'instance of', 'linear regression')
('injecting noise', 'instance of', 'regularization')
('output targets', 'instance of', 'linear regression')
('labels', 'instance of', 'output targets')
('label smoothing', 'instance of', 'regularization')
('cross-entropy loss', 'instance of', 'objective function')
('maximum likelihood learning', 'instance of', 'objective function')
('softmax classifier', 'instance of', 'objective function')
('hard targets', 'instance of', 'output targets')
('convergence', 'instance of', 'minimization')
('weight decay', 'instance of', 'regularization')
('semi-supervised learning', 'instance of', 'regularization')
('unlabeled examples', 'instance of', 'semi-supervised learning')
('labeled examples', 'instance of', 'semi-supervised learning and regularization')
('representation', 'instance of', 'labeled examples')"
7.12,0,"('Deep Learning', 'Machine Learning', 'Unsupervised Learning', 'Principal Components Analysis', 'Generative Model', 'Discriminative Model', 'Semi-Supervised Learning', 'Multi-Task Learning')","('Deep Learning', 'subclass of', 'Machine Learning')
('Unsupervised Learning', 'subclass of', 'Machine Learning')
('Principal Components Analysis', 'instance of', 'Unsupervised Learning')
('Generative Model', 'subclass of', 'Machine Learning')
('Discriminative Model', 'subclass of', 'Machine Learning')
('Semi-Supervised Learning', 'subclass of', 'Machine Learning')
('Multi-Task Learning', 'subclass of', 'Machine Learning')"
7.12,1,"('Deep Learning', 'Multi-Task Learning', 'Neural Network', 'Supervised Learning', 'Feedforward Network', 'Generative Component', 'Factors', 'Generalization', 'Generalization Error Bounds', 'Statistical Strength')","('Deep Learning', 'subclass of', 'Neural Network')
('Multi-Task Learning', 'subclass of', 'Neural Network')
('Supervised Learning', 'subclass of', 'Neural Network')
('Feedforward Network', 'subclass of', 'Neural Network')
('Generative Component', 'subclass of', 'Neural Network')
('Factors', 'subclass of', 'Generative Component')
('Generalization', 'part of', 'Generative Component')
('Generalization Error Bounds', 'subclass of', 'Generalization')
('Statistical Strength', 'subclass of', 'Generalization Error Bounds')"
7.12,2,"('Deep Learning', 'Multi-Task Learning', 'Learning Curves', 'Negative Log-Likelihood Loss', 'Maxout Network', 'MNIST', 'Validation Set', 'Early Stopping')","('Deep Learning', 'subclass of', 'Multi-Task Learning')
('Learning Curves', 'instance of', 'Deep Learning')
('Negative Log-Likelihood Loss', 'instance of', 'Deep Learning')
('Maxout Network', 'instance of', 'Deep Learning')
('MNIST', 'instance of', 'Deep Learning')
('Validation Set', 'instance of', 'Deep Learning')
('Early Stopping', 'instance of', 'Deep Learning')"
7.12,3,"('Early Stopping', 'Meta-algorithm', 'Training Algorithm', 'Validation Set Error', 'Parameters', 'Patience', 'Best Parameters', 'Best Number of Training Steps', 'Regularization', 'Hyperparameter')","('Early Stopping', 'instance of', 'Meta-algorithm')
('Training Algorithm', 'instance of', 'Meta-algorithm')
('Validation Set Error', 'instance of', 'Training Algorithm')
('Parameters', 'instance of', 'Training Algorithm')
('Patience', 'instance of', 'Training Algorithm')
('Best Parameters', 'instance of', 'Training Algorithm')
('Best Number of Training Steps', 'instance of', 'Training Algorithm')
('Regularization', 'instance of', 'Training Algorithm')
('Hyperparameter', 'instance of', 'Training Algorithm')"
7.12,4,"('Early Stopping', 'Model Capacity', 'Hyperparameter', 'Training Time', 'Validation Set Evaluation', 'Best Parameters', 'Regularization', 'Weight Decay', 'Objective Function', 'Generalization', 'Training Data')","('Early Stopping', 'instance of', 'Model Capacity')
('Hyperparameter', 'instance of', 'Model Capacity')
('Training Time', 'instance of', 'Model Capacity')
('Validation Set Evaluation', 'instance of', 'Model Capacity')
('Best Parameters', 'instance of', 'Model Capacity')
('Regularization', 'instance of', 'Model Capacity')
('Weight Decay', 'instance of', 'Regularization')
('Objective Function', 'instance of', 'Model Capacity')
('Generalization', 'instance of', 'Model Capacity')
('Training Data', 'instance of', 'Model Capacity')"
7.12,5,"('regularization for deep learning', 'early stopping procedure', 'training set', 'training pass', 'parameter updates', 'training data', 'validation data', 'average loss function', 'training set objective', 'cost of the training procedure', 'regularization strategy', 'learning curves', 'U-shaped curve')","('regularization for deep learning', 'part of', 'training procedure')
('early stopping procedure', 'part of', 'training procedure')
('training set', 'part of', 'training procedure')
('training pass', 'part of', 'training procedure')
('parameter updates', 'part of', 'training procedure')
('training data', 'part of', 'training procedure')
('validation data', 'part of', 'training procedure')
('average loss function', 'part of', 'training procedure')
('training set objective', 'part of', 'training procedure')
('cost of the training procedure', 'part of', 'training procedure')
('regularization strategy', 'part of', 'training procedure')
('learning curves', 'part of', 'training procedure')
('U-shaped curve', 'part of', 'learning curves')"
7.12,6,"('regularization for deep learning', 'early stopping procedure', 'training set', 'training iterations', 'parameter space', 'initial parameter value', 'effective capacity', 'learning rate', 'volume of parameter space', 'weight decay', 'L2 regularization', 'linear model', 'quadratic error function', 'gradient descent', 'cost function', 'quadratic approximation', 'Hessian matrix', 'Taylor series approximation', 'local Taylor series approximation', 'gradient')","('regularization for deep learning', 'part of', 'training procedure')
('early stopping procedure', 'part of', 'training procedure')
('training set', 'part of', 'training procedure')
('training iterations', 'part of', 'training procedure')
('parameter space', 'facet of', 'training procedure')
('initial parameter value', 'facet of', 'training procedure')
('effective capacity', 'facet of', 'training procedure')
('learning rate', 'facet of', 'training procedure')
('volume of parameter space', 'part of', 'training procedure')
('weight decay', 'part of', 'regularization strategy')
('L2 regularization', 'part of', 'regularization strategy')
('linear model', 'instance of', 'model')
('quadratic error function', 'part of', 'cost function')
('gradient descent', 'part of', 'optimization algorithm')
('cost function', 'part of', 'training procedure')
('quadratic approximation', 'part of', 'Taylor series approximation')
('Hessian matrix', 'part of', 'Taylor series approximation')
('Taylor series approximation', 'part of', 'local Taylor series approximation')
('gradient', 'part of', 'gradient descent')"
7.12,7,"('regularization for deep learning', 'early stopping', 'trajectory', 'parameter vector', 'gradient descent', 'cost function', 'gradient', 'L2 regularization', 'parameter space', 'initial parameter vector', 'origin', 'eigenvectors', 'eigendecomposition', 'diagonal matrix', 'orthonormal basis', 'neural networks', 'symmetry breaking', 'hidden units', 'initial value')","('regularization for deep learning', 'part of', 'training procedure')
('early stopping', 'part of', 'training procedure')
('trajectory', 'part of', 'training procedure')
('parameter vector', 'part of', 'training procedure')
('gradient descent', 'part of', 'optimization algorithm')
('cost function', 'part of', 'training procedure')
('gradient', 'part of', 'gradient descent')
('L2 regularization', 'part of', 'regularization strategy')
('parameter space', 'facet of', 'training procedure')
('initial parameter vector', 'facet of', 'training procedure')
('origin', 'part of', 'parameter space')
('eigenvectors', 'part of', 'eigendecomposition')
('eigendecomposition', 'part of', 'diagonal matrix')
('diagonal matrix', 'part of', 'orthonormal basis')
('orthonormal basis', 'part of', 'parameter space')
('neural networks', 'instance of', 'model')
('symmetry breaking', 'part of', 'neural networks')
('hidden units', 'part of', 'neural networks')
('initial value', 'facet of', 'training procedure')"
7.12,8,"('regularization for deep learning', 'parameter trajectory', 'parameter updates', 'hyperparameters', 'L2 regularization', 'quadratic approximation', 'objective function', 'logarithms', 'series expansion', 'training iterations', 'weight decay coefficient', 'curvature', 'validation set error', 'correct amount of regularization')","('regularization for deep learning', 'part of', 'training procedure')
('parameter trajectory', 'part of', 'training procedure')
('parameter updates', 'part of', 'training procedure')
('hyperparameters', 'part of', 'training procedure')
('L2 regularization', 'part of', 'regularization strategy')
('quadratic approximation', 'part of', 'series expansion')
('objective function', 'part of', 'training procedure')
('logarithms', 'part of', 'series expansion')
('series expansion', 'part of', 'quadratic approximation')
('training iterations', 'part of', 'training procedure')
('weight decay coefficient', 'part of', 'regularization strategy')
('curvature', 'part of', 'quadratic approximation')
('validation set error', 'part of', 'training procedure')
('correct amount of regularization', 'part of', 'regularization strategy')"
7.12,9,"('parameter tying', 'parameter sharing', 'constraints', 'penalties', 'L2 regularization', 'model parameters', 'input distributions', 'model architecture', 'dependencies', 'classification task', 'output distributions', 'parameter norm penalty', 'parameter norm', 'parameter regularization', 'classifier model', 'unsupervised model', 'architectures', 'memory footprint')","('parameter tying', 'part of', 'model architecture')
('parameter sharing', 'part of', 'model architecture')
('constraints', 'part of', 'training procedure')
('penalties', 'part of', 'training procedure')
('L2 regularization', 'part of', 'parameter regularization')
('model parameters', 'part of', 'model architecture')
('input distributions', 'part of', 'model architecture')
('model architecture', 'facet of', 'model parameters')
('dependencies', 'part of', 'model architecture')
('classification task', 'part of', 'model architecture')
('output distributions', 'part of', 'model architecture')
('parameter norm penalty', 'part of', 'parameter regularization')
('parameter norm', 'part of', 'parameter regularization')
('parameter regularization', 'part of', 'training procedure')
('classifier model', 'instance of', 'model')
('unsupervised model', 'instance of', 'model')
('architectures', 'part of', 'model parameters')
('memory footprint', 'part of', 'model architecture')"
7.13,0,"('Convolutional Neural Networks', 'CNNs', 'computer vision', 'parametersharing', 'training data', 'network architecture', 'Sparse Representations', 'neural network', 'L1 penalization', 'representational sparsity', 'linear regression')","('Convolutional Neural Networks', 'subclass of', 'neural network')
('neural network', 'based on', 'linear regression')
('CNNs', 'instance of', 'Convolutional Neural Networks')
('parametersharing', 'part of', 'CNNs')
('training data', 'use', 'CNNs')
('network architecture', 'facet of', 'CNNs')
('Sparse Representations', 'subclass of', 'neural network')
('neural network', 'based on', 'Sparse Representations')
('L1 penalization', 'part of', 'Sparse Representations')
('representational sparsity', 'instance of', 'Sparse Representations')
('linear regression', 'subclass of', 'neural network')"
7.13,1,"('linear regression', 'sparse representation', 'representational regularization', 'norm penalty', 'L1 penalty', 'Student-t prior', 'KL divergence penalties', 'orthogonal matching pursuit')","('linear regression', 'subclass of', 'sparse representation')
('sparse representation', 'based on', 'linear regression')
('representational regularization', 'facet of', 'sparse representation')
('norm penalty', 'part of', 'representational regularization')
('L1 penalty', 'facet of', 'representational regularization')
('Student-t prior', 'subclass of', 'representational regularization')
('representational regularization', 'based on', 'Student-t prior')
('KL divergence penalties', 'facet of', 'representational regularization')
('orthogonal matching pursuit', 'use', 'sparse representation')"
7.14,0,"('regularization', 'deep learning', 'OMP-1', 'feature extractor', 'sparse', 'sparsity regularization', 'bagging', 'bootstrap aggregating', 'generalization error', 'ensemble methods', 'model averaging', 'machine learning', 'regression models', 'variances', 'covariances', 'ensemble predictor', 'squared error', 'correlated', 'uncorrelated', 'ensemble size', 'independent errors', 'ensemble methods')","('feature extractor', 'instance of', 'deep learning')
('sparsity regularization', 'instance of', 'regularization')
('bootstrap aggregating', 'instance of', 'ensemble methods')
('ensemble methods', 'use', 'machine learning')
('ensemble methods', 'use', 'regression models')
('ensemble methods', 'use', 'ensemble predictor')
('ensemble methods', 'use', 'squared error')
('ensemble methods', 'use', 'correlated')
('ensemble methods', 'use', 'uncorrelated')
('ensemble methods', 'use', 'ensemble size')
('ensemble methods', 'use', 'independent errors')
('ensemble methods', 'use', 'ensemble methods')"
7.14,1,"('regularization', 'deep learning', 'bagging', 'dataset', 'ensemble member', 'training procedure', 'detector', 'classification rules', 'model', 'algorithm', 'objective function', 'sampling with replacement', 'original dataset', 'examples', 'duplicate examples', 'trained models', 'neural networks', 'random initialization', 'random selection of minibatches', 'hyperparameters', 'non-deterministic implementations', 'solution points')","('deep learning', 'use', 'regularization')
('bagging', 'use', 'ensemble member')
('ensemble member', 'part of', 'bagging')
('training procedure', 'part of', 'bagging')
('detector', 'part of', 'bagging')
('classification rules', 'part of', 'bagging')
('model', 'part of', 'bagging')
('algorithm', 'part of', 'bagging')
('objective function', 'part of', 'bagging')
('sampling with replacement', 'part of', 'bagging')
('original dataset', 'part of', 'bagging')
('examples', 'part of', 'original dataset')
('duplicate examples', 'part of', 'original dataset')
('trained models', 'part of', 'ensemble member')
('neural networks', 'part of', 'trained models')
('random initialization', 'part of', 'trained models')
('random selection of minibatches', 'part of', 'trained models')
('hyperparameters', 'part of', 'trained models')
('non-deterministic implementations', 'part of', 'trained models')
('solution points', 'part of', 'trained models')"
7.14,2,"('dropout', 'regularizing', 'models', 'bagging', 'ensembles', 'neural networks', 'boosting', 'capacity', 'hidden units', 'computational inexpensive', 'approximation', 'runtime', 'memory', 'ensemble of exponentially many neural networks', 'sub-networks', 'base network', 'affine transformations', 'nonlinearities', 'radial basis function networks')","('dropout', 'instance of', 'regularizing')
('dropout', 'use', 'models')
('bagging', 'instance of', 'ensembles')
('ensembles', 'use', 'neural networks')
('boosting', 'instance of', 'ensembles')
('capacity', 'part of', 'neural networks')
('hidden units', 'part of', 'neural networks')
('approximation', 'part of', 'neural networks')
('runtime', 'part of', 'neural networks')
('memory', 'part of', 'neural networks')
('ensemble of exponentially many neural networks', 'part of', 'ensembles')
('sub-networks', 'part of', 'ensemble of exponentially many neural networks')
('base network', 'part of', 'ensemble of exponentially many neural networks')
('affine transformations', 'part of', 'base network')
('nonlinearities', 'part of', 'base network')
('radial basis function networks', 'part of', 'base network')"
7.14,3,"('dropout', 'regularization', 'neural networks', 'bagging', 'datasets', 'training', 'minibatch', 'binary mask', 'hyperparameter', 'forward propagation', 'back-propagation', 'learning update', 'mask vector', 'cost', 'parameters', 'parameter sharing', 'memory', 'convergence', 'parameter settings', 'sub-networks', 'training set')","('dropout', 'use', 'regularization')
('neural networks', 'use', 'dropout')
('bagging', 'use', 'neural networks')
('training', 'part of', 'neural networks')
('minibatch', 'part of', 'training')
('binary mask', 'part of', 'dropout')
('hyperparameter', 'part of', 'dropout')
('forward propagation', 'part of', 'neural networks')
('back-propagation', 'part of', 'neural networks')
('learning update', 'part of', 'neural networks')
('mask vector', 'part of', 'dropout')
('cost', 'part of', 'neural networks')
('parameters', 'part of', 'neural networks')
('parameter sharing', 'part of', 'neural networks')
('memory', 'part of', 'neural networks')
('convergence', 'part of', 'neural networks')
('parameter settings', 'part of', 'neural networks')
('sub-networks', 'part of', 'dropout')
('training set', 'part of', 'datasets')"
7.14,4,"('dropout', 'ensemble', 'sub-networks', 'base network', 'visible units', 'hidden units', 'subsets', 'input units', 'output units', 'path', 'dropout problem', 'wider layers')","('dropout', 'use', 'ensemble')
('sub-networks', 'part of', 'dropout')
('base network', 'part of', 'ensemble')
('visible units', 'part of', 'sub-networks')
('hidden units', 'part of', 'sub-networks')
('subsets', 'part of', 'sub-networks')
('input units', 'part of', 'base network')
('output units', 'part of', 'base network')
('path', 'part of', 'dropout problem')
('dropout problem', 'instance of', 'wider layers')"
8.1,0,"('regularization', 'deep learning', 'feedforward network', 'dropout', 'forward propagation', 'input units', 'hidden layer', 'hidden units', 'output unit', 'vector µ', 'binary', 'hyperparameter', 'mask', 'sub-networks', 'figure 7.6')","('regularization', 'subclass of', 'deep learning'), 
('dropout', 'use', 'feedforward network'),
('forward propagation', 'part of', 'feedforward network'),
('input units', 'part of', 'feedforward network'),
('hidden layer', 'part of', 'feedforward network'),
('hidden units', 'part of', 'hidden layer'),
('output unit', 'part of', 'feedforward network'),
('vector µ', 'instance of', 'binary'), 
('mask', 'use', 'dropout'), 
('sub-networks', 'instance of', 'feedforward network')"
8.1,1,"('bagged ensemble', 'inference', 'probabilistic', 'probability distribution', 'bagging', 'dropout', 'model', 'arithmetic mean', 'distributions', 'mask vector µ', 'sub-model', 'p(µ)', 'deep neural nets', 'sampling', 'geometric mean', 'ensemble members', 'predicted distributions', 'Warde- Farley et al. (2014)', 'probability distribution', 'renormalize', 'unnormalized probability distribution', 'uniform distribution', 'non-uniform distributions')","('bagged ensemble', 'instance of', 'ensemble members'),
('inference', 'use', 'bagged ensemble'),
('probabilistic', 'subclass of', 'probability distribution'),
('probability distribution', 'part of', 'inference'),
('bagging', 'use', 'ensemble members'),
('dropout', 'use', 'ensemble members'),
('model', 'instance of', 'ensemble members'),
('arithmetic mean', 'use', 'ensemble members'),
('distributions', 'part of', 'ensemble members'),
('mask vector µ', 'instance of', 'dropout'),
('sub-model', 'part of', 'ensemble members'),
('p(µ)', 'instance of', 'probability distribution'),
('deep neural nets', 'instance of', 'ensemble members'),
('sampling', 'use', 'ensemble members'),
('geometric mean', 'use', 'ensemble members'),
('predicted distributions', 'part of', 'ensemble members'),
('Warde- Farley et al. (2014)', 'instance of', 'ensemble members'),
('probability distribution', 'part of', 'ensemble members'),
('renormalize', 'part of', 'ensemble members'),
('unnormalized probability distribution', 'part of', 'ensemble members'),
('uniform distribution', 'instance of', 'probability distribution'),
('non-uniform distributions', 'instance of', 'probability distribution')"
8.1,2,"('p˜ (y x) ensemble', 'p (y x)', 'p˜ (y x) y', 'Hinton et al., 2012c', 'dropout', 'approximate inference rule', 'deep nonlinear networks', 'empirically', 'inclusion probability', 'weight scaling inference rule', 'softmax regression classifier', 'binary vector d', 'ensemble predictor', 'P˜ ensemble(y = y | v)')","('p˜ (y x) ensemble', 'instance of', 'ensemble predictor'),
('p (y x)', 'instance of', 'ensemble predictor'),
('p˜ (y x) y', 'instance of', 'ensemble predictor'),
('Hinton et al., 2012c', 'instance of', 'ensemble predictor'),
('dropout', 'use', 'ensemble predictor'),
('approximate inference rule', 'use', 'ensemble predictor'),
('deep nonlinear networks', 'instance of', 'ensemble predictor'),
('empirically', 'use', 'ensemble predictor'),
('inclusion probability', 'instance of', 'ensemble predictor'),
('weight scaling inference rule', 'use', 'ensemble predictor'),
('softmax regression classifier', 'instance of', 'ensemble predictor'),
('binary vector d', 'instance of', 'ensemble predictor'),
('P˜ ensemble(y = y | v)', 'instance of', 'ensemble predictor')"
8.1,3,"('weight scaling rule', 'softmax classifier', 'weights 1 W', 'regression networks', 'conditionally normal outputs', 'deep networks', 'hidden layers', 'nonlinearities', 'approximation', 'theoretically characterized', 'empirically', 'Goodfellow et al., 2013a', 'Monte Carlo approximations', 'ensemble predictor', 'Gal and Ghahramani, 2015')","('weight scaling rule', 'use', 'ensemble predictor'),
('softmax classifier', 'use', 'ensemble predictor'),
('weights 1 W', 'instance of', 'ensemble predictor'),
('regression networks', 'instance of', 'ensemble predictor'),
('conditionally normal outputs', 'part of', 'regression networks'),
('deep networks', 'instance of', 'ensemble predictor'),
('hidden layers', 'part of', 'deep networks'),
('nonlinearities', 'part of', 'deep networks'),
('approximation', 'part of', 'ensemble predictor'),
('theoretically characterized', 'part of', 'ensemble predictor'),
('empirically', 'part of', 'ensemble predictor'),
('Goodfellow et al., 2013a', 'instance of', 'ensemble predictor'),
('Monte Carlo approximations', 'use', 'ensemble predictor'),
('ensemble predictor', 'instance of', 'ensemble predictor'),
('Gal and Ghahramani, 2015', 'instance of', 'ensemble predictor')"
8.1,4,"('inference approximation', 'Srivastava et al., 2014', 'dropout', 'regularizers', 'weight decay', 'filter norm constraints', 'sparse activity regularization', 'computationally cheap', 'distributed representation', 'stochastic gradient descent', 'feedforward neural networks', 'restricted Boltzmann machines', 'recurrent neural networks', 'architecture of the model', 'effective capacity', 'validation set error', 'complete system', 'generalization error', 'Bayesian neural networks', 'Alternative Splicing Dataset', 'unsupervised feature learning', 'L2 weight decay', 'weight decay coefficient')","('inference approximation', 'instance of', 'computationally cheap'),
('Srivastava et al., 2014', 'instance of', 'dropout'),
('dropout', 'use', 'regularizers'),
('regularizers', 'part of', 'inference approximation'),
('weight decay', 'use', 'regularizers'),
('filter norm constraints', 'use', 'regularizers'),
('sparse activity regularization', 'use', 'regularizers'),
('computationally cheap', 'part of', 'inference approximation'),
('distributed representation', 'part of', 'inference approximation'),
('stochastic gradient descent', 'use', 'inference approximation'),
('feedforward neural networks', 'instance of', 'inference approximation'),
('restricted Boltzmann machines', 'instance of', 'inference approximation'),
('recurrent neural networks', 'instance of', 'inference approximation'),
('architecture of the model', 'part of', 'inference approximation'),
('effective capacity', 'part of', 'inference approximation'),
('validation set error', 'part of', 'inference approximation'),
('complete system', 'part of', 'inference approximation'),
('generalization error', 'part of', 'inference approximation'),
('Bayesian neural networks', 'instance of', 'inference approximation'),
('Alternative Splicing Dataset', 'part of', 'inference approximation'),
('unsupervised feature learning', 'part of', 'inference approximation'),
('L2 weight decay', 'use', 'weight decay'),
('weight decay coefficient', 'part of', 'weight decay')"
8.1,5,"('REGULARIZATION FOR DEEP LEARNING', 'weight decay', 'dropout', 'Wang and Manning (2013)', 'fast dropout', 'Warde-Farley et al. (2014)', 'dropout boosting', 'bagging', 'DropConnect', 'Wan et al., 2013', 'stochastic pooling')","('dropout', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('fast dropout', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('dropout boosting', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('bagging', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('DropConnect', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('stochastic pooling', 'subclass of', 'REGULARIZATION FOR DEEP LEARNING')
('Wang and Manning (2013)', 'use', 'dropout')
('Warde-Farley et al. (2014)', 'use', 'dropout')
('Wan et al., 2013', 'use', 'DropConnect')"
8.1,6,"('µ (1,I)', 'Srivastava et al. (2014)', 'bagged ensemble', 'Hinton et al. (2012c)', 'sexual reproduction', 'Warde-Farley et al. (2014)')","('Srivastava et al. (2014)', 'use', 'µ (1,I)')
('Hinton et al. (2012c)', 'use', 'bagged ensemble')
('Warde-Farley et al. (2014)', 'use', 'sexual reproduction')"
8.2,0,"('regularization', 'deep learning', 'knowledge', 'input distribution', 'dropout', 'noise', 'rectified linear hidden unit', 'batch normalization', 'optimization', 'adversarial training', 'neural networks', 'error rate', 'computer security', 'linearity')","('regularization', 'part of', 'deep learning')
('dropout', 'part of', 'deep learning')
('rectified linear hidden unit', 'part of', 'neural networks')
('batch normalization', 'part of', 'neural networks')
('optimization', 'part of', 'deep learning')
('adversarial training', 'part of', 'deep learning')
('neural networks', 'part of', 'deep learning')
('error rate', 'part of', 'deep learning')
('computer security', 'part of', 'deep learning')"
8.2,1,"('regularization', 'deep learning', 'adversarial example generation', 'GoogLeNet', 'ImageNet', 'cost function', 'local constancy prior', 'supervised neural nets', 'semi-supervised learning', 'classifier')","('regularization', 'part of', 'deep learning')
('adversarial example generation', 'part of', 'deep learning')
('GoogLeNet', 'instance of', 'deep learning')
('cost function', 'part of', 'deep learning')
('local constancy prior', 'part of', 'deep learning')
('supervised neural nets', 'part of', 'deep learning')
('semi-supervised learning', 'part of', 'deep learning')
('classifier', 'part of', 'deep learning')"
8.2,2,"('regularization', 'deep learning', 'manifold', 'tangent distance algorithm', 'nearest-neighbor algorithm', 'Euclidean distance', 'manifold hypothesis', 'tangent prop algorithm', 'neural net classifier', 'local invariance')","('regularization', 'part of', 'deep learning')
('manifold', 'part of', 'deep learning')
('tangent distance algorithm', 'part of', 'deep learning')
('nearest-neighbor algorithm', 'part of', 'deep learning')
('Euclidean distance', 'part of', 'deep learning')
('manifold hypothesis', 'part of', 'deep learning')
('tangent prop algorithm', 'part of', 'deep learning')
('neural net classifier', 'part of', 'deep learning')
('local invariance', 'part of', 'deep learning')"
8.2,3,"('regularization', 'deep learning', 'tangent prop', 'formal knowledge', 'transformation', 'reinforcement learning', 'dataset augmentation', 'rectified linear units', 'double backprop', 'adversarial training', 'manifold tangent classifier', 'autoencoders')","('regularization', 'part of', 'deep learning')
('tangent prop', 'part of', 'deep learning')
('formal knowledge', 'part of', 'deep learning')
('transformation', 'part of', 'deep learning')
('reinforcement learning', 'part of', 'deep learning')
('dataset augmentation', 'part of', 'deep learning')
('rectified linear units', 'part of', 'deep learning')
('double backprop', 'part of', 'deep learning')
('adversarial training', 'part of', 'deep learning')
('manifold tangent classifier', 'part of', 'deep learning')
('autoencoders', 'part of', 'deep learning')"
8.2,4,"('regularization', 'deep learning', 'tangent prop algorithm', 'manifold tangent classifier', 'autoencoders', 'manifold', 'tangent vectors', 'geometry of images', 'unsupervised learning', 'neural net classifier')","('regularization', 'part of', 'deep learning')
('tangent prop algorithm', 'part of', 'deep learning')
('manifold tangent classifier', 'part of', 'deep learning')
('autoencoders', 'part of', 'deep learning')
('manifold', 'part of', 'deep learning')
('tangent vectors', 'part of', 'deep learning')
('geometry of images', 'part of', 'deep learning')
('unsupervised learning', 'part of', 'deep learning')
('neural net classifier', 'part of', 'deep learning')"
8.2,5,"('REGULARIZATION FOR DEEP LEARNING', 'machine learning', 'optimization')","('REGULARIZATION FOR DEEP LEARNING', 'instance of', 'machine learning')
('REGULARIZATION FOR DEEP LEARNING', 'subject of', 'optimization')"
8.2,6,"('deep learning', 'optimization', 'neural network training', 'gradient-based optimization', 'numerical optimization', 'cost function', 'performance measure', 'regularization terms')","('deep learning', 'subject of', 'neural network training')
('deep learning', 'subject of', 'gradient-based optimization')
('deep learning', 'subject of', 'numerical optimization')
('deep learning', 'subject of', 'cost function')
('deep learning', 'subject of', 'performance measure')
('deep learning', 'subject of', 'regularization terms')"
8.2,7,"('deep models', 'optimization algorithms', 'machine learning', 'performance measure', 'cost function', 'per-example loss function', 'supervised learning', 'unsupervised learning', 'objective function', 'data generating distribution', 'empirical risk minimization', 'generalization error')","('deep models', 'subject of', 'optimization algorithms')
('deep models', 'instance of', 'machine learning')
('deep models', 'subject of', 'performance measure')
('deep models', 'subject of', 'cost function')
('deep models', 'subject of', 'per-example loss function')
('deep models', 'instance of', 'supervised learning')
('deep models', 'instance of', 'unsupervised learning')
('deep models', 'subject of', 'objective function')
('deep models', 'subject of', 'data generating distribution')
('deep models', 'subject of', 'empirical risk minimization')
('deep models', 'subject of', 'generalization error')"
8.2,8,"('optimization algorithm', 'machine learning problem', 'empirical risk minimization', 'average training error', 'overfitting', 'gradient descent', 'loss function', 'surrogate loss functions', 'early stopping', 'classification error', 'negative log-likelihood')","('optimization algorithm', 'subject of', 'machine learning problem')
('optimization algorithm', 'subject of', 'empirical risk minimization')
('optimization algorithm', 'subject of', 'average training error')
('optimization algorithm', 'subject of', 'overfitting')
('optimization algorithm', 'subject of', 'gradient descent')
('optimization algorithm', 'subject of', 'loss function')
('optimization algorithm', 'subject of', 'surrogate loss functions')
('optimization algorithm', 'subject of', 'early stopping')
('optimization algorithm', 'subject of', 'classification error')
('optimization algorithm', 'subject of', 'negative log-likelihood')"
8.2,9,"('surrogate loss function', 'test set 0-1 loss', 'robustness of the classifier', 'convergence criterion', 'early stopping', 'local minimum', 'batch and minibatch algorithms', 'maximum likelihood estimation', 'empirical distribution', 'objective function')","('surrogate loss function', 'subject of', 'test set 0-1 loss')
('surrogate loss function', 'subject of', 'robustness of the classifier')
('surrogate loss function', 'subject of', 'convergence criterion')
('surrogate loss function', 'subject of', 'early stopping')
('surrogate loss function', 'subject of', 'local minimum')
('surrogate loss function', 'subject of', 'batch and minibatch algorithms')
('surrogate loss function', 'subject of', 'maximum likelihood estimation')
('surrogate loss function', 'subject of', 'empirical distribution')
('surrogate loss function', 'subject of', 'objective function')"
8.2,10,"('optimization', 'training', 'deep models', 'gradient', 'J(θ)', 'logp (x,y;θ)', '∇θ', 'data', 'model', 'expectation', 'computation', 'examples', 'dataset', 'standard error', 'mean', 'n samples', 'σ', 'true standard deviation', 'value', 'linear returns', 'standard deviation', 'hypo","('optimization', 'training', 'deep models')
('gradient', 'J(θ)', 'logp (x,y;θ)')
('∇θ', 'data', 'model')
('expectation', 'computation', 'examples')
('dataset', 'standard error', 'mean')
('n samples', 'σ', 'true standard deviation')
('value', 'linear returns', 'standard deviation')"
8.2,11,"('optimization', 'training', 'deep models', 'minibatch', 'stochastic methods', 'stochastic gradient descent', 'batch size', 'multicore architectures', 'memory', 'hardware', 'power of 2', 'regularizing effect', 'generalization error', 'learning rate', 'sampling error', 'gradient', 'Hessian matrix', 'condition number')","('optimization', 'training', 'deep models')
('minibatch', 'stochastic methods', 'stochastic gradient descent')
('batch size', 'multicore architectures', 'memory')
('hardware', 'power of 2', 'regularizing effect')
('generalization error', 'learning rate', 'sampling error')
('gradient', 'Hessian matrix', 'condition number')"
8.3,0,"('OPTIMIZATION', 'TRAINING', 'DEEP MODELS', 'H', 'inverse', 'errors', 'estimation errors', 'g', 'estimate of g', 'update H 1g', 'H', 'minibatches', 'samples', 'gradient', 'expected gradient', 'dataset', 'medical data', 'blood sample test results', 'patient', 'examples', 'order', 'shuffle', 'data center', 'random selection', 'algorithm', 'optimization problems', 'machine learning', 'J(X)', 'minibatch stochastic gradient descent', 'generalization error', 'implementations')","('H', 'instance of', 'optimization') 
('inverse', 'instance of', 'relation') 
('errors', 'instance of', 'training') 
('estimation errors', 'instance of', 'errors') 
('g', 'instance of', 'estimation errors') 
('estimate of g', 'instance of', 'g') 
('update H 1g', 'instance of', 'estimate of g') 
('H', 'instance of', 'minibatches') 
('samples', 'instance of', 'gradient') 
('expected gradient', 'instance of', 'samples') 
('dataset', 'instance of', 'medical data') 
('blood sample test results', 'instance of', 'dataset') 
('patient', 'instance of', 'blood sample test results') 
('examples', 'instance of', 'order') 
('shuffle', 'instance of', 'examples') 
('data center', 'instance of', 'shuffle') 
('random selection', 'instance of', 'data center') 
('algorithm', 'instance of', 'optimization problems') 
('optimization problems', 'instance of', 'machine learning') 
('J(X)', 'instance of', 'minibatch stochastic gradient descent') 
('generalization error', 'instance of', 'implementations')"
8.3,1,"('OPTIMIZATION', 'TRAINING', 'DEEP MODELS', 'descent', 'shuffle', 'dataset', 'minibatch', 'compute', 'unbiased estimate', 'generalization error', 'online learning', 'stream of data', 'learner', 'example', 'data generating distribution', 'discrete', 'exact gradient', 'log-likelihood', 'functions', 'likelihood', 'continuous', 'mild assumptions', 'parameters', 'minibatch of examples', 'targets', 'loss', 'updating', 'direction', 'SGD', 'epochs')","('descent', 'instance of', 'optimization')
('shuffle', 'instance of', 'training')
('dataset', 'instance of', 'deep models')
('minibatch', 'instance of', 'dataset')
('compute', 'instance of', 'minibatch')
('unbiased estimate', 'instance of', 'compute')
('generalization error', 'instance of', 'unbiased estimate')
('online learning', 'instance of', 'generalization error')
('stream of data', 'instance of', 'online learning')
('learner', 'instance of', 'stream of data')
('example', 'instance of', 'learner')
('data generating distribution', 'instance of', 'example')
('discrete', 'instance of', 'data generating distribution')
('exact gradient', 'instance of', 'discrete')
('log-likelihood', 'instance of', 'exact gradient')
('functions', 'instance of', 'log-likelihood')
('likelihood', 'instance of', 'functions')
('continuous', 'instance of', 'likelihood')
('mild assumptions', 'instance of', 'continuous')
('parameters', 'instance of', 'mild assumptions')
('minibatch of examples', 'instance of', 'parameters')
('targets', 'instance of', 'minibatch of examples')
('loss', 'instance of', 'targets')
('updating', 'instance of', 'loss')
('direction', 'instance of', 'updating')
('SGD', 'instance of', 'direction')
('epochs', 'instance of', 'SGD')"
8.3,2,"('Optimization', 'Neural Network Optimization', 'convex optimization', 'objective function', 'constraints', 'convex case', 'most prominent challenges', 'ill-conditioning', 'Hessian matrix H', 'numerical optimization', 'neural network training problems', 'convex functions', 'second-order Taylor series expansion', 'gradient descent step', 'squared gradient norm')","('Neural Network Optimization', 'instance of', 'Optimization')
('convex optimization', 'instance of', 'Optimization')
('objective function', 'instance of', 'convex optimization')
('constraints', 'instance of', 'convex optimization')
('convex case', 'instance of', 'convex optimization')
('ill-conditioning', 'instance of', 'most prominent challenges')
('Hessian matrix H', 'instance of', 'ill-conditioning')
('numerical optimization', 'instance of', 'neural network training problems')
('convex functions', 'instance of', 'convex optimization')
('second-order Taylor series expansion', 'instance of', 'convex functions')
('gradient descent step', 'instance of', 'numerical optimization')
('squared gradient norm', 'instance of', 'gradient descent step')"
8.3,3,"('Gradient descent', 'critical point', 'convolutional network', 'object detection', 'scatterplot', 'gradient norm', 'training process', 'validation set', 'classification error', 'learning', 'learning rate', 'curvature', 'ill-conditioning', 'Newton’s method', 'local minima', 'convex optimization problem')","('critical point', 'instance of', 'gradient descent')
('convolutional network', 'instance of', 'gradient descent')
('object detection', 'instance of', 'convolutional network')
('scatterplot', 'instance of', 'gradient descent')
('gradient norm', 'instance of', 'gradient descent')
('training process', 'instance of', 'gradient descent')
('validation set', 'instance of', 'training process')
('classification error', 'instance of', 'training process')
('learning', 'instance of', 'gradient descent')
('learning rate', 'instance of', 'learning')
('curvature', 'instance of', 'gradient descent')
('ill-conditioning', 'instance of', 'curvature')
('Newton’s method', 'instance of', 'gradient descent')
('local minima', 'instance of', 'Newton’s method')
('convex optimization problem', 'instance of', 'Newton’s method')"
8.3,4,"('local minima', 'global minimum', 'convex functions', 'deep model', 'model identifiability problem', 'latent variables', 'weight space symmetry', 'rectified linear', 'maxout network', 'cost function value')","('global minimum', 'instance of', 'local minima')
('convex functions', 'instance of', 'global minimum')
('deep model', 'instance of', 'convex functions')
('model identifiability problem', 'instance of', 'deep model')
('latent variables', 'instance of', 'model identifiability problem')
('weight space symmetry', 'instance of', 'latent variables')
('rectified linear', 'instance of', 'deep model')
('maxout network', 'instance of', 'deep model')
('cost function value', 'instance of', 'maxout network')"
8.3,5,"('optimization', 'training', 'deep models', 'neural network optimization', 'local minima', 'cost function value', 'global minimum', 'parameter space', 'low cost', 'Saxe et al.', 'Dauphin et al.', 'Goodfellow et al.', 'Choromanska et al.', 'gradient', 'sufficiently large neural networks', 'norm of the gradient', 'negative test', 'high dimensional spaces', 'plateaus', 'saddle points', 'flat regions', 'Hessian matrix', 'cross-section', 'random functions', 'expected ratio', 'sign of each eigenvalue', 'coin tosses')","('optimization', 'part of', 'deep models')
('training', 'part of', 'deep models')
('deep models', 'instance of', 'neural network optimization')
('local minima', 'part of', 'cost function value')
('cost function value', 'part of', 'global minimum')
('parameter space', 'part of', 'neural network optimization')
('low cost', 'part of', 'sufficiently large neural networks')
('Saxe et al.', 'part of', 'neural network optimization')
('Dauphin et al.', 'part of', 'neural network optimization')
('Goodfellow et al.', 'part of', 'neural network optimization')
('Choromanska et al.', 'part of', 'neural network optimization')
('gradient', 'part of', 'sufficiently large neural networks')
('sufficiently large neural networks', 'part of', 'norm of the gradient')
('negative test', 'part of', 'high dimensional spaces')
('plateaus', 'part of', 'high dimensional spaces')
('saddle points', 'part of', 'high dimensional spaces')
('flat regions', 'part of', 'high dimensional spaces')
('Hessian matrix', 'part of', 'high dimensional spaces')
('cross-section', 'part of', 'high dimensional spaces')
('random functions', 'part of', 'high dimensional spaces')
('expected ratio', 'part of', 'high dimensional spaces')
('sign of each eigenvalue', 'part of', 'high dimensional spaces')
('coin tosses', 'part of', 'high dimensional spaces')"
8.3,6,"('optimization', 'training', 'deep models', 'random functions', 'eigenvalues', 'Hessian', 'coin tossing analogy', 'local minima', 'critical points', 'saddle points', 'local maxima', 'nonlinearities', 'shallow autoencoders', 'feedforward networks', 'nonlinear neural networks', 'complete learning dynamics', 'learning in these models', 'training algorithms', 'first-order optimization algorithms', 'gradient descent', 'visualizations', 'cost function', 'weights', 'continuous-time gradient descent', 'Newton’s method')","('optimization', 'part of', 'deep models')
('training', 'part of', 'deep models')
('deep models', 'instance of', 'neural network optimization')
('random functions', 'part of', 'high dimensional spaces')
('eigenvalues', 'part of', 'Hessian')
('Hessian', 'part of', 'neural network optimization')
('coin tossing analogy', 'part of', 'high dimensional spaces')
('local minima', 'part of', 'cost function')
('critical points', 'part of', 'cost function')
('saddle points', 'part of', 'cost function')
('local maxima', 'part of', 'cost function')
('nonlinearities', 'part of', 'nonlinear neural networks')
('shallow autoencoders', 'part of', 'feedforward networks')
('feedforward networks', 'part of', 'nonlinear neural networks')
('nonlinear neural networks', 'part of', 'deep models')
('complete learning dynamics', 'part of', 'deep models')
('learning in these models', 'part of', 'deep models')
('training algorithms', 'part of', 'deep models')
('first-order optimization algorithms', 'part of', 'training algorithms')
('gradient descent', 'part of', 'first-order optimization algorithms')
('visualizations', 'part of', 'deep models')
('cost function', 'part of', 'deep models')
('weights', 'part of', 'deep models')
('continuous-time gradient descent', 'part of', 'optimization')
('Newton’s method', 'part of', 'optimization')"
8.4,0,"('neural network', 'cost function', 'stochastic gradient descent', 'training trajectory', 'training time', 'gradient', 'Hessian matrix')","('neural network', 'instance of', 'cost function')
('cost function', 'instance of', 'neural network')
('neural network', 'instance of', 'stochastic gradient descent')
('stochastic gradient descent', 'instance of', 'neural network')
('training trajectory', 'instance of', 'neural network')
('neural network', 'instance of', 'training trajectory')
('training time', 'instance of', 'neural network')
('neural network', 'instance of', 'training time')
('gradient', 'instance of', 'neural network')
('neural network', 'instance of', 'gradient')
('Hessian matrix', 'instance of', 'neural network')
('neural network', 'instance of', 'Hessian matrix')"
8.4,1,"('gradient descent', 'Newton’s method', 'saddle point', 'second-order methods', 'saddle-free Newton method', 'maxima', 'wide, flat regions', 'convex problem', 'cliffs', 'exploding gradients')","('gradient descent', 'instance of', 'Newton’s method')
('Newton’s method', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'saddle point')
('saddle point', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'second-order methods')
('second-order methods', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'saddle-free Newton method')
('saddle-free Newton method', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'maxima')
('maxima', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'wide, flat regions')
('wide, flat regions', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'convex problem')
('convex problem', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'cliffs')
('cliffs', 'instance of', 'gradient descent')
('gradient descent', 'instance of', 'exploding gradients')
('exploding gradients', 'instance of', 'gradient descent')"
8.4,2,"('deep neural networks', 'recurrent neural networks', 'nonlinearities', 'parameter space', 'cliff region', 'gradient clipping heuristic', 'cost functions', 'multiplication', 'long-term dependencies', 'computational graph')","('deep neural networks', 'instance of', 'recurrent neural networks')
('recurrent neural networks', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'nonlinearities')
('nonlinearities', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'parameter space')
('parameter space', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'cliff region')
('cliff region', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'gradient clipping heuristic')
('gradient clipping heuristic', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'cost functions')
('cost functions', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'multiplication')
('multiplication', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'long-term dependencies')
('long-term dependencies', 'instance of', 'deep neural networks')
('deep neural networks', 'instance of', 'computational graph')
('computational graph', 'instance of', 'deep neural networks')"
8.4,3,"('computational graph', 'long temporal sequence', 'matrix multiplication', 'eigendecomposition', 'vanishing gradients', 'exploding gradients', 'gradient clipping', 'power method algorithm', 'principal eigenvector', 'recurrent networks', 'feedforward networks', 'inexact gradients')","('computational graph', 'instance of', 'long temporal sequence')
('long temporal sequence', 'instance of', 'computational graph')
('computational graph', 'instance of', 'matrix multiplication')
('matrix multiplication', 'instance of', 'computational graph')
('computational graph', 'instance of', 'eigendecomposition')
('eigendecomposition', 'instance of', 'computational graph')
('computational graph', 'instance of', 'vanishing gradients')
('vanishing gradients', 'instance of', 'computational graph')
('computational graph', 'instance of', 'exploding gradients')
('exploding gradients', 'instance of', 'computational graph')
('computational graph', 'instance of', 'gradient clipping')
('gradient clipping', 'instance of', 'computational graph')
('computational graph', 'instance of', 'power method algorithm')
('power method algorithm', 'instance of', 'computational graph')
('computational graph', 'instance of', 'principal eigenvector')
('principal eigenvector', 'instance of', 'computational graph')
('computational graph', 'instance of', 'recurrent networks')
('recurrent networks', 'instance of', 'computational graph')
('computational graph', 'instance of', 'feedforward networks')
('feedforward networks', 'instance of', 'computational graph')
('computational graph', 'instance of', 'inexact gradients')
('inexact gradients', 'instance of', 'computational graph')"
8.4,4,"('contrastive divergence', 'Boltzmann machine', 'surrogate loss function', 'poorly conditioned', 'cliff', 'saddle point', 'learning trajectory', 'global minimum', 'local minimum', 'critical point', 'loss function', 'log-likelihood', 'softmax', 'classifier', 'negative log-likelihood', 'N log-likelihood', 'learning algorithm', 'local optimization')","('contrastive divergence', 'instance of', 'Boltzmann machine')
('Boltzmann machine', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'surrogate loss function')
('surrogate loss function', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'poorly conditioned')
('poorly conditioned', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'cliff')
('cliff', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'saddle point')
('saddle point', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'learning trajectory')
('learning trajectory', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'global minimum')
('global minimum', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'local minimum')
('local minimum', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'critical point')
('critical point', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'loss function')
('loss function', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'log-likelihood')
('log-likelihood', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'softmax')
('softmax', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'classifier')
('classifier', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'negative log-likelihood')
('negative log-likelihood', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'N log-likelihood')
('N log-likelihood', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'learning algorithm')
('learning algorithm', 'instance of', 'contrastive divergence')
('contrastive divergence', 'instance of', 'local optimization')
('local optimization', 'instance of', 'contrastive divergence')"
8.5,0,"('deep models', 'optimization', 'training', 'global solution', 'saddle points', 'local minima', 'cost function', 'asymptotes', 'mountain', 'trajectory', 'learning algorithms', 'neural networks', 'gradient descent', 'objective function', 'conditioning', 'discontinuous gradients', 'steps', 'short path')","('deep models', 'subclass of', 'neural networks')
('optimization', 'part of', 'training')
('training', 'use', 'learning algorithms')
('global solution', 'based on', 'optimization')
('saddle points', 'based on', 'optimization')
('local minima', 'based on', 'optimization')
('cost function', 'based on', 'optimization')
('asymptotes', 'based on', 'cost function')
('mountain', 'based on', 'cost function')
('trajectory', 'based on', 'steps')
('learning algorithms', 'use', 'gradient descent')
('neural networks', 'instance of', 'deep models')
('gradient descent', 'use', 'learning algorithms')
('objective function', 'based on', 'cost function')
('conditioning', 'based on', 'cost function')
('discontinuous gradients', 'based on', 'cost function')
('steps', 'use', 'learning algorithms')
('short path', 'based on', 'trajectory')"
8.5,1,"('neural networks', 'optimization algorithm', 'performance', 'critical point', 'Newton’s method', 'wide flat region', 'greedy', 'trajectory', 'well-behaved region', 'initial points', 'traditional optimization algorithms', 'theoretical limits', 'intractable', 'generalization error', 'machine learning research')","('neural networks', 'instance of', 'optimization algorithm')
('optimization algorithm', 'use', 'neural networks')
('performance', 'based on', 'optimization algorithm')
('critical point', 'based on', 'optimization algorithm')
('Newton’s method', 'instance of', 'optimization algorithm')
('wide flat region', 'based on', 'optimization algorithm')
('greedy', 'based on', 'optimization algorithm')
('trajectory', 'based on', 'optimization algorithm')
('well-behaved region', 'based on', 'optimization algorithm')
('initial points', 'based on', 'optimization algorithm')
('traditional optimization algorithms', 'subclass of', 'optimization algorithm')
('theoretical limits', 'based on', 'optimization algorithm')
('intractable', 'based on', 'optimization algorithm')
('generalization error', 'based on', 'optimization algorithm')
('machine learning research', 'based on', 'optimization algorithm')"
8.5,2,"('gradient descent', 'stochastic gradient descent', 'optimization algorithms', 'machine learning', 'deep learning', 'learning rate', 'parameter', 'training set', 'gradient estimate', 'update', 'stopping criterion', 'minibatch', 'examples', 'targets', 'total cost function', 'convergence')","('gradient descent', 'subclass of', 'optimization algorithms')
('stochastic gradient descent', 'subclass of', 'optimization algorithms')
('optimization algorithms', 'use', 'machine learning')
('machine learning', 'instance of', 'deep learning')
('deep learning', 'use', 'gradient descent')
('learning rate', 'use', 'gradient descent')
('parameter', 'based on', 'gradient descent')
('training set', 'use', 'gradient descent')
('gradient estimate', 'use', 'gradient descent')
('update', 'use', 'gradient descent')
('stopping criterion', 'use', 'gradient descent')
('minibatch', 'use', 'stochastic gradient descent')
('examples', 'use', 'gradient descent')
('targets', 'use', 'gradient descent')
('total cost function', 'based on', 'gradient descent')
('convergence', 'use', 'gradient descent')"
8.5,3,"('learning rate', 'decay', 'iteration', 'monitoring learning curves', 'linear schedule', 'initial learning rate', 'cost function', 'convergence', 'optimization algorithm', 'training examples', 'dataset', 'tolerance', 'excess error', 'convex problem', 'strongly convex', 'batch gradient descent', 'stochastic gradient descent', 'Cramér-Rao bound', 'generalization error')","('learning rate', 'decay', 'optimization algorithm')
('learning rate', 'decay', 'convergence')
('learning rate', 'decay', 'monitoring learning curves')
('learning rate', 'decay', 'linear schedule')
('learning rate', 'decay', 'initial learning rate')
('learning rate', 'decay', 'cost function')
('learning rate', 'decay', 'batch gradient descent')
('learning rate', 'decay', 'stochastic gradient descent')
('iteration', 'monitoring', 'learning curves')
('iteration', 'monitoring', 'cost function')
('iteration', 'monitoring', 'convergence')
('iteration', 'monitoring', 'optimization algorithm')
('iteration', 'monitoring', 'training examples')
('cost function', 'convergence', 'optimization algorithm')
('cost function', 'convergence', 'training examples')
('cost function', 'convergence', 'dataset')
('optimization algorithm', 'convergence', 'tolerance')
('optimization algorithm', 'convergence', 'excess error')
('optimization algorithm', 'convergence', 'convex problem')
('optimization algorithm', 'convergence', 'strongly convex')
('optimization algorithm', 'training examples', 'batch gradient descent')
('optimization algorithm', 'training examples', 'stochastic gradient descent')
('optimization algorithm', 'convergence', 'Cramér-Rao bound')
('optimization algorithm', 'convergence', 'generalization error')"
8.6,0,"('deep models', 'optimization algorithm', 'converges faster', 'machine learning', 'overfitting', 'stochastic gradient descent', 'large datasets', 'rapid initial progress', 'evaluating the gradient', 'batch and stochastic gradient descent', 'minibatch size', 'learning with it', 'momentum algorithm', 'high curvature', 'consistent gradients', 'noisy gradients', 'exponentially decaying moving average', 'parameter space', 'Newton’s laws of motion', 'momentum in physics', 'hyperparameter', 'update rule', 'velocity vectorv', 'particle', 'learning algorithm', 'algorithm 8.2')","('deep models', 'subclass of', 'machine learning')
('optimization algorithm', 'subclass of', 'machine learning')
('converges faster', 'subclass of', 'optimization algorithm')
('overfitting','subclass of', 'machine learning')
('stochastic gradient descent', 'subclass of', 'optimization algorithm')
('large datasets', 'subclass of', 'machine learning')
('rapid initial progress', 'subclass of', 'optimization algorithm')
('evaluating the gradient', 'subclass of', 'optimization algorithm')
('batch and stochastic gradient descent', 'subclass of', 'optimization algorithm')
('minibatch size', 'subclass of', 'batch and stochastic gradient descent')
('learning with it', 'subclass of', 'batch and stochastic gradient descent')
('momentum algorithm', 'subclass of', 'optimization algorithm')
('high curvature', 'subclass of', 'optimization algorithm')
('consistent gradients', 'subclass of', 'optimization algorithm')
('noisy gradients', 'subclass of', 'optimization algorithm')
('exponentially decaying moving average', 'subclass of', 'optimization algorithm')
('parameter space', 'instance of', 'machine learning')
('Newton’s laws of motion', 'subclass of', 'machine learning')
('momentum in physics', 'subclass of', 'machine learning')
('hyperparameter', 'subclass of', 'machine learning')
('update rule', 'subclass of', 'machine learning')
('velocity vectorv', 'subclass of', 'machine learning')
('particle', 'subclass of', 'machine learning')
('learning algorithm', 'subclass of', 'machine learning')
('algorithm 8.2', 'subclass of', 'machine learning')"
8.6,1,"('Hessian matrix', 'variance', 'stochastic gradient', 'momentum', 'poorly conditioned Hessian matrix', 'quadratic loss function', 'momentum learning rule', 'gradient descent', 'canyon', 'steep sides', 'quadratic objective')","('Hessian matrix', 'subclass of', 'variance')
('stochastic gradient', 'subclass of', 'momentum')
('poorly conditioned Hessian matrix', 'subclass of', 'Hessian matrix')
('quadratic loss function', 'subclass of', 'variance')
('momentum learning rule', 'subclass of', 'momentum')
('gradient descent', 'subclass of', 'momentum')
('canyon', 'subclass of', 'quadratic loss function')
('steep sides', 'subclass of', 'canyon')
('quadratic objective', 'subclass of', 'quadratic loss function')"
8.6,2,"('step size', 'sequence of gradients', 'momentum algorithm', 'terminal velocity', 'momentum hyperparameter', 'learning rate', 'initial parameter', 'velocity', 'stopping criterion', 'minibatch', 'gradient estimate', 'velocity update', 'update', 'continuous-time Newtonian dynamics', 'particle', 'net force', 'accelerate', 'position', 'variable', 'velocity', 'first-order differential equation')","('step size', 'subclass of', 'momentum algorithm')
('sequence of gradients', 'subclass of', 'momentum algorithm')
('momentum algorithm', 'subclass of', 'terminal velocity')
('momentum algorithm', 'subclass of', 'momentum hyperparameter')
('learning rate', 'subclass of', 'momentum algorithm')
('initial parameter', 'subclass of', 'momentum algorithm')
('velocity', 'subclass of', 'momentum algorithm')
('stopping criterion', 'subclass of', 'momentum algorithm')
('minibatch', 'subclass of', 'gradient estimate')
('gradient estimate', 'subclass of', 'velocity update')
('velocity update', 'subclass of', 'momentum algorithm')
('continuous-time Newtonian dynamics', 'subclass of', 'particle')
('particle', 'subclass of', 'accelerate')
('net force', 'subclass of', 'position')
('position', 'subclass of', 'variable')
('velocity', 'subclass of', 'position')
('first-order differential equation', 'subclass of', 'variable')"
8.6,3,"('differential equations', ""Euler's method"", 'forces', 'negative gradient', 'cost function', 'Newtonian scenario', 'velocity', 'hockey puck', 'icy surface', 'downhill', 'uphill', 'oscillating', 'frictionless', 'viscous drag', 'resistant medium', 'energy', 'local minimum', 'mathematical convenience', 'integer powers', 'physical systems', 'drag', 'turbulent drag', 'square of the velocity', 'dry friction', 'constant magnitude', 'lower power', 'force', 'gradient of the cost function', 'local minimum', 'viscous drag')","('differential equations', 'subclass of', 'Euler\'s method')
('forces', 'subclass of', 'negative gradient')
('cost function', 'subclass of', 'negative gradient')
('Newtonian scenario', 'subclass of', 'forces')
('velocity', 'subclass of', 'forces')
('hockey puck', 'subclass of', 'velocity')
('icy surface', 'subclass of', 'forces')
('downhill', 'subclass of', 'icy surface')
('uphill', 'subclass of', 'icy surface')
('oscillating', 'subclass of', 'forces')
('frictionless', 'subclass of', 'forces')
('viscous drag', 'subclass of', 'oscillating')
('resistant medium', 'subclass of', 'forces')
('energy', 'subclass of', 'forces')
('local minimum', 'subclass of', 'gradient of the cost function')
('mathematical convenience', 'subclass of', 'local minimum')
('integer powers', 'subclass of', 'local minimum')
('physical systems', 'instance of', 'forces')
('drag', 'subclass of', 'viscous drag')
('turbulent drag', 'subclass of', 'drag')
('square of the velocity', 'subclass of', 'viscous drag')
('dry friction', 'subclass of', 'viscous drag')
('constant magnitude', 'subclass of', 'forces')
('lower power', 'subclass of', 'turbulent drag')
('force', 'subclass of', 'forces')
('gradient of the cost function', 'subclass of', 'cost function')
('local minimum', 'subclass of', 'force')
('viscous drag', 'subclass of', 'resistant medium')"
8.6,4,"('Nesterov’s accelerated gradient method', 'update rules', 'momentum algorithm', 'parameters', 'excess error', 'rate of convergence', 'stochastic gradient', 'correction factor', 'Nesterov momentum algorithm', 'convex batch gradient case', 'rate of convergence', 'stopping criterion', 'minibatch', 'interim update', 'interim point', 'velocity update')","('Nesterov’s accelerated gradient method', 'subclass of', 'update rules')
('momentum algorithm', 'subclass of', 'update rules')
('parameters', 'subclass of', 'momentum algorithm')
('excess error', 'subclass of', 'momentum algorithm')
('rate of convergence', 'subclass of', 'update rules')
('stochastic gradient', 'subclass of', 'momentum algorithm')
('correction factor', 'subclass of', 'momentum algorithm')
('Nesterov momentum algorithm', 'subclass of', 'update rules')
('convex batch gradient case', 'subclass of', 'rate of convergence')
('stopping criterion', 'subclass of', 'update rules')
('minibatch', 'subclass of', 'update rules')
('interim update', 'subclass of', 'minibatch')
('interim point', 'subclass of', 'update rules')
('velocity update', 'subclass of', 'Nesterov’s accelerated gradient method')"
8.6,5,"('deep learning', 'machine learning', 'optimization', 'training', 'deep models', 'initialization strategies', 'neural network optimization')","('deep learning', 'subclass of', 'machine learning')
('machine learning', 'use', 'optimization')
('training', 'based on', 'deep learning')
('training', 'subject of', 'neural network optimization')
('deep models', 'facet of', 'deep learning')
('initialization strategies', 'use', 'neural network optimization')
('neural network optimization', 'use', 'optimization')"
8.6,6,"('optimization', 'random initialization', 'parameters', 'basis functions', 'Gram-Schmidt orthogonalization', 'high-entropy distribution', 'weights', 'biases', 'Gaussian distribution', 'uniform distribution', 'symmetry breaking', 'signal loss', 'exploding values', 'gradient clipping', 'activation function', 'regularization', 'stochastic gradient descent')","('optimization', 'subclass of', 'random initialization')
('parameters', 'facet of', 'optimization')
('basis functions', 'facet of', 'optimization')
('Gram-Schmidt orthogonalization', 'facet of', 'optimization')
('high-entropy distribution', 'facet of', 'optimization')
('weights', 'part of', 'parameters')
('biases', 'part of', 'parameters')
('Gaussian distribution', 'facet of', 'random initialization')
('uniform distribution', 'facet of', 'random initialization')
('symmetry breaking', 'facet of', 'random initialization')
('signal loss', 'facet of', 'optimization')
('exploding values', 'facet of', 'optimization')
('gradient clipping', 'facet of', 'optimization')
('activation function', 'facet of', 'optimization')
('regularization', 'facet of', 'optimization')
('stochastic gradient descent', 'facet of', 'optimization')"
8.7,0,"('optimization for training deep models', 'early stopping criterion', 'weight decay', 'initialization', 'parameters', 'gradient descent', 'Gaussian prior', 'units', 'likelihood term', 'objective function', 'heuristics', 'fully connected layer', 'weights', 'normalized initialization', 'activation variance', 'gradient variance', 'random orthogonal matrices', 'scaling factor', 'nonlinear activation functions', 'convergence', 'deep network')","('optimization for training deep models', 'early stopping criterion', 'deep network')
('optimization for training deep models', 'weight decay', 'parameters')
('optimization for training deep models', 'initialization', 'parameters')
('optimization for training deep models', 'gradient descent', 'parameters')
('optimization for training deep models', 'Gaussian prior', 'parameters')
('optimization for training deep models', 'units', 'parameters')
('optimization for training deep models', 'likelihood term', 'objective function')
('optimization for training deep models', 'heuristics', 'objective function')
('optimization for training deep models', 'fully connected layer', 'parameters')
('optimization for training deep models', 'weights', 'parameters')
('optimization for training deep models', 'normalized initialization', 'parameters')
('optimization for training deep models', 'activation variance', 'parameters')
('optimization for training deep models', 'gradient variance', 'parameters')
('optimization for training deep models', 'random orthogonal matrices', 'parameters')
('optimization for training deep models', 'scaling factor', 'parameters')
('optimization for training deep models', 'nonlinear activation functions', 'parameters')
('optimization for training deep models', 'convergence', 'parameters')"
8.7,1,"('optimization for training deep models', 'feedforward networks', 'vanishing and exploding gradients problem', 'initial weights', 'generalization error', 'hyperparameter', 'scaling rules', 'sparse initialization', 'diversity', 'prior', 'gradient descent', 'maxout units', 'computational resources', 'hyperparameter search algorithm', 'dense initialization', 'random search')","('optimization for training deep models', 'feedforward networks', 'vanishing and exploding gradients problem')
('optimization for training deep models', 'initial weights', 'feedforward networks')
('optimization for training deep models', 'generalization error', 'feedforward networks')
('optimization for training deep models', 'hyperparameter', 'feedforward networks')
('optimization for training deep models', 'scaling rules', 'feedforward networks')
('optimization for training deep models', 'sparse initialization', 'feedforward networks')
('optimization for training deep models', 'diversity', 'feedforward networks')
('optimization for training deep models', 'prior', 'feedforward networks')
('optimization for training deep models', 'gradient descent', 'feedforward networks')
('optimization for training deep models', 'maxout units', 'feedforward networks')
('optimization for training deep models', 'computational resources', 'feedforward networks')
('optimization for training deep models', 'hyperparameter search algorithm', 'feedforward networks')
('optimization for training deep models', 'dense initialization', 'feedforward networks')
('optimization for training deep models', 'random search', 'feedforward networks')"
8.7,2,"('initialization of weights', 'biases', 'output unit', 'marginal statistics', 'activation function', 'training set', 'distribution over classes', 'highly skewed distribution', 'softmax', 'classifiers', 'autoencoders', 'Boltzmann machines', 'input data', 'saturation', 'ReLU hidden unit', 'random walk initialization', 'participation function')","('initialization of weights', 'biases', 'output unit')
('initialization of weights', 'marginal statistics', 'output unit')
('initialization of weights', 'activation function', 'output unit')
('initialization of weights', 'training set', 'output unit')
('initialization of weights', 'distribution over classes', 'output unit')
('initialization of weights', 'highly skewed distribution', 'output unit')
('initialization of weights', 'softmax', 'output unit')
('initialization of weights', 'classifiers', 'output unit')
('initialization of weights', 'autoencoders', 'output unit')
('initialization of weights', 'Boltzmann machines', 'output unit')
('initialization of weights', 'input data', 'output unit')
('initialization of weights', 'saturation', 'output unit')
('initialization of weights', 'ReLU hidden unit', 'output unit')
('initialization of weights', 'random walk initialization', 'output unit')
('initialization of weights', 'participation function', 'output unit')"
8.7,3,"('variance parameter', 'precision parameter', 'linear regression', 'conditional variance estimate', 'supervised model', 'unsupervised model', 'related task', 'random initialization', 'convergence', 'generalization', 'adaptive learning rates', 'neural network researchers', 'parameter space', 'momentum algorithm')","('variance parameter', 'linear regression', 'conditional variance estimate')
('variance parameter', 'supervised model', 'conditional variance estimate')
('variance parameter', 'unsupervised model', 'conditional variance estimate')
('variance parameter', 'related task', 'conditional variance estimate')
('variance parameter', 'random initialization', 'conditional variance estimate')
('variance parameter', 'convergence', 'conditional variance estimate')
('variance parameter', 'generalization', 'conditional variance estimate')
('variance parameter', 'adaptive learning rates', 'conditional variance estimate')
('variance parameter', 'neural network researchers', 'conditional variance estimate')
('variance parameter', 'parameter space', 'conditional variance estimate')
('variance parameter', 'momentum algorithm', 'conditional variance estimate')
('precision parameter', 'linear regression', 'conditional variance estimate')
('precision parameter', 'supervised model', 'conditional variance estimate')
('precision parameter', 'unsupervised model', 'conditional variance estimate')
('precision parameter', 'related task', 'conditional variance estimate')
('precision parameter', 'random initialization', 'conditional variance estimate')
('precision parameter', 'convergence', 'conditional variance estimate')
('precision parameter', 'generalization', 'conditional variance estimate')
('precision parameter', 'adaptive learning rates', 'conditional variance estimate')
('precision parameter', 'neural network researchers', 'conditional variance estimate')
('precision parameter', 'parameter space', 'conditional variance estimate')
('precision parameter', 'momentum algorithm', 'conditional variance estimate')"
8.7,4,"('delta-bar-delta algorithm', 'individual learning rates', 'model parameters', 'partial derivative', 'full batch optimization', 'incremental methods', 'AdaGrad algorithm', 'convex optimization', 'theoretical properties', 'deep neural network models', 'effective learning rate', 'RMSProp algorithm', 'exponentially weighted moving average', 'non-convex setting', 'neural network training', 'learning trajectory', 'locally convex bowl')","('delta-bar-delta algorithm', 'individual learning rates', 'model parameters')
('delta-bar-delta algorithm', 'partial derivative', 'model parameters')
('delta-bar-delta algorithm', 'full batch optimization', 'model parameters')
('delta-bar-delta algorithm', 'incremental methods', 'model parameters')
('delta-bar-delta algorithm', 'AdaGrad algorithm', 'model parameters')
('delta-bar-delta algorithm', 'convex optimization', 'model parameters')
('delta-bar-delta algorithm', 'theoretical properties', 'model parameters')
('delta-bar-delta algorithm', 'deep neural network models', 'model parameters')
('delta-bar-delta algorithm', 'effective learning rate', 'model parameters')
('delta-bar-delta algorithm', 'RMSProp algorithm', 'model parameters')
('delta-bar-delta algorithm', 'exponentially weighted moving average', 'model parameters')
('delta-bar-delta algorithm', 'non-convex setting', 'model parameters')
('delta-bar-delta algorithm', 'neural network training', 'model parameters')
('delta-bar-delta algorithm', 'learning trajectory', 'model parameters')
('delta-bar-delta algorithm', 'locally convex bowl', 'model parameters')"
8.7,5,"('AdaGrad', 'RMSProp', 'AdaGrad', 'RMSProp', 'Nesterov momentum', 'AdaGrad', 'RMSProp', 'Adam', 'RMSProp', 'Adam')","('AdaGrad', 'subclass of', 'RMSProp')
('Nesterov momentum', 'subclass of', 'AdaGrad')
('Adam', 'subclass of', 'RMSProp')"
8.7,6,"('RMSProp', 'Adam', 'AdaGrad', 'RMSProp', 'Adam', 'RMSProp', 'Adam', 'RMSProp', 'SGD', 'SGD with momentum', 'RMSProp', 'RMSProp with momentum', 'AdaDelta', 'Adam')","('RMSProp', 'subclass of', 'Adam')
('AdaGrad', 'subclass of', 'RMSProp')
('Adam', 'subclass of', 'RMSProp')
('RMSProp', 'subclass of', 'Adam')
('RMSProp', 'subclass of', 'Adam')
('SGD with momentum', 'subclass of', 'SGD')
('RMSProp', 'subclass of', 'RMSProp with momentum')
('AdaDelta', 'subclass of', 'RMSProp')
('Adam', 'subclass of', 'RMSProp')"
8.7,7,"('RMSProp', 'Nesterov momentum', 'Newton’s Method')","('RMSProp', 'instance of', 'Nesterov momentum')
('Nesterov momentum', 'use', 'Newton’s Method')"
8.7,8,"('Adam', 'Newton’s Method')","('Adam', 'use', 'Newton’s Method')"
8.7,9,"('Newton’s Method', 'Levenberg–Marquardt algorithm')","('Newton’s Method', 'use', 'Levenberg–Marquardt algorithm')"
8.7,10,"('Optimization', 'Training', 'Deep Models', 'Newton\'s method', 'Hessian', 'k parameters', 'inversion', 'matrix', 'computational complexity', 'Conjugate Gradients', 'line search', 'zig-zag pattern', 'search direction')","('Optimization', 'based on', 'Newton\'s method')
('Optimization', 'based on', 'Conjugate Gradients')
('Training', 'based on', 'Optimization')
('Deep Models', 'based on', 'Training')
('Newton\'s method', 'facet of', 'Optimization')
('Hessian', 'part of', 'Optimization')
('k parameters', 'part of', 'Optimization')
('inversion', 'part of', 'Optimization')
('matrix', 'part of', 'Optimization')
('computational complexity', 'part of', 'Optimization')
('Conjugate Gradients', 'part of', 'Optimization')
('line search', 'part of', 'Optimization')
('zig-zag pattern', 'part of', 'Optimization')
('search direction', 'part of', 'Optimization')"
8.7,11,"('Optimization', 'Training', 'Deep Models', 'Newton\'s method', 'Hessian', 'k parameters', 'inversion', 'matrix', 'computational complexity', 'Conjugate Gradients', 'line search', 'zig-zag pattern', 'search direction', 'Fletcher-Reeves')","('Optimization', 'based on', 'Newton\'s method')
('Optimization', 'based on', 'Conjugate Gradients')
('Training', 'based on', 'Optimization')
('Deep Models', 'based on', 'Training')
('Newton\'s method', 'facet of', 'Optimization')
('Hessian', 'part of', 'Optimization')
('k parameters', 'part of', 'Optimization')
('inversion', 'part of', 'Optimization')
('matrix', 'part of', 'Optimization')
('computational complexity', 'part of', 'Optimization')
('Conjugate Gradients', 'part of', 'Optimization')
('line search', 'part of', 'Optimization')
('zig-zag pattern', 'part of', 'Optimization')
('search direction', 'part of', 'Optimization')
('Fletcher-Reeves', 'part of', 'Optimization')"
8.7,12,"('Optimization', 'Training', 'Deep Models', 'Conjugate Gradients', 'Fletcher-Reeves', 'Polak-Ribière', 'parameters', 'Training set', 'examples', 'gradient', 'search direction', 'line search', 'update', 'Nonlinear Conjugate Gradients')","('Optimization', 'based on', 'Conjugate Gradients')
('Optimization', 'based on', 'Fletcher-Reeves')
('Optimization', 'based on', 'Polak-Ribière')
('Training', 'based on', 'Optimization')
('Deep Models', 'based on', 'Training')
('Conjugate Gradients', 'facet of', 'Optimization')
('Fletcher-Reeves', 'facet of', 'Optimization')
('Polak-Ribière', 'facet of', 'Optimization')
('parameters', 'part of', 'Optimization')
('Training set', 'part of', 'Training')
('examples', 'part of', 'Training set')
('gradient', 'part of', 'Optimization')
('search direction', 'part of', 'Optimization')
('line search', 'part of', 'Optimization')
('update', 'part of', 'Optimization')
('Nonlinear Conjugate Gradients', 'part of', 'Optimization')"
8.7,13,"('Optimization', 'Training', 'Deep Models', 'BFGS', 'Newton\'s method', 'computational burden', 'approximation', 'Hessian', 'parameters', 'quasi-Newton methods', 'inverse Hessian', 'matrix M', 'direction of descent', 'line search', 'step', 'update', 'parameters')","('Optimization', 'based on', 'BFGS')
('Optimization', 'based on', 'Newton\'s method')
('Training', 'based on', 'Optimization')
('Deep Models', 'based on', 'Training')
('BFGS', 'facet of', 'Optimization')
('Newton\'s method', 'facet of', 'Optimization')
('computational burden', 'part of', 'Optimization')
('approximation', 'part of', 'Optimization')
('Hessian', 'part of', 'Optimization')
('parameters', 'part of', 'Optimization')
('quasi-Newton methods', 'part of', 'Optimization')
('inverse Hessian', 'part of', 'Optimization')
('matrix M', 'part of', 'Optimization')
('direction of descent', 'part of', 'Optimization')
('line search', 'part of', 'Optimization')
('step', 'part of', 'Optimization')
('update', 'part of', 'Optimization')
('parameters', 'part of', 'Optimization')"
9.1,0,"('conjugate gradients', 'BFGS', 'L-BFGS', 'Hessian', 'conjugate gradients', 'Batch Normalization', 'Ioffe and Szegedy')","('conjugate gradients', 'instance of', 'BFGS'),
('L-BFGS', 'instance of', 'BFGS'),
('Hessian', 'instance of', 'BFGS'),
('Batch Normalization', 'instance of', 'Ioffe and Szegedy')"
9.1,1,"('back-propagation algorithm', 'Taylor series approximation', 'learning rate', 'parameters', 'second-order optimization algorithms', 'batch normalization', 'network', 'mean', 'standard deviation', 'vector')","('back-propagation algorithm', 'instance of', 'Taylor series approximation'),
('learning rate', 'relation', 'parameters'),
('second-order optimization algorithms', 'instance of', 'Taylor series approximation'),
('batch normalization', 'instance of', 'mean'),
('batch normalization', 'instance of', 'standard deviation'),
('network', 'relation', 'parameters'),
('mean', 'relation', 'batch normalization'),
('standard deviation', 'relation', 'batch normalization'),
('vector', 'instance of', 'parameters')"
9.1,2,"('mean', 'standard deviation', 'back-propagate', 'gradient descent', 'batch normalization', 'test time', 'running averages', 'minibatch', 'model')","('mean', 'instance of', 'standard deviation'),
('back-propagate', 'relation', 'gradient descent'),
('batch normalization', 'relation', 'gradient descent'),
('test time', 'relation', 'running averages'),
('minibatch', 'relation', 'gradient descent'),
('minibatch', 'relation', 'model')"
9.1,3,"('linear example', 'lower layers', 'nonlinear activation functions', 'expressive power', 'learned parameters', 'learning dynamics', 'gradient descent', 'neural network layers', 'rectified linear transformation')","('linear example', 'instance of', 'lower layers'),
('nonlinear activation functions', 'relation', 'expressive power'),
('learned parameters', 'relation', 'gradient descent'),
('learning dynamics', 'relation', 'gradient descent'),
('gradient descent', 'relation', 'neural network layers'),
('rectified linear transformation', 'instance of', 'nonlinear activation functions'),
('rectified linear transformation', 'relation', 'neural network layers')"
9.2,0,"('deep models', 'XW', 'normalized version', 'bias term', 'β parameter', 'batch normalization', 'nonlinear activation function', 'rectified linear function', 'statistics of the input', 'standardization', 'linear operations', 'convolutional networks', 'spatial location', 'coordinate descent', 'optimization problem', 'local minimum', 'block coordinate descent', 'cost function', 'sparse coding', 'weight matrix', 'activation values', 'training set', 'weight decay', 'constraint', 'norms', 'columns', 'convex problem', 'objective function', 'variables')","('deep models', 'instance of', 'XW'),
('XW', 'is a', 'normalized version'),
('normalized version', 'is a', 'bias term'),
('bias term', 'is a', 'β parameter'),
('deep models', 'use', 'batch normalization'),
('deep models', 'use', 'nonlinear activation function'),
('nonlinear activation function', 'based on', 'rectified linear function'),
('deep models', 'use', 'statistics of the input'),
('statistics of the input', 'based on', 'standardization'),
('deep models', 'use', 'linear operations'),
('deep models', 'use', 'convolutional networks'),
('convolutional networks', 'use', 'spatial location'),
('linear operations', 'based on', 'coordinate descent'),
('coordinate descent', 'is a', 'optimization problem'),
('optimization problem', 'can have a', 'local minimum'),
('optimization problem', 'solved by', 'block coordinate descent'),
('block coordinate descent', 'is a', 'optimization problem'),
('optimization problem', 'has', 'cost function'),
('cost function', 'used in', 'sparse coding'),
('sparse coding', 'uses', 'weight matrix'),
('sparse coding', 'uses', 'activation values'),
('deep models', 'apply to', 'training set'),
('deep models', 'use', 'weight decay'),
('weight decay', 'can be a', 'constraint'),
('constraint', 'applied to', 'norms'),
('norms', 'define', 'columns'),
('optimization problem', 'is a', 'convex problem'),
('optimization problem', 'has', 'objective function'),
('objective function', 'has', 'variables')"
9.2,1,"('optimization strategy', 'convex optimization', 'alternating', 'optimizing W', 'optimizing H', 'coordinate descent', 'function f(x)', 'Newton’s method', 'Polyak averaging', 'trajectory', 'optimization algorithm', 'convex problems', 'neural networks', 'valley', 'non-convex problems', 'exponentially decaying running average', 'running average approach', 'applications', 'Szegedy et al. (2015)')","('optimization strategy', 'is a', 'convex optimization'),
('convex optimization', 'uses', 'alternating'),
('alternating', 'applies to', 'optimizing W'),
('alternating', 'applies to', 'optimizing H'),
('optimizing W', 'can be done with', 'coordinate descent'),
('optimizing H', 'can be done with', 'coordinate descent'),
('coordinate descent', 'is a', 'function f(x)'),
('function f(x)', 'can be optimized using', 'Newton’s method'),
('Newton’s method', 'can be improved by', 'Polyak averaging'),
('Polyak averaging', 'calculates', 'trajectory'),
('trajectory', 'is used in', 'optimization algorithm'),
('convex optimization', 'can be applied to', 'convex problems'),
('convex problems', 'commonly arise in', 'neural networks'),
('neural networks', 'can have a', 'valley'),
('optimization algorithm', 'can be used for', 'non-convex problems'),
('exponentially decaying running average', 'is a', 'running average approach'),
('running average approach', 'has', 'applications'),
('Szegedy et al. (2015)', 'cited in the context of', 'applications')"
9.2,2,"('Supervised Pretraining', 'training a model', 'complex and hard to optimize', 'difficult task', 'simpler model', 'simpler task', 'pretraining', 'Greedy algorithms', 'optimal solution', 'joint solution', 'fine-tuning stage', 'initializing the joint optimization algorithm', 'greedy pretraining', 'supervised learning problems', 'Bengio et al. (2007)', 'Simonyan and Zisserman (2015)', 'deep convolutional network', 'Yu et al. (2010)', 'raw input')","('Supervised Pretraining', 'is a', 'training a model'),
('training a model', 'can be', 'complex and hard to optimize'),
('complex and hard to optimize', 'is a', 'difficult task'),
('Supervised Pretraining', 'uses', 'simpler model'),
('simpler model', 'is trained on a', 'simpler task'),
('simpler task', 'is used for', 'pretraining'),
('pretraining', 'can be done with', 'Greedy algorithms'),
('Greedy algorithms', 'may not find the', 'optimal solution'),
('Greedy algorithms', 'may find a', 'joint solution'),
('joint solution', 'is used in the', 'fine-tuning stage'),
('fine-tuning stage', 'involves', 'initializing the joint optimization algorithm'),
('initializing the joint optimization algorithm', 'can be done with', 'greedy pretraining'),
('greedy pretraining', 'is used for', 'supervised learning problems'),
('Bengio et al. (2007)', 'discussed', 'Supervised Pretraining'),
('Simonyan and Zisserman (2015)', 'cited for', 'deep convolutional network'),
('Yu et al. (2010)', 'cited for', 'raw input')"
9.2,3,"('greedy supervised pretraining', 'Bengio et al. (2007)', 'training a sufficiently shallow architecture', 'supervised single hidden layer MLP', 'hidden-to-output layer', 'feedforward network', 'jointly fine-tune', 'layers')","('greedy supervised pretraining', 'can be found in', 'Bengio et al. (2007)'),
('greedy supervised pretraining', 'involves', 'training a sufficiently shallow architecture'),
('training a sufficiently shallow architecture', 'can be a', 'supervised single hidden layer MLP'),
('hidden-to-output layer', 'is a part of', 'feedforward network'),
('greedy supervised pretraining', 'can be used to', 'jointly fine-tune'),
('jointly fine-tune', 'multiple', 'layers')"
9.3,0,"('optimization', 'training', 'deep models', 'pretraining', 'supervised pretraining', 'transfer learning', 'neural networks', 'FitNets', 'Romero et al.', 'teacher network', 'student network', 'SGD', 'middle layer', 'hidden layers', 'classification target', 'wide and shallow network', 'computational cost', 'parameters', 'experiments', 'test set', 'optimization techniques', 'architecture')","('deep models', 'instance of', 'neural networks')
('Romero et al.', 'instance of', 'neural networks')
('FitNets', 'instance of', 'neural networks')
('teacher network', 'instance of', 'neural networks')
('student network', 'instance of', 'neural networks')
('SGD', 'instance of', 'optimization techniques')"
9.3,1,"('optimization', 'training', 'deep models', 'activation functions', 'model family', 'optimization algorithm', 'neural network learning', 'stochastic gradient descent', 'momentum', 'linear transformations', 'rectified linear units', 'maxout units', 'LSTM', 'sigmoidal units', 'gradient flows', 'Jacobian', 'loss function', 'skip connections', 'vanishing gradient problem', 'GoogLeNet', 'deeply-supervised nets', 'pretraining strategies', 'architecture', 'layers')","('deep models', 'instance of', 'neural networks')
('activation functions', 'use', 'neural network learning')
('model family', 'instance of', 'deep models')
('optimization algorithm', 'use', 'neural network learning')
('neural network learning', 'instance of', 'deep models')
('stochastic gradient descent', 'use', 'optimization algorithm')
('momentum', 'use', 'optimization algorithm')
('linear transformations', 'use', 'activation functions')
('rectified linear units', 'subclass of', 'activation functions')
('maxout units', 'subclass of', 'activation functions')
('LSTM', 'instance of', 'neural networks')
('sigmoidal units', 'subclass of', 'activation functions')
('Jacobian', 'relation', 'gradient flows')
('loss function', 'instance of', 'optimization algorithm')
('skip connections', 'use', 'architecture')
('vanishing gradient problem', 'relation', 'neural network learning')
('GoogLeNet', 'instance of', 'deep models')
('deeply-supervised nets', 'subclass of', 'deep models')"
9.3,2,"('optimization', 'training', 'deep models', 'global structure', 'cost function', 'local update directions', 'parameters', 'continuation methods', 'curriculum learning', 'initialization', 'parameter space', 'objective functions', 'random initialization', 'local descent', 'neural network training', 'smoothing', 'simulated annealing', 'local minima', 'global minimum', 'blurring', 'approximating', 'sampling', 'non-convex functions')","('deep models', 'instance of', 'neural networks')
('global structure', 'relation', 'deep models')
('cost function', 'instance of', 'objective functions')
('local update directions', 'relation', 'deep models')
('parameters', 'instance of', 'deep models')
('continuation methods', 'relation', 'optimization')
('curriculum learning', 'relation', 'neural network training')
('initialization', 'relation', 'optimization')
('parameter space', 'relation', 'optimization')
('objective functions', 'instance of', 'optimization')
('random initialization', 'relation', 'initialization')
('local descent', 'relation', 'optimization')
('neural network training', 'relation', 'deep models')
('smoothing', 'relation', 'optimization')
('simulated annealing', 'use', 'optimization')
('local minima', 'relation', 'optimization')
('global minimum', 'relation', 'optimization')
('blurring', 'use', 'smoothing')
('approximating', 'use', 'optimization')
('sampling', 'use', 'optimization')
('non-convex functions', 'relation', 'optimization')"
9.3,3,"('optimization', 'training', 'deep models', 'convex', 'cost functions', 'global minimum', 'NP-hard optimization problems', 'blurring', 'local minimum', 'continuation methods', 'curriculum learning', 'learning process', 'simple concepts', 'complex concepts', 'animal training', 'machine learning', 'neural language modeling task', 'natural language', 'computer vision', 'consistent', 'humans teach')","('deep models', 'instance of', 'neural networks')
('convex', 'relation', 'optimization')
('cost functions', 'instance of', 'objective functions')
('global minimum', 'relation', 'optimization')
('NP-hard optimization problems', 'subclass of', 'optimization')
('blurring', 'use', 'optimization')
('local minimum', 'relation', 'optimization')
('continuation methods', 'relation', 'optimization')
('curriculum learning', 'relation', 'machine learning')
('learning process', 'relation', 'machine learning')
('simple concepts', 'instance of', 'natural language')
('complex concepts', 'instance of', 'natural language')
('animal training', 'relation', 'machine learning')
('machine learning', 'instance of', 'deep models')
('neural language modeling task', 'relation', 'machine learning')
('natural language', 'relation', 'machine learning')
('computer vision', 'relation', 'machine learning')
('consistent', 'relation', 'humans teach')"
9.3,4,"('optimization', 'training', 'deep models', 'curriculum learning', 'prototypical examples', 'decision surface', 'teaching strategies', 'recurrent neural networks', 'long-term dependencies', 'stochastic curriculum', 'deterministic curriculum', 'regularize', 'specializations', 'neural networks', 'scale', 'input data', 'special structure', 'specialized architectures')","('deep models', 'instance of', 'neural networks')
('curriculum learning', 'relation', 'training')
('prototypical examples', 'use', 'curriculum learning')
('decision surface', 'relation', 'curriculum learning')
('teaching strategies', 'relation', 'curriculum learning')
('recurrent neural networks', 'instance of', 'neural networks')
('long-term dependencies', 'relation', 'recurrent neural networks')
('stochastic curriculum', 'instance of', 'curriculum learning')
('deterministic curriculum', 'instance of', 'curriculum learning')
('regularize', 'use', 'training')
('specializations', 'relation', 'training')
('neural networks', 'instance of', 'deep models')
('scale', 'relation', 'input data')
('input data', 'relation', 'neural networks')
('special structure', 'relation', 'neural networks')
('specialized architectures', 'relation', 'neural networks')"
9.3,5,"('Convolutional networks', 'convolutional neural networks', 'CNNs', 'neural network', 'convolution', 'mathematical operation', 'linear operation', 'matrix multiplication', 'pooling', 'neuroscientific principles', 'deep learning')","('Convolutional networks', 'subclass of', 'neural network')
('Convolutional networks', 'use', 'convolutional neural networks')
('Convolutional networks', 'use', 'CNNs')
('convolutional neural networks', 'use', 'neural network')
('convolutional neural networks', 'subclass of', 'deep learning')
('CNNs', 'use', 'neural network')
('CNNs', 'subclass of', 'deep learning')
('neural network', 'use', 'mathematical operation')
('neural network', 'subclass of', 'deep learning')
('convolution', 'use', 'mathematical operation')
('mathematical operation', 'use', 'linear operation')
('linear operation', 'use', 'matrix multiplication')
('pooling', 'use', 'mathematical operation')"
9.4,0,"argument (in this example, the function w) is often referred to as the kernel or filter. The output of the convolution is a new function that represents the combined information from the input and the kernel.

9.2 Pooling Pooling is an operation that reduces the spatial dimensions of the input. It is commonly used in convolutional networks to decrease the size of the feature maps and to introduce some degree of translation invariance into the model. The pooling operation divides the input into equally sized regions (called pooling regions) and replaces each region with a single value, typically the maximum or the average value within that region. This reduces the size of the feature maps while preserving the most salient information.

9.3 Activation Functions Activation functions introduce non-linearity to the network and are applied element-wise to the output of a layer. They determine the output of a neuron given its input. Common activation functions include sigmoid, tanh, and ReLU (Rectified Linear Unit). These functions introduce non-linearities to the network, allowing it to model complex relationships between inputs and outputs.

9.4 Loss Functions Loss functions are used to quantify the difference between the predicted outputs and the true outputs. They measure the error or the cost of the model's predictions. Common loss functions include mean squared error (MSE), categorical cross-entropy, and binary cross-entropy. The choice of loss function depends on the task at hand, such as regression or classification.

9.5 Optimization Algorithms Optimization algorithms are used to update the parameters of the model during training. They determine how the model learns from the data and adjusts its weights and biases to minimize the loss function. Common optimization algorithms include stochastic gradient descent (SGD), Adam, and RMSprop. These algorithms apply different strategies to find the optimal values for the model's parameters.

9.6 Regularization Techniques Regularization techniques help prevent overfitting, which occurs when the model performs well on the training data but poorly on new, unseen data. They introduce additional constraints to the model to prevent it from becoming too complex and to encourage it to generalize well. Common regularization techniques include L1 and L2 regularization, dropout, and early stopping.

9.7 Model Evaluation Model evaluation is the process of assessing the performance of a trained model on unseen data. It involves measuring various metrics such as accuracy, precision, recall, and F1 score. Model evaluation helps determine how well the model generalizes to new examples and whether it is suitable for the intended task.

('Convolutional Networks', 'Convolution Operation', 'Pooling', 'Activation Functions', 'Loss Functions', 'Optimization Algorithms', 'Regularization Techniques', 'Model Evaluation')","('Convolutional Networks', 'instance of', 'Pooling')
('Convolutional Networks', 'instance of', 'Activation Functions')
('Convolutional Networks', 'instance of', 'Loss Functions')
('Convolutional Networks', 'instance of', 'Optimization Algorithms')
('Convolutional Networks', 'instance of', 'Regularization Techniques')
('Convolutional Networks', 'instance of', 'Model Evaluation')
('Pooling', 'instance of', 'Activation Functions')
('Pooling', 'instance of', 'Loss Functions')
('Pooling', 'instance of', 'Optimization Algorithms')
('Pooling', 'instance of', 'Regularization Techniques')
('Pooling', 'instance of', 'Model Evaluation')
('Activation Functions', 'instance of', 'Loss Functions')
('Activation Functions', 'instance of', 'Optimization Algorithms')
('Activation Functions', 'instance of', 'Regularization Techniques')
('Activation Functions', 'instance of', 'Model Evaluation')
('Loss Functions', 'instance of', 'Optimization Algorithms')
('Loss Functions', 'instance of', 'Regularization Techniques')
('Loss Functions', 'instance of', 'Model Evaluation')
('Optimization Algorithms', 'instance of', 'Regularization Techniques')
('Optimization Algorithms', 'instance of', 'Model Evaluation')
('Regularization Techniques', 'instance of', 'Model Evaluation')"
9.4,1,"('Convolutional Networks', 'Convolution Operation', 'Pooling', 'Activation Functions', 'Loss Functions', 'Optimization Algorithms', 'Regularization Techniques', 'Model Evaluation')","('Convolutional Networks', 'instance of', 'Convolution Operation')
('Convolution Operation', 'based on', 'Pooling')
('Convolution Operation', 'based on', 'Activation Functions')
('Convolution Operation', 'based on', 'Loss Functions')
('Convolution Operation', 'based on', 'Optimization Algorithms')
('Convolution Operation', 'based on', 'Regularization Techniques')
('Convolution Operation', 'based on', 'Model Evaluation')"
9.5,0,"('convolutional networks', 'neural network', 'cross-correlation', 'machine learning', 'learning algorithm', 'kernel flipping', 'convolution operation', '2-D tensor', 'discrete convolution', 'Toeplitz matrix', 'block circulant matrix', 'sparse matrix', 'convolutional neural networks')","返回结果如下：

('convolutional networks', 'instance of', 'neural network')
('neural network', 'use', 'cross-correlation')
('cross-correlation', 'instance of', 'machine learning')
('machine learning', 'use', 'learning algorithm')
('learning algorithm', 'use', 'kernel flipping')
('kernel flipping', 'instance of', 'convolution operation')
('convolution operation', 'use', '2-D tensor')
('2-D tensor', 'instance of', 'discrete convolution')
('discrete convolution', 'use', 'Toeplitz matrix')
('Toeplitz matrix', 'instance of', 'block circulant matrix')
('block circulant matrix', 'instance of', 'sparse matrix')
('sparse matrix', 'use', 'convolutional neural networks')"
9.5,1,"('2-D convolution', 'kernel-flipping', 'valid convolution')","返回结果如下：

('2-D convolution', 'instance of', 'kernel-flipping')
('kernel-flipping', 'instance of', 'valid convolution')"
9.5,2,"('sparse interactions', 'parameter sharing', 'equivariant representations', 'variable size', 'convolution', 'machine learning system', 'sparse connectivity', 'sparse weights', 'memory requirements', 'statistical efficiency', 'computation efficiency', 'matrix multiplication', 'runtime', 'sparsely connected approach', 'graphical demonstrations', 'deep convolutional network', 'complicated interactions', 'simple building blocks', 'parameter sharing', 'weight matrix', 'tied weights')","返回结果如下：

('sparse interactions', 'instance of', 'parameter sharing')
('parameter sharing', 'use', 'equivariant representations')
('equivariant representations', 'instance of', 'variable size')
('variable size', 'use', 'convolution')
('convolution', 'use', 'machine learning system')
('machine learning system', 'instance of', 'sparse connectivity')
('sparse connectivity', 'use', 'sparse weights')
('sparse weights', 'use', 'memory requirements')
('memory requirements', 'use', 'statistical efficiency')
('statistical efficiency', 'use', 'computation efficiency')
('computation efficiency', 'use', 'matrix multiplication')
('matrix multiplication', 'instance of', 'runtime')
('runtime', 'use', 'sparsely connected approach')
('sparsely connected approach', 'instance of', 'graphical demonstrations')
('graphical demonstrations', 'use', 'deep convolutional network')
('deep convolutional network', 'use', 'complicated interactions')
('complicated interactions', 'use', 'simple building blocks')
('simple building blocks', 'use', 'parameter sharing')
('parameter sharing', 'use', 'weight matrix')
('weight matrix', 'instance of', 'tied weights')"
9.5,3,"('sparse connectivity', 'convolution', 'kernel', 'matrix multiplication')","返回结果如下：

('sparse connectivity', 'use', 'convolution')
('convolution', 'use', 'kernel')
('kernel', 'instance of', 'matrix multiplication')"
9.5,4,"('sparse connectivity', 'convolution', 'kernel', 'matrix multiplication', 'receptive field', 'deeper layers', 'shallow layers', 'strided convolution', 'pooling', 'indirect connections', 'input image')","返回结果如下：

('sparse connectivity', 'use', 'convolution')
('convolution', 'use', 'kernel')
('kernel', 'instance of', 'matrix multiplication')
('receptive field', 'instance of', 'deeper layers')
('deeper layers', 'instance of', 'shallow layers')
('shallow layers', 'use', 'strided convolution')
('strided convolution', 'use', 'pooling')
('pooling', 'use', 'indirect connections')
('indirect connections', 'use', 'input image')"
9.5,5,"('Convolutional Networks', 'Parameter sharing', '3-element kernel', 'convolutional model', 'weight matrix', 'fully connected model', 'forward propagation', 'memory requirements', 'statistical efficiency', 'linear function', 'detecting edges', 'equivariance to translation', 'function f(x)', 'function g', 'input changes', 'output changes', 'function g(x)', 'convolution function')","('Convolutional Networks', 'Parameter sharing', '3-element kernel')
('convolutional model', 'instance of', 'Convolutional Networks')
('weight matrix', 'use', 'convolutional model')
('fully connected model', 'subclass of', 'convolutional model')
('forward propagation', 'part of', 'fully connected model')
('memory requirements', 'based on', 'forward propagation')
('statistical efficiency', 'facet of', 'forward propagation')
('linear function', 'use', 'statistical efficiency')
('detecting edges', 'use', 'linear function')
('equivariance to translation', 'use', 'detecting edges')
('function f(x)', 'instance of', 'linear function')
('function g', 'use', 'function f(x)')
('input changes', 'based on', 'function g')
('output changes', 'based on', 'function g')
('function g(x)', 'subclass of', 'linear function')
('convolution function', 'use', '3-element kernel')"
9.5,6,"('image function', 'I = g(I)', 'transformation g', 'time series data', 'convolution', 'timeline', 'features', 'images', '2-D map', 'parameters', 'individual’s face', 'scale', 'rotation', 'neural networks', 'matrix multiplication', 'fixed-shape matrix', 'Pooling', 'convolutional network', 'linear activations', 'nonlinear activation function', 'pooling function', 'max pooling')","('image function', 'instance of', 'convolution')
('I = g(I)', 'use', 'image function')
('transformation g', 'instance of', 'image function')
('time series data', 'instance of', 'matrix multiplication')
('convolution', 'based on', 'time series data')
('timeline', 'instance of', 'time series data')
('features', 'based on', 'timeline')
('images', 'facet of', 'features')
('2-D map', 'part of', 'images')
('parameters', 'use', '2-D map')
('individual’s face', 'instance of', 'images')
('scale', 'use', 'individual’s face')
('rotation', 'use', 'individual’s face')
('neural networks', 'instance of', 'matrix multiplication')
('matrix multiplication', 'facet of', 'neural networks')
('fixed-shape matrix', 'instance of', 'matrix multiplication')
('Pooling', 'use', 'matrix multiplication')
('convolutional network', 'instance of', 'Pooling')
('linear activations', 'part of', 'convolutional network')
('nonlinear activation function', 'part of', 'convolutional network')
('pooling function', 'use', 'Pooling')
('max pooling', 'subclass of', 'pooling function')"
9.5,7,"('Efficiency of edge detection', 'original image', 'neighboring pixel', 'vertically oriented edges', 'object detection', 'input image', 'output image', 'convolution kernel', 'floating point operations', 'multiplications', 'addition per output pixel', 'matrix multiplication', 'entries in the matrix', 'representing this transformation', 'matrix multiplication algorithm', 'nonzero entries', 'number of floating point operations', 'linear transformation', 'local region', 'entire input', 'Photo credit: Paula Goodfellow')","('Efficiency of edge detection', 'instance of', 'object detection')
('original image', 'instance of', 'input image')
('neighboring pixel', 'use', 'original image')
('vertically oriented edges', 'instance of', 'neighboring pixel')
('object detection', 'use', 'original image')
('input image', 'facet of', 'object detection')
('output image', 'instance of', 'object detection')
('convolution kernel', 'use', 'object detection')
('floating point operations', 'based on', 'convolution kernel')
('multiplications', 'use', 'floating point operations')
('addition per output pixel', 'use', 'floating point operations')
('matrix multiplication', 'instance of', 'multiplications')
('entries in the matrix', 'use', 'matrix multiplication')
('representing this transformation', 'part of', 'entries in the matrix')
('matrix multiplication algorithm', 'based on', 'matrix multiplication')
('nonzero entries', 'use', 'entries in the matrix')
('number of floating point operations', 'based on', 'nonzero entries')
('linear transformation', 'instance of', 'matrix multiplication algorithm')
('local region', 'part of', 'linear transformation')
('entire input', 'based on', 'local region')"
9.5,8,"('Complex layer terminology', 'Simple layer terminology', 'Next layer', 'Convolutional Layer', 'Pooling stage', 'Pooling layer', 'Detector stage', 'Detector layer', 'Nonlinearity', 'rectified linear', 'Convolution stage', 'Convolution layer', 'Affine transform', 'Input to layer', 'The components of a typical convolutional neural network layer', 'kernel tensors', 'network layers', 'every step of processing', 'not every layer has parameters')","('Complex layer terminology', 'instance of', 'Convolutional Layer')
('Simple layer terminology', 'use', 'Complex layer terminology')
('Next layer', 'based on', 'Complex layer terminology')
('Convolutional Layer', 'use', 'Pooling layer')
('Pooling stage', 'part of', 'Pooling layer')
('Pooling layer', 'instance of', 'Detector layer')
('Detector stage', 'part of', 'Detector layer')
('Detector layer', 'instance of', 'Nonlinearity')
('Nonlinearity', 'use', 'rectified linear')
('rectified linear', 'use', 'Convolution layer')
('Convolution stage', 'part of', 'Convolution layer')
('Convolution layer', 'instance of', 'Affine transform')
('Affine transform', 'use', 'Input to layer')
('Input to layer', 'part of', 'The components of a typical convolutional neural network layer')
('The components of a typical convolutional neural network layer', 'facet of', 'Convolution layer')
('kernel tensors', 'facet of', 'The components of a typical convolutional neural network layer')
('network layers', 'use', 'The components of a typical convolutional neural network layer')
('every step of processing', 'based on', 'network layers')
('not every layer has parameters', 'based on', 'network layers')"
9.5,9,"('Chellappa', 'operation', 'maximum output', 'rectangular neighborhood', 'pooling functions', 'average of a rectangular neighborhood', 'L2 norm of a rectangular neighborhood', 'weighted average', 'invariance to small translations', 'invariant to local translation', 'whether some feature is present', 'location of the eyes', 'location of a feature', 'corner defined by two edges', 'statistical efficiency', 'pooling over spatial regions', 'fewer pooling units', 'detector units', 'summary statistics', 'pooling regions spaced k pixels apart', 'computational efficiency', 'number of parameters', 'fully connected layer', 'matrix multiplication', 'reduction in the input size', 'memory requirements', 'classifying images', 'input size', 'offset between pooling regions', 'classification layer', 'summary statistics', 'final pooling layer', 'quadrant of an image')","('Chellappa', 'instance of', 'operation')
('maximum output', 'use', 'operation')
('rectangular neighborhood', 'facet of', 'pooling functions')
('pooling functions', 'based on', 'operation')
('average of a rectangular neighborhood', 'use', 'pooling functions')
('L2 norm of a rectangular neighborhood', 'use', 'pooling functions')
('weighted average', 'use', 'pooling functions')
('invariance to small translations', 'part of', 'invariant to local translation')
('invariant to local translation', 'use', 'pooling functions')
('whether some feature is present', 'based on', 'pooling functions')
('location of the eyes', 'instance of', 'whether some feature is present')
('location of a feature', 'instance of', 'whether some feature is present')
('corner defined by two edges', 'instance of', 'whether some feature is present')
('statistical efficiency', 'instance of', 'summary statistics')
('pooling over spatial regions', 'use', 'summary statistics')
('fewer pooling units', 'based on', 'pooling over spatial regions')
('detector units', 'use', 'fewer pooling units')
('summary statistics', 'instance of', 'pooling over spatial regions')
('pooling regions spaced k pixels apart', 'use', 'pooling over spatial regions')
('computational efficiency', 'based on', 'pooling regions spaced k pixels apart')
('number of parameters', 'based on', 'computational efficiency')
('fully connected layer', 'based on', 'number of parameters')
('matrix multiplication', 'part of', 'fully connected layer')
('reduction in the input size', 'based on', 'matrix multiplication')
('memory requirements', 'based on', 'matrix multiplication')
('classifying images', 'instance of', 'reduction in the input size')
('input size', 'facet of', 'classifying images')
('offset between pooling regions', 'facet of', 'pooling regions spaced k pixels apart')
('classification layer', 'instance of', 'classifying images')
('summary statistics', 'part of', 'final pooling layer')
('final pooling layer', 'instance of', 'pooling over spatial regions')
('quadrant of an image', 'facet of', 'final pooling layer')"
9.5,10,"('CONVOLUTIONAL NETWORKS', 'POOLING STAGE', 'DETECTOR STAGE', 'MAX POOLING')","('CONVOLUTIONAL NETWORKS', 'part of', 'POOLING STAGE')
('CONVOLUTIONAL NETWORKS', 'part of', 'DETECTOR STAGE')
('POOLING STAGE', 'instance of', 'MAX POOLING')"
9.6,0,"('convolutional networks', 'pooling unit', 'detector unit', 'max pooling unit', 'rotation', 'filters', 'hand-written 5', 'activation', 'maxout networks', 'Goodfellow et al., 2013a', 'spatial positions', 'translation', 'downsampling', 'representation size', 'computational burden', 'statistical burden', 'next layer')","('convolutional networks', 'instance of', 'pooling unit')
('pooling unit', 'instance of', 'detector unit')
('detector unit', 'instance of', 'max pooling unit')
('rotation', 'instance of', 'filters')
('hand-written 5', 'instance of', 'activation')
('maxout networks', 'instance of', 'Goodfellow et al., 2013a')
('spatial positions', 'instance of', 'translation')
('downsampling', 'instance of', 'representation size')
('computational burden', 'instance of', 'statistical burden')"
9.6,1,"('theoretical work', 'pooling', 'clustering algorithm', 'pooling structure', 'top-down information', 'Boltzmann machines', 'autoencoders', 'convolutional Boltzmann machines', 'differentiable networks', 'convolution and pooling', 'prior probability distribution', 'weak prior', 'strong prior', 'infinitely strong prior', 'convolutional net', 'fully connected net', 'hidden unit', 'weights', 'receptive field')","('pooling', 'instance of', 'clustering algorithm')
('pooling structure', 'instance of', 'top-down information')
('Boltzmann machines', 'instance of', 'autoencoders')
('convolutional Boltzmann machines', 'instance of', 'differentiable networks')
('convolution and pooling', 'instance of', 'prior probability distribution')
('weak prior', 'instance of', 'strong prior')
('strong prior', 'instance of', 'infinitely strong prior')
('convolutional net', 'instance of', 'fully connected net')
('hidden unit', 'instance of', 'weights')
('receptive field', 'instance of', 'convolution and pooling')"
9.7,0,"('softmax', 'matrix', 'average', 'multiply', 'pooling', 'reshape', 'vector', 'convolution', 'ReLU', 'pooling', 'input image', 'architectures', 'classification', 'convolutional network', 'fixed image size', 'convolutional feature map', 'spatial dimensions', 'feedforward network classifier', 'variable-sized image', 'fully connected section', 'fixed-size vector', 'fully connected weight layer', 'last convolutional layer', 'feature map', 'softmax classifier')","('softmax', 'part of', 'matrix')
('pooling', 'based on', 'matrix')
('reshape', 'based on', 'vector')
('convolution', 'based on', 'matrix')
('ReLU', 'based on', 'matrix')
('pooling', 'based on', 'matrix')
('input image', 'part of', 'architectures')
('classification', 'based on', 'architectures')
('classification', 'part of', 'feedforward network classifier')
('convolutional network', 'based on', 'architectures')
('fixed image size', 'based on', 'variable-sized image')
('convolutional feature map', 'based on', 'spatial dimensions')
('fully connected section', 'based on', 'convolutional feature map')
('fixed-size vector', 'based on', 'fully connected weight layer')
('last convolutional layer', 'based on', 'feature map')
('softmax classifier', 'based on', 'last convolutional layer')"
9.7,1,"('convolutional networks', 'local interactions', 'translation equivariant', 'pooling', 'invariant to translations', 'underfitting', 'convolutional net', 'fully connected net', 'computational wasteful', 'insights', 'task relies on preserving precise spatial information', 'Szegedy et al., 2014a', 'translation invariance prior', 'statistical learning performance', 'convolutional models', 'benchmarks', 'permutation invariant', 'discrete convolution operation', 'neural networks', 'many applications of convolution', 'single kernel', 'many kinds of features', 'many locations')","('convolutional networks', 'based on', 'local interactions')
('convolutional networks', 'based on', 'translation equivariant')
('pooling', 'based on', 'convolutional networks')
('pooling', 'based on', 'invariant to translations')
('underfitting', 'based on', 'convolutional networks')
('convolutional net', 'subclass of', 'neural networks')
('fully connected net', 'subclass of', 'neural networks')
('computational wasteful', 'based on', 'fully connected net')
('insights', 'part of', 'convolutional networks')
('task relies on preserving precise spatial information', 'based on', 'convolutional networks')
('Szegedy et al., 2014a', 'part of', 'convolutional networks')
('translation invariance prior', 'part of', 'convolutional networks')
('statistical learning performance', 'based on', 'convolutional models')
('benchmarks', 'based on', 'statistical learning performance')
('permutation invariant', 'based on', 'discrete convolution operation')
('discrete convolution operation', 'based on', 'neural networks')
('many applications of convolution', 'based on', 'neural networks')
('single kernel', 'subclass of', 'neural networks')
('many kinds of features', 'part of', 'neural networks')
('many locations', 'part of', 'neural networks')"
